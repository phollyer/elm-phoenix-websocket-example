/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../deps/phoenix/priv/static/phoenix.js":
/*!**********************************************!*\
  !*** ../deps/phoenix/priv/static/phoenix.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function (e, t) {\n   true ? module.exports = t() : undefined;\n}(this, function () {\n  return function (e) {\n    var t = {};\n\n    function n(i) {\n      if (t[i]) return t[i].exports;\n      var o = t[i] = {\n        i: i,\n        l: !1,\n        exports: {}\n      };\n      return e[i].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n    }\n\n    return n.m = e, n.c = t, n.d = function (e, t, i) {\n      n.o(e, t) || Object.defineProperty(e, t, {\n        enumerable: !0,\n        get: i\n      });\n    }, n.r = function (e) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (e, t) {\n      if (1 & t && (e = n(e)), 8 & t) return e;\n      if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n      var i = Object.create(null);\n      if (n.r(i), Object.defineProperty(i, \"default\", {\n        enumerable: !0,\n        value: e\n      }), 2 & t && \"string\" != typeof e) for (var o in e) n.d(i, o, function (t) {\n        return e[t];\n      }.bind(null, o));\n      return i;\n    }, n.n = function (e) {\n      var t = e && e.__esModule ? function () {\n        return e.default;\n      } : function () {\n        return e;\n      };\n      return n.d(t, \"a\", t), t;\n    }, n.o = function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    }, n.p = \"\", n(n.s = 0);\n  }([function (e, t, n) {\n    (function (t) {\n      e.exports = t.Phoenix = n(2);\n    }).call(this, n(1));\n  }, function (e, t) {\n    var n;\n\n    n = function () {\n      return this;\n    }();\n\n    try {\n      n = n || new Function(\"return this\")();\n    } catch (e) {\n      \"object\" == typeof window && (n = window);\n    }\n\n    e.exports = n;\n  }, function (e, t, n) {\n    \"use strict\";\n\n    function i(e) {\n      return function (e) {\n        if (Array.isArray(e)) return a(e);\n      }(e) || function (e) {\n        if (\"undefined\" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e);\n      }(e) || s(e) || function () {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }();\n    }\n\n    function o(e) {\n      return (o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n        return typeof e;\n      } : function (e) {\n        return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n      })(e);\n    }\n\n    function r(e, t) {\n      return function (e) {\n        if (Array.isArray(e)) return e;\n      }(e) || function (e, t) {\n        if (\"undefined\" == typeof Symbol || !(Symbol.iterator in Object(e))) return;\n        var n = [],\n            i = !0,\n            o = !1,\n            r = void 0;\n\n        try {\n          for (var s, a = e[Symbol.iterator](); !(i = (s = a.next()).done) && (n.push(s.value), !t || n.length !== t); i = !0);\n        } catch (e) {\n          o = !0, r = e;\n        } finally {\n          try {\n            i || null == a.return || a.return();\n          } finally {\n            if (o) throw r;\n          }\n        }\n\n        return n;\n      }(e, t) || s(e, t) || function () {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }();\n    }\n\n    function s(e, t) {\n      if (e) {\n        if (\"string\" == typeof e) return a(e, t);\n        var n = Object.prototype.toString.call(e).slice(8, -1);\n        return \"Object\" === n && e.constructor && (n = e.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(n) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(e, t) : void 0;\n      }\n    }\n\n    function a(e, t) {\n      (null == t || t > e.length) && (t = e.length);\n\n      for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];\n\n      return i;\n    }\n\n    function c(e, t) {\n      if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    function u(e, t) {\n      for (var n = 0; n < t.length; n++) {\n        var i = t[n];\n        i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);\n      }\n    }\n\n    function h(e, t, n) {\n      return t && u(e.prototype, t), n && u(e, n), e;\n    }\n\n    n.r(t), n.d(t, \"Channel\", function () {\n      return _;\n    }), n.d(t, \"Serializer\", function () {\n      return H;\n    }), n.d(t, \"Socket\", function () {\n      return U;\n    }), n.d(t, \"LongPoll\", function () {\n      return D;\n    }), n.d(t, \"Ajax\", function () {\n      return M;\n    }), n.d(t, \"Presence\", function () {\n      return N;\n    });\n\n    var l = \"undefined\" != typeof self ? self : null,\n        f = \"undefined\" != typeof window ? window : null,\n        d = l || f || void 0,\n        p = 0,\n        v = 1,\n        y = 2,\n        m = 3,\n        g = \"closed\",\n        k = \"errored\",\n        b = \"joined\",\n        j = \"joining\",\n        C = \"leaving\",\n        E = \"phx_close\",\n        R = \"phx_error\",\n        T = \"phx_join\",\n        S = \"phx_reply\",\n        w = \"phx_leave\",\n        A = [E, R, T, S, w],\n        L = \"longpoll\",\n        x = \"websocket\",\n        O = function (e) {\n      if (\"function\" == typeof e) return e;\n      return function () {\n        return e;\n      };\n    },\n        P = function () {\n      function e(t, n, i, o) {\n        c(this, e), this.channel = t, this.event = n, this.payload = i || function () {\n          return {};\n        }, this.receivedResp = null, this.timeout = o, this.timeoutTimer = null, this.recHooks = [], this.sent = !1;\n      }\n\n      return h(e, [{\n        key: \"resend\",\n        value: function (e) {\n          this.timeout = e, this.reset(), this.send();\n        }\n      }, {\n        key: \"send\",\n        value: function () {\n          this.hasReceived(\"timeout\") || (this.startTimeout(), this.sent = !0, this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload(),\n            ref: this.ref,\n            join_ref: this.channel.joinRef()\n          }));\n        }\n      }, {\n        key: \"receive\",\n        value: function (e, t) {\n          return this.hasReceived(e) && t(this.receivedResp.response), this.recHooks.push({\n            status: e,\n            callback: t\n          }), this;\n        }\n      }, {\n        key: \"reset\",\n        value: function () {\n          this.cancelRefEvent(), this.ref = null, this.refEvent = null, this.receivedResp = null, this.sent = !1;\n        }\n      }, {\n        key: \"matchReceive\",\n        value: function (e) {\n          var t = e.status,\n              n = e.response;\n          e.ref;\n          this.recHooks.filter(function (e) {\n            return e.status === t;\n          }).forEach(function (e) {\n            return e.callback(n);\n          });\n        }\n      }, {\n        key: \"cancelRefEvent\",\n        value: function () {\n          this.refEvent && this.channel.off(this.refEvent);\n        }\n      }, {\n        key: \"cancelTimeout\",\n        value: function () {\n          clearTimeout(this.timeoutTimer), this.timeoutTimer = null;\n        }\n      }, {\n        key: \"startTimeout\",\n        value: function () {\n          var e = this;\n          this.timeoutTimer && this.cancelTimeout(), this.ref = this.channel.socket.makeRef(), this.refEvent = this.channel.replyEventName(this.ref), this.channel.on(this.refEvent, function (t) {\n            e.cancelRefEvent(), e.cancelTimeout(), e.receivedResp = t, e.matchReceive(t);\n          }), this.timeoutTimer = setTimeout(function () {\n            e.trigger(\"timeout\", {});\n          }, this.timeout);\n        }\n      }, {\n        key: \"hasReceived\",\n        value: function (e) {\n          return this.receivedResp && this.receivedResp.status === e;\n        }\n      }, {\n        key: \"trigger\",\n        value: function (e, t) {\n          this.channel.trigger(this.refEvent, {\n            status: e,\n            response: t\n          });\n        }\n      }]), e;\n    }(),\n        _ = function () {\n      function e(t, n, i) {\n        var o = this;\n        c(this, e), this.state = g, this.topic = t, this.params = O(n || {}), this.socket = i, this.bindings = [], this.bindingRef = 0, this.timeout = this.socket.timeout, this.joinedOnce = !1, this.joinPush = new P(this, T, this.params, this.timeout), this.pushBuffer = [], this.stateChangeRefs = [], this.rejoinTimer = new J(function () {\n          o.socket.isConnected() && o.rejoin();\n        }, this.socket.rejoinAfterMs), this.stateChangeRefs.push(this.socket.onError(function () {\n          return o.rejoinTimer.reset();\n        })), this.stateChangeRefs.push(this.socket.onOpen(function () {\n          o.rejoinTimer.reset(), o.isErrored() && o.rejoin();\n        })), this.joinPush.receive(\"ok\", function () {\n          o.state = b, o.rejoinTimer.reset(), o.pushBuffer.forEach(function (e) {\n            return e.send();\n          }), o.pushBuffer = [];\n        }), this.joinPush.receive(\"error\", function () {\n          o.state = k, o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\n        }), this.onClose(function () {\n          o.rejoinTimer.reset(), o.socket.hasLogger() && o.socket.log(\"channel\", \"close \".concat(o.topic, \" \").concat(o.joinRef())), o.state = g, o.socket.remove(o);\n        }), this.onError(function (e) {\n          o.socket.hasLogger() && o.socket.log(\"channel\", \"error \".concat(o.topic), e), o.isJoining() && o.joinPush.reset(), o.state = k, o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\n        }), this.joinPush.receive(\"timeout\", function () {\n          o.socket.hasLogger() && o.socket.log(\"channel\", \"timeout \".concat(o.topic, \" (\").concat(o.joinRef(), \")\"), o.joinPush.timeout), new P(o, w, O({}), o.timeout).send(), o.state = k, o.joinPush.reset(), o.socket.isConnected() && o.rejoinTimer.scheduleTimeout();\n        }), this.on(S, function (e, t) {\n          o.trigger(o.replyEventName(t), e);\n        });\n      }\n\n      return h(e, [{\n        key: \"join\",\n        value: function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\n          if (this.joinedOnce) throw new Error(\"tried to join multiple times. 'join' can only be called a single time per channel instance\");\n          return this.timeout = e, this.joinedOnce = !0, this.rejoin(), this.joinPush;\n        }\n      }, {\n        key: \"onClose\",\n        value: function (e) {\n          this.on(E, e);\n        }\n      }, {\n        key: \"onError\",\n        value: function (e) {\n          return this.on(R, function (t) {\n            return e(t);\n          });\n        }\n      }, {\n        key: \"on\",\n        value: function (e, t) {\n          var n = this.bindingRef++;\n          return this.bindings.push({\n            event: e,\n            ref: n,\n            callback: t\n          }), n;\n        }\n      }, {\n        key: \"off\",\n        value: function (e, t) {\n          this.bindings = this.bindings.filter(function (n) {\n            return !(n.event === e && (void 0 === t || t === n.ref));\n          });\n        }\n      }, {\n        key: \"canPush\",\n        value: function () {\n          return this.socket.isConnected() && this.isJoined();\n        }\n      }, {\n        key: \"push\",\n        value: function (e, t) {\n          var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.timeout;\n          if (!this.joinedOnce) throw new Error(\"tried to push '\".concat(e, \"' to '\").concat(this.topic, \"' before joining. Use channel.join() before pushing events\"));\n          var i = new P(this, e, function () {\n            return t;\n          }, n);\n          return this.canPush() ? i.send() : (i.startTimeout(), this.pushBuffer.push(i)), i;\n        }\n      }, {\n        key: \"leave\",\n        value: function () {\n          var e = this,\n              t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\n          this.rejoinTimer.reset(), this.joinPush.cancelTimeout(), this.state = C;\n\n          var n = function () {\n            e.socket.hasLogger() && e.socket.log(\"channel\", \"leave \".concat(e.topic)), e.trigger(E, \"leave\");\n          },\n              i = new P(this, w, O({}), t);\n\n          return i.receive(\"ok\", function () {\n            return n();\n          }).receive(\"timeout\", function () {\n            return n();\n          }), i.send(), this.canPush() || i.trigger(\"ok\", {}), i;\n        }\n      }, {\n        key: \"onMessage\",\n        value: function (e, t, n) {\n          return t;\n        }\n      }, {\n        key: \"isLifecycleEvent\",\n        value: function (e) {\n          return A.indexOf(e) >= 0;\n        }\n      }, {\n        key: \"isMember\",\n        value: function (e, t, n, i) {\n          return this.topic === e && (!i || i === this.joinRef() || !this.isLifecycleEvent(t) || (this.socket.hasLogger() && this.socket.log(\"channel\", \"dropping outdated message\", {\n            topic: e,\n            event: t,\n            payload: n,\n            joinRef: i\n          }), !1));\n        }\n      }, {\n        key: \"joinRef\",\n        value: function () {\n          return this.joinPush.ref;\n        }\n      }, {\n        key: \"rejoin\",\n        value: function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.timeout;\n          this.isLeaving() || (this.socket.leaveOpenTopic(this.topic), this.state = j, this.joinPush.resend(e));\n        }\n      }, {\n        key: \"trigger\",\n        value: function (e, t, n, i) {\n          var o = this.onMessage(e, t, n, i);\n          if (t && !o) throw new Error(\"channel onMessage callbacks must return the payload, modified or unmodified\");\n\n          for (var r = this.bindings.filter(function (t) {\n            return t.event === e;\n          }), s = 0; s < r.length; s++) {\n            r[s].callback(o, n, i || this.joinRef());\n          }\n        }\n      }, {\n        key: \"replyEventName\",\n        value: function (e) {\n          return \"chan_reply_\".concat(e);\n        }\n      }, {\n        key: \"isClosed\",\n        value: function () {\n          return this.state === g;\n        }\n      }, {\n        key: \"isErrored\",\n        value: function () {\n          return this.state === k;\n        }\n      }, {\n        key: \"isJoined\",\n        value: function () {\n          return this.state === b;\n        }\n      }, {\n        key: \"isJoining\",\n        value: function () {\n          return this.state === j;\n        }\n      }, {\n        key: \"isLeaving\",\n        value: function () {\n          return this.state === C;\n        }\n      }]), e;\n    }(),\n        H = {\n      HEADER_LENGTH: 1,\n      META_LENGTH: 4,\n      KINDS: {\n        push: 0,\n        reply: 1,\n        broadcast: 2\n      },\n      encode: function (e, t) {\n        if (e.payload.constructor === ArrayBuffer) return t(this.binaryEncode(e));\n        var n = [e.join_ref, e.ref, e.topic, e.event, e.payload];\n        return t(JSON.stringify(n));\n      },\n      decode: function (e, t) {\n        if (e.constructor === ArrayBuffer) return t(this.binaryDecode(e));\n        var n = r(JSON.parse(e), 5);\n        return t({\n          join_ref: n[0],\n          ref: n[1],\n          topic: n[2],\n          event: n[3],\n          payload: n[4]\n        });\n      },\n      binaryEncode: function (e) {\n        var t = e.join_ref,\n            n = e.ref,\n            i = e.event,\n            o = e.topic,\n            r = e.payload,\n            s = this.META_LENGTH + t.length + n.length + o.length + i.length,\n            a = new ArrayBuffer(this.HEADER_LENGTH + s),\n            c = new DataView(a),\n            u = 0;\n        c.setUint8(u++, this.KINDS.push), c.setUint8(u++, t.length), c.setUint8(u++, n.length), c.setUint8(u++, o.length), c.setUint8(u++, i.length), Array.from(t, function (e) {\n          return c.setUint8(u++, e.charCodeAt(0));\n        }), Array.from(n, function (e) {\n          return c.setUint8(u++, e.charCodeAt(0));\n        }), Array.from(o, function (e) {\n          return c.setUint8(u++, e.charCodeAt(0));\n        }), Array.from(i, function (e) {\n          return c.setUint8(u++, e.charCodeAt(0));\n        });\n        var h = new Uint8Array(a.byteLength + r.byteLength);\n        return h.set(new Uint8Array(a), 0), h.set(new Uint8Array(r), a.byteLength), h.buffer;\n      },\n      binaryDecode: function (e) {\n        var t = new DataView(e),\n            n = t.getUint8(0),\n            i = new TextDecoder();\n\n        switch (n) {\n          case this.KINDS.push:\n            return this.decodePush(e, t, i);\n\n          case this.KINDS.reply:\n            return this.decodeReply(e, t, i);\n\n          case this.KINDS.broadcast:\n            return this.decodeBroadcast(e, t, i);\n        }\n      },\n      decodePush: function (e, t, n) {\n        var i = t.getUint8(1),\n            o = t.getUint8(2),\n            r = t.getUint8(3),\n            s = this.HEADER_LENGTH + this.META_LENGTH - 1,\n            a = n.decode(e.slice(s, s + i));\n        s += i;\n        var c = n.decode(e.slice(s, s + o));\n        s += o;\n        var u = n.decode(e.slice(s, s + r));\n        return s += r, {\n          join_ref: a,\n          ref: null,\n          topic: c,\n          event: u,\n          payload: e.slice(s, e.byteLength)\n        };\n      },\n      decodeReply: function (e, t, n) {\n        var i = t.getUint8(1),\n            o = t.getUint8(2),\n            r = t.getUint8(3),\n            s = t.getUint8(4),\n            a = this.HEADER_LENGTH + this.META_LENGTH,\n            c = n.decode(e.slice(a, a + i));\n        a += i;\n        var u = n.decode(e.slice(a, a + o));\n        a += o;\n        var h = n.decode(e.slice(a, a + r));\n        a += r;\n        var l = n.decode(e.slice(a, a + s));\n        a += s;\n        var f = e.slice(a, e.byteLength);\n        return {\n          join_ref: c,\n          ref: u,\n          topic: h,\n          event: S,\n          payload: {\n            status: l,\n            response: f\n          }\n        };\n      },\n      decodeBroadcast: function (e, t, n) {\n        var i = t.getUint8(1),\n            o = t.getUint8(2),\n            r = this.HEADER_LENGTH + 2,\n            s = n.decode(e.slice(r, r + i));\n        r += i;\n        var a = n.decode(e.slice(r, r + o));\n        return r += o, {\n          join_ref: null,\n          ref: null,\n          topic: s,\n          event: a,\n          payload: e.slice(r, e.byteLength)\n        };\n      }\n    },\n        U = function () {\n      function e(t) {\n        var n = this,\n            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n        c(this, e), this.stateChangeCallbacks = {\n          open: [],\n          close: [],\n          error: [],\n          message: []\n        }, this.channels = [], this.sendBuffer = [], this.ref = 0, this.timeout = i.timeout || 1e4, this.transport = i.transport || d.WebSocket || D, this.defaultEncoder = H.encode.bind(H), this.defaultDecoder = H.decode.bind(H), this.closeWasClean = !1, this.unloaded = !1, this.binaryType = i.binaryType || \"arraybuffer\", this.transport !== D ? (this.encode = i.encode || this.defaultEncoder, this.decode = i.decode || this.defaultDecoder) : (this.encode = this.defaultEncoder, this.decode = this.defaultDecoder), f && f.addEventListener && f.addEventListener(\"unload\", function (e) {\n          n.conn && (n.unloaded = !0, n.abnormalClose(\"unloaded\"));\n        }), this.heartbeatIntervalMs = i.heartbeatIntervalMs || 3e4, this.rejoinAfterMs = function (e) {\n          return i.rejoinAfterMs ? i.rejoinAfterMs(e) : [1e3, 2e3, 5e3][e - 1] || 1e4;\n        }, this.reconnectAfterMs = function (e) {\n          return n.unloaded ? 100 : i.reconnectAfterMs ? i.reconnectAfterMs(e) : [10, 50, 100, 150, 200, 250, 500, 1e3, 2e3][e - 1] || 5e3;\n        }, this.logger = i.logger || null, this.longpollerTimeout = i.longpollerTimeout || 2e4, this.params = O(i.params || {}), this.endPoint = \"\".concat(t, \"/\").concat(x), this.vsn = i.vsn || \"2.0.0\", this.heartbeatTimer = null, this.pendingHeartbeatRef = null, this.reconnectTimer = new J(function () {\n          n.teardown(function () {\n            return n.connect();\n          });\n        }, this.reconnectAfterMs);\n      }\n\n      return h(e, [{\n        key: \"protocol\",\n        value: function () {\n          return location.protocol.match(/^https/) ? \"wss\" : \"ws\";\n        }\n      }, {\n        key: \"endPointURL\",\n        value: function () {\n          var e = M.appendParams(M.appendParams(this.endPoint, this.params()), {\n            vsn: this.vsn\n          });\n          return \"/\" !== e.charAt(0) ? e : \"/\" === e.charAt(1) ? \"\".concat(this.protocol(), \":\").concat(e) : \"\".concat(this.protocol(), \"://\").concat(location.host).concat(e);\n        }\n      }, {\n        key: \"disconnect\",\n        value: function (e, t, n) {\n          this.closeWasClean = !0, this.reconnectTimer.reset(), this.teardown(e, t, n);\n        }\n      }, {\n        key: \"connect\",\n        value: function (e) {\n          var t = this;\n          e && (console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\"), this.params = O(e)), this.conn || (this.closeWasClean = !1, this.conn = new this.transport(this.endPointURL()), this.conn.binaryType = this.binaryType, this.conn.timeout = this.longpollerTimeout, this.conn.onopen = function () {\n            return t.onConnOpen();\n          }, this.conn.onerror = function (e) {\n            return t.onConnError(e);\n          }, this.conn.onmessage = function (e) {\n            return t.onConnMessage(e);\n          }, this.conn.onclose = function (e) {\n            return t.onConnClose(e);\n          });\n        }\n      }, {\n        key: \"log\",\n        value: function (e, t, n) {\n          this.logger(e, t, n);\n        }\n      }, {\n        key: \"hasLogger\",\n        value: function () {\n          return null !== this.logger;\n        }\n      }, {\n        key: \"onOpen\",\n        value: function (e) {\n          var t = this.makeRef();\n          return this.stateChangeCallbacks.open.push([t, e]), t;\n        }\n      }, {\n        key: \"onClose\",\n        value: function (e) {\n          var t = this.makeRef();\n          return this.stateChangeCallbacks.close.push([t, e]), t;\n        }\n      }, {\n        key: \"onError\",\n        value: function (e) {\n          var t = this.makeRef();\n          return this.stateChangeCallbacks.error.push([t, e]), t;\n        }\n      }, {\n        key: \"onMessage\",\n        value: function (e) {\n          var t = this.makeRef();\n          return this.stateChangeCallbacks.message.push([t, e]), t;\n        }\n      }, {\n        key: \"onConnOpen\",\n        value: function () {\n          this.hasLogger() && this.log(\"transport\", \"connected to \".concat(this.endPointURL())), this.unloaded = !1, this.closeWasClean = !1, this.flushSendBuffer(), this.reconnectTimer.reset(), this.resetHeartbeat(), this.stateChangeCallbacks.open.forEach(function (e) {\n            return (0, r(e, 2)[1])();\n          });\n        }\n      }, {\n        key: \"resetHeartbeat\",\n        value: function () {\n          var e = this;\n          this.conn && this.conn.skipHeartbeat || (this.pendingHeartbeatRef = null, clearInterval(this.heartbeatTimer), this.heartbeatTimer = setInterval(function () {\n            return e.sendHeartbeat();\n          }, this.heartbeatIntervalMs));\n        }\n      }, {\n        key: \"teardown\",\n        value: function (e, t, n) {\n          var i = this;\n          if (!this.conn) return e && e();\n          this.waitForBufferDone(function () {\n            i.conn && (t ? i.conn.close(t, n || \"\") : i.conn.close()), i.waitForSocketClosed(function () {\n              i.conn && (i.conn.onclose = function () {}, i.conn = null), e && e();\n            });\n          });\n        }\n      }, {\n        key: \"waitForBufferDone\",\n        value: function (e) {\n          var t = this,\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n          5 !== n && this.conn && this.conn.bufferedAmount ? setTimeout(function () {\n            t.waitForBufferDone(e, n + 1);\n          }, 150 * n) : e();\n        }\n      }, {\n        key: \"waitForSocketClosed\",\n        value: function (e) {\n          var t = this,\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n          5 !== n && this.conn && this.conn.readyState !== m ? setTimeout(function () {\n            t.waitForSocketClosed(e, n + 1);\n          }, 150 * n) : e();\n        }\n      }, {\n        key: \"onConnClose\",\n        value: function (e) {\n          this.hasLogger() && this.log(\"transport\", \"close\", e), this.triggerChanError(), clearInterval(this.heartbeatTimer), this.closeWasClean || this.reconnectTimer.scheduleTimeout(), this.stateChangeCallbacks.close.forEach(function (t) {\n            return (0, r(t, 2)[1])(e);\n          });\n        }\n      }, {\n        key: \"onConnError\",\n        value: function (e) {\n          this.hasLogger() && this.log(\"transport\", e), this.triggerChanError(), this.stateChangeCallbacks.error.forEach(function (t) {\n            return (0, r(t, 2)[1])(e);\n          });\n        }\n      }, {\n        key: \"triggerChanError\",\n        value: function () {\n          this.channels.forEach(function (e) {\n            e.isErrored() || e.isLeaving() || e.isClosed() || e.trigger(R);\n          });\n        }\n      }, {\n        key: \"connectionState\",\n        value: function () {\n          switch (this.conn && this.conn.readyState) {\n            case p:\n              return \"connecting\";\n\n            case v:\n              return \"open\";\n\n            case y:\n              return \"closing\";\n\n            default:\n              return \"closed\";\n          }\n        }\n      }, {\n        key: \"isConnected\",\n        value: function () {\n          return \"open\" === this.connectionState();\n        }\n      }, {\n        key: \"remove\",\n        value: function (e) {\n          this.off(e.stateChangeRefs), this.channels = this.channels.filter(function (t) {\n            return t.joinRef() !== e.joinRef();\n          });\n        }\n      }, {\n        key: \"off\",\n        value: function (e) {\n          for (var t in this.stateChangeCallbacks) this.stateChangeCallbacks[t] = this.stateChangeCallbacks[t].filter(function (t) {\n            var n = r(t, 1)[0];\n            return -1 === e.indexOf(n);\n          });\n        }\n      }, {\n        key: \"channel\",\n        value: function (e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n              n = new _(e, t, this);\n          return this.channels.push(n), n;\n        }\n      }, {\n        key: \"push\",\n        value: function (e) {\n          var t = this;\n\n          if (this.hasLogger()) {\n            var n = e.topic,\n                i = e.event,\n                o = e.payload,\n                r = e.ref,\n                s = e.join_ref;\n            this.log(\"push\", \"\".concat(n, \" \").concat(i, \" (\").concat(s, \", \").concat(r, \")\"), o);\n          }\n\n          this.isConnected() ? this.encode(e, function (e) {\n            return t.conn.send(e);\n          }) : this.sendBuffer.push(function () {\n            return t.encode(e, function (e) {\n              return t.conn.send(e);\n            });\n          });\n        }\n      }, {\n        key: \"makeRef\",\n        value: function () {\n          var e = this.ref + 1;\n          return e === this.ref ? this.ref = 0 : this.ref = e, this.ref.toString();\n        }\n      }, {\n        key: \"sendHeartbeat\",\n        value: function () {\n          if (this.isConnected()) {\n            if (this.pendingHeartbeatRef) return this.pendingHeartbeatRef = null, this.hasLogger() && this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\"), void this.abnormalClose(\"heartbeat timeout\");\n            this.pendingHeartbeatRef = this.makeRef(), this.push({\n              topic: \"phoenix\",\n              event: \"heartbeat\",\n              payload: {},\n              ref: this.pendingHeartbeatRef\n            });\n          }\n        }\n      }, {\n        key: \"abnormalClose\",\n        value: function (e) {\n          this.closeWasClean = !1, this.conn.readyState === v && this.conn.close(1e3, e);\n        }\n      }, {\n        key: \"flushSendBuffer\",\n        value: function () {\n          this.isConnected() && this.sendBuffer.length > 0 && (this.sendBuffer.forEach(function (e) {\n            return e();\n          }), this.sendBuffer = []);\n        }\n      }, {\n        key: \"onConnMessage\",\n        value: function (e) {\n          var t = this;\n          this.decode(e.data, function (e) {\n            var n = e.topic,\n                i = e.event,\n                o = e.payload,\n                s = e.ref,\n                a = e.join_ref;\n            s && s === t.pendingHeartbeatRef && (t.pendingHeartbeatRef = null), t.hasLogger() && t.log(\"receive\", \"\".concat(o.status || \"\", \" \").concat(n, \" \").concat(i, \" \").concat(s && \"(\" + s + \")\" || \"\"), o);\n\n            for (var c = 0; c < t.channels.length; c++) {\n              var u = t.channels[c];\n              u.isMember(n, i, o, a) && u.trigger(i, o, s, a);\n            }\n\n            for (var h = 0; h < t.stateChangeCallbacks.message.length; h++) {\n              (0, r(t.stateChangeCallbacks.message[h], 2)[1])(e);\n            }\n          });\n        }\n      }, {\n        key: \"leaveOpenTopic\",\n        value: function (e) {\n          var t = this.channels.find(function (t) {\n            return t.topic === e && (t.isJoined() || t.isJoining());\n          });\n          t && (this.hasLogger() && this.log(\"transport\", 'leaving duplicate topic \"'.concat(e, '\"')), t.leave());\n        }\n      }]), e;\n    }(),\n        D = function () {\n      function e(t) {\n        c(this, e), this.endPoint = null, this.token = null, this.skipHeartbeat = !0, this.onopen = function () {}, this.onerror = function () {}, this.onmessage = function () {}, this.onclose = function () {}, this.pollEndpoint = this.normalizeEndpoint(t), this.readyState = p, this.poll();\n      }\n\n      return h(e, [{\n        key: \"normalizeEndpoint\",\n        value: function (e) {\n          return e.replace(\"ws://\", \"http://\").replace(\"wss://\", \"https://\").replace(new RegExp(\"(.*)/\" + x), \"$1/\" + L);\n        }\n      }, {\n        key: \"endpointURL\",\n        value: function () {\n          return M.appendParams(this.pollEndpoint, {\n            token: this.token\n          });\n        }\n      }, {\n        key: \"closeAndRetry\",\n        value: function () {\n          this.close(), this.readyState = p;\n        }\n      }, {\n        key: \"ontimeout\",\n        value: function () {\n          this.onerror(\"timeout\"), this.closeAndRetry();\n        }\n      }, {\n        key: \"poll\",\n        value: function () {\n          var e = this;\n          this.readyState !== v && this.readyState !== p || M.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), function (t) {\n            if (t) {\n              var n = t.status,\n                  i = t.token,\n                  o = t.messages;\n              e.token = i;\n            } else n = 0;\n\n            switch (n) {\n              case 200:\n                o.forEach(function (t) {\n                  return e.onmessage({\n                    data: t\n                  });\n                }), e.poll();\n                break;\n\n              case 204:\n                e.poll();\n                break;\n\n              case 410:\n                e.readyState = v, e.onopen(), e.poll();\n                break;\n\n              case 403:\n                e.onerror(), e.close();\n                break;\n\n              case 0:\n              case 500:\n                e.onerror(), e.closeAndRetry();\n                break;\n\n              default:\n                throw new Error(\"unhandled poll status \".concat(n));\n            }\n          });\n        }\n      }, {\n        key: \"send\",\n        value: function (e) {\n          var t = this;\n          M.request(\"POST\", this.endpointURL(), \"application/json\", e, this.timeout, this.onerror.bind(this, \"timeout\"), function (e) {\n            e && 200 === e.status || (t.onerror(e && e.status), t.closeAndRetry());\n          });\n        }\n      }, {\n        key: \"close\",\n        value: function (e, t) {\n          this.readyState = m, this.onclose();\n        }\n      }]), e;\n    }(),\n        M = function () {\n      function e() {\n        c(this, e);\n      }\n\n      return h(e, null, [{\n        key: \"request\",\n        value: function (e, t, n, i, o, r, s) {\n          if (d.XDomainRequest) {\n            var a = new XDomainRequest();\n            this.xdomainRequest(a, e, t, i, o, r, s);\n          } else {\n            var c = new d.XMLHttpRequest();\n            this.xhrRequest(c, e, t, n, i, o, r, s);\n          }\n        }\n      }, {\n        key: \"xdomainRequest\",\n        value: function (e, t, n, i, o, r, s) {\n          var a = this;\n          e.timeout = o, e.open(t, n), e.onload = function () {\n            var t = a.parseJSON(e.responseText);\n            s && s(t);\n          }, r && (e.ontimeout = r), e.onprogress = function () {}, e.send(i);\n        }\n      }, {\n        key: \"xhrRequest\",\n        value: function (e, t, n, i, o, r, s, a) {\n          var c = this;\n          e.open(t, n, !0), e.timeout = r, e.setRequestHeader(\"Content-Type\", i), e.onerror = function () {\n            a && a(null);\n          }, e.onreadystatechange = function () {\n            if (e.readyState === c.states.complete && a) {\n              var t = c.parseJSON(e.responseText);\n              a(t);\n            }\n          }, s && (e.ontimeout = s), e.send(o);\n        }\n      }, {\n        key: \"parseJSON\",\n        value: function (e) {\n          if (!e || \"\" === e) return null;\n\n          try {\n            return JSON.parse(e);\n          } catch (t) {\n            return console && console.log(\"failed to parse JSON response\", e), null;\n          }\n        }\n      }, {\n        key: \"serialize\",\n        value: function (e, t) {\n          var n = [];\n\n          for (var i in e) if (e.hasOwnProperty(i)) {\n            var r = t ? \"\".concat(t, \"[\").concat(i, \"]\") : i,\n                s = e[i];\n            \"object\" === o(s) ? n.push(this.serialize(s, r)) : n.push(encodeURIComponent(r) + \"=\" + encodeURIComponent(s));\n          }\n\n          return n.join(\"&\");\n        }\n      }, {\n        key: \"appendParams\",\n        value: function (e, t) {\n          if (0 === Object.keys(t).length) return e;\n          var n = e.match(/\\?/) ? \"&\" : \"?\";\n          return \"\".concat(e).concat(n).concat(this.serialize(t));\n        }\n      }]), e;\n    }();\n\n    M.states = {\n      complete: 4\n    };\n\n    var N = function () {\n      function e(t) {\n        var n = this,\n            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n        c(this, e);\n        var o = i.events || {\n          state: \"presence_state\",\n          diff: \"presence_diff\"\n        };\n        this.state = {}, this.pendingDiffs = [], this.channel = t, this.joinRef = null, this.caller = {\n          onJoin: function () {},\n          onLeave: function () {},\n          onSync: function () {}\n        }, this.channel.on(o.state, function (t) {\n          var i = n.caller,\n              o = i.onJoin,\n              r = i.onLeave,\n              s = i.onSync;\n          n.joinRef = n.channel.joinRef(), n.state = e.syncState(n.state, t, o, r), n.pendingDiffs.forEach(function (t) {\n            n.state = e.syncDiff(n.state, t, o, r);\n          }), n.pendingDiffs = [], s();\n        }), this.channel.on(o.diff, function (t) {\n          var i = n.caller,\n              o = i.onJoin,\n              r = i.onLeave,\n              s = i.onSync;\n          n.inPendingSyncState() ? n.pendingDiffs.push(t) : (n.state = e.syncDiff(n.state, t, o, r), s());\n        });\n      }\n\n      return h(e, [{\n        key: \"onJoin\",\n        value: function (e) {\n          this.caller.onJoin = e;\n        }\n      }, {\n        key: \"onLeave\",\n        value: function (e) {\n          this.caller.onLeave = e;\n        }\n      }, {\n        key: \"onSync\",\n        value: function (e) {\n          this.caller.onSync = e;\n        }\n      }, {\n        key: \"list\",\n        value: function (t) {\n          return e.list(this.state, t);\n        }\n      }, {\n        key: \"inPendingSyncState\",\n        value: function () {\n          return !this.joinRef || this.joinRef !== this.channel.joinRef();\n        }\n      }], [{\n        key: \"syncState\",\n        value: function (e, t, n, i) {\n          var o = this,\n              r = this.clone(e),\n              s = {},\n              a = {};\n          return this.map(r, function (e, n) {\n            t[e] || (a[e] = n);\n          }), this.map(t, function (e, t) {\n            var n = r[e];\n\n            if (n) {\n              var i = t.metas.map(function (e) {\n                return e.phx_ref;\n              }),\n                  c = n.metas.map(function (e) {\n                return e.phx_ref;\n              }),\n                  u = t.metas.filter(function (e) {\n                return c.indexOf(e.phx_ref) < 0;\n              }),\n                  h = n.metas.filter(function (e) {\n                return i.indexOf(e.phx_ref) < 0;\n              });\n              u.length > 0 && (s[e] = t, s[e].metas = u), h.length > 0 && (a[e] = o.clone(n), a[e].metas = h);\n            } else s[e] = t;\n          }), this.syncDiff(r, {\n            joins: s,\n            leaves: a\n          }, n, i);\n        }\n      }, {\n        key: \"syncDiff\",\n        value: function (e, t, n, o) {\n          var r = t.joins,\n              s = t.leaves,\n              a = this.clone(e);\n          return n || (n = function () {}), o || (o = function () {}), this.map(r, function (e, t) {\n            var o = a[e];\n\n            if (a[e] = t, o) {\n              var r,\n                  s = a[e].metas.map(function (e) {\n                return e.phx_ref;\n              }),\n                  c = o.metas.filter(function (e) {\n                return s.indexOf(e.phx_ref) < 0;\n              });\n              (r = a[e].metas).unshift.apply(r, i(c));\n            }\n\n            n(e, o, t);\n          }), this.map(s, function (e, t) {\n            var n = a[e];\n\n            if (n) {\n              var i = t.metas.map(function (e) {\n                return e.phx_ref;\n              });\n              n.metas = n.metas.filter(function (e) {\n                return i.indexOf(e.phx_ref) < 0;\n              }), o(e, n, t), 0 === n.metas.length && delete a[e];\n            }\n          }), a;\n        }\n      }, {\n        key: \"list\",\n        value: function (e, t) {\n          return t || (t = function (e, t) {\n            return t;\n          }), this.map(e, function (e, n) {\n            return t(e, n);\n          });\n        }\n      }, {\n        key: \"map\",\n        value: function (e, t) {\n          return Object.getOwnPropertyNames(e).map(function (n) {\n            return t(n, e[n]);\n          });\n        }\n      }, {\n        key: \"clone\",\n        value: function (e) {\n          return JSON.parse(JSON.stringify(e));\n        }\n      }]), e;\n    }(),\n        J = function () {\n      function e(t, n) {\n        c(this, e), this.callback = t, this.timerCalc = n, this.timer = null, this.tries = 0;\n      }\n\n      return h(e, [{\n        key: \"reset\",\n        value: function () {\n          this.tries = 0, clearTimeout(this.timer);\n        }\n      }, {\n        key: \"scheduleTimeout\",\n        value: function () {\n          var e = this;\n          clearTimeout(this.timer), this.timer = setTimeout(function () {\n            e.tries = e.tries + 1, e.callback();\n          }, this.timerCalc(this.tries + 1));\n        }\n      }]), e;\n    }();\n  }]);\n});\n\n//# sourceURL=webpack:///../deps/phoenix/priv/static/phoenix.js?");

/***/ }),

/***/ "./elm/src/Main.elm":
/*!**************************!*\
  !*** ./elm/src/Main.elm ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\nconsole.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash_UNUSED(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.start.line === region.end.line)\n\t{\n\t\treturn 'on line ' + region.start.line;\n\t}\n\treturn 'on lines ' + region.start.line + ' through ' + region.end.line;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**_UNUSED/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0_UNUSED = 0;\nvar _Utils_Tuple0 = { $: '#0' };\n\nfunction _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr_UNUSED(c) { return c; }\nfunction _Utils_chr(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil_UNUSED = { $: 0 };\nvar _List_Nil = { $: '[]' };\n\nfunction _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap(value) { return value.a; }\n\nfunction _Json_wrap_UNUSED(value) { return value; }\nfunction _Json_unwrap_UNUSED(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tvar initPair = init(result.a);\n\tvar model = initPair.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tvar pair = A2(update, msg, model);\n\t\tstepper(model = pair.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, pair.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**_UNUSED/\n\tvar node = args['node'];\n\t//*/\n\t/**/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tmessage: func(record.message),\n\t\tstopPropagation: record.stopPropagation,\n\t\tpreventDefault: record.preventDefault\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.message;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.view;\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.init,\n\t\timpl.update,\n\t\timpl.subscriptions,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.setup && impl.setup(sendToApp)\n\t\t\tvar view = impl.view;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.onUrlChange;\n\tvar onUrlRequest = impl.onUrlRequest;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tsetup: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.protocol === next.protocol\n\t\t\t\t\t\t\t&& curr.host === next.host\n\t\t\t\t\t\t\t&& curr.port_.a === next.port_.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tinit: function(flags)\n\t\t{\n\t\t\treturn A3(impl.init, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tview: impl.view,\n\t\tupdate: impl.update,\n\t\tsubscriptions: impl.subscriptions\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { hidden: 'hidden', change: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { hidden: 'mozHidden', change: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { hidden: 'msHidden', change: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }\n\t\t: { hidden: 'hidden', change: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\tscene: _Browser_getScene(),\n\t\tviewport: {\n\t\t\tx: _Browser_window.pageXOffset,\n\t\t\ty: _Browser_window.pageYOffset,\n\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\twidth: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\theight: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\tscene: {\n\t\t\t\twidth: node.scrollWidth,\n\t\t\t\theight: node.scrollHeight\n\t\t\t},\n\t\t\tviewport: {\n\t\t\t\tx: node.scrollLeft,\n\t\t\t\ty: node.scrollTop,\n\t\t\t\twidth: node.clientWidth,\n\t\t\t\theight: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\tscene: _Browser_getScene(),\n\t\t\tviewport: {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\twidth: _Browser_doc.documentElement.clientWidth,\n\t\t\t\theight: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\telement: {\n\t\t\t\tx: x + rect.left,\n\t\t\t\ty: y + rect.top,\n\t\t\t\twidth: rect.width,\n\t\t\t\theight: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\nfunction _Url_percentEncode(string)\n{\n\treturn encodeURIComponent(string);\n}\n\nfunction _Url_percentDecode(string)\n{\n\ttry\n\t{\n\t\treturn $elm$core$Maybe$Just(decodeURIComponent(string));\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n}\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar $author$project$Main$ChangedUrl = function (a) {\n\treturn {$: 'ChangedUrl', a: a};\n};\nvar $author$project$Main$ClickedLink = function (a) {\n\treturn {$: 'ClickedLink', a: a};\n};\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (node.$ === 'SubTree') {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0.a;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Basics$EQ = {$: 'EQ'};\nvar $elm$core$Basics$GT = {$: 'GT'};\nvar $elm$core$Basics$LT = {$: 'LT'};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 'Err', a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Failure', a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Index', a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 'Ok', a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 'OneOf', a: a};\n};\nvar $elm$core$Basics$False = {$: 'False'};\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 'Just', a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 'Nothing'};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 'Field':\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'Index':\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 'OneOf':\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 'Leaf', a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 'SubTree', a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.nodeListSize) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.tail),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.tail);\n\t\t} else {\n\t\t\tvar treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.tail) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.tail);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = {$: 'True'};\nvar $elm$core$Result$isOk = function (result) {\n\tif (result.$ === 'Ok') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$andThen = _Json_andThen;\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 'Normal':\n\t\t\treturn 0;\n\t\tcase 'MayStopPropagation':\n\t\t\treturn 1;\n\t\tcase 'MayPreventDefault':\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 'External', a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 'Internal', a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = function (a) {\n\treturn {$: 'NotFound', a: a};\n};\nvar $elm$url$Url$Http = {$: 'Http'};\nvar $elm$url$Url$Https = {$: 'Https'};\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t$elm$url$Url$Http,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t$elm$url$Url$Https,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0.a;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = function (a) {\n\treturn {$: 'Perform', a: a};\n};\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0.a;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(_Utils_Tuple0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0.a;\n\t\treturn $elm$core$Task$Perform(\n\t\t\tA2($elm$core$Task$map, tagger, task));\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\t$elm$core$Task$Perform(\n\t\t\t\tA2($elm$core$Task$map, toMessage, task)));\n\t});\nvar $elm$browser$Browser$application = _Browser_application;\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $author$project$Main$Redirect = function (a) {\n\treturn {$: 'Redirect', a: a};\n};\nvar $author$project$Main$ChatRooms = function (a) {\n\treturn {$: 'ChatRooms', a: a};\n};\nvar $author$project$Main$ControlTheSocketConnection = function (a) {\n\treturn {$: 'ControlTheSocketConnection', a: a};\n};\nvar $author$project$Main$GotChatRoomsMsg = function (a) {\n\treturn {$: 'GotChatRoomsMsg', a: a};\n};\nvar $author$project$Main$GotControlTheSocketConnectionMsg = function (a) {\n\treturn {$: 'GotControlTheSocketConnectionMsg', a: a};\n};\nvar $author$project$Main$GotHomeMsg = function (a) {\n\treturn {$: 'GotHomeMsg', a: a};\n};\nvar $author$project$Main$GotJoinAndLeaveChannelsMsg = function (a) {\n\treturn {$: 'GotJoinAndLeaveChannelsMsg', a: a};\n};\nvar $author$project$Main$GotSendAndReceiveMsg = function (a) {\n\treturn {$: 'GotSendAndReceiveMsg', a: a};\n};\nvar $author$project$Main$Home = function (a) {\n\treturn {$: 'Home', a: a};\n};\nvar $author$project$Route$Home = {$: 'Home'};\nvar $author$project$Main$JoinAndLeaveChannels = function (a) {\n\treturn {$: 'JoinAndLeaveChannels', a: a};\n};\nvar $author$project$Main$NotFound = function (a) {\n\treturn {$: 'NotFound', a: a};\n};\nvar $author$project$Main$SendAndReceive = function (a) {\n\treturn {$: 'SendAndReceive', a: a};\n};\nvar $author$project$Page$ChatRooms$MultiRoom = function (a) {\n\treturn {$: 'MultiRoom', a: a};\n};\nvar $author$project$Example$MultiRoomChat$Unregistered = function (a) {\n\treturn {$: 'Unregistered', a: a};\n};\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $author$project$Type$Lobby$init = {\n\tinspectingRoom: $elm$core$Maybe$Nothing,\n\tinviteableUsers: _List_Nil,\n\toccupants: _List_Nil,\n\troomActions: $elm$core$Dict$empty,\n\trooms: _Utils_Tuple2(_List_Nil, _List_Nil)\n};\nvar $author$project$Type$User$init = {backgroundColor: $elm$core$Maybe$Nothing, backgroundColorError: $elm$core$Maybe$Nothing, foregroundColor: $elm$core$Maybe$Nothing, foregroundColorError: $elm$core$Maybe$Nothing, username: '', usernameError: $elm$core$Maybe$Nothing};\nvar $author$project$Example$MultiRoomChat$init = function (phoenix) {\n\treturn {\n\t\tlayoutHeight: 0,\n\t\tlobby: $author$project$Type$Lobby$init,\n\t\tphoenix: phoenix,\n\t\tstate: $author$project$Example$MultiRoomChat$Unregistered($author$project$Type$User$init)\n\t};\n};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Session$phoenix = function (_v0) {\n\tvar session = _v0.a;\n\treturn session.phoenix;\n};\nvar $author$project$Page$ChatRooms$init = function (session) {\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\texample: $author$project$Page$ChatRooms$MultiRoom(\n\t\t\t\t$author$project$Example$MultiRoomChat$init(\n\t\t\t\t\t$author$project$Session$phoenix(session))),\n\t\t\tsession: session\n\t\t},\n\t\t$elm$core$Platform$Cmd$none);\n};\nvar $author$project$Page$ControlTheSocketConnection$SimpleConnect = function (a) {\n\treturn {$: 'SimpleConnect', a: a};\n};\nvar $author$project$Example$SimpleConnect$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Page$ControlTheSocketConnection$init = function (session) {\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\texample: $author$project$Page$ControlTheSocketConnection$SimpleConnect(\n\t\t\t\t$author$project$Example$SimpleConnect$init(\n\t\t\t\t\t$author$project$Session$phoenix(session))),\n\t\t\tsession: session\n\t\t},\n\t\t$elm$core$Platform$Cmd$none);\n};\nvar $author$project$Page$Home$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Internal$Socket$currentState = function (_v0) {\n\tvar state = _v0.a.state;\n\treturn state;\n};\nvar $elm$json$Json$Encode$int = _Json_wrap;\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $elm$json$Json$Encode$null = _Json_encodeNull;\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (maybe.$ === 'Just') {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $elm_community$json_extra$Json$Encode$Extra$maybe = function (encoder) {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$elm$core$Maybe$map(encoder),\n\t\t$elm$core$Maybe$withDefault($elm$json$Json$Encode$null));\n};\nvar $elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, obj) {\n\t\t\t\t\tvar k = _v0.a;\n\t\t\t\t\tvar v = _v0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(_Utils_Tuple0),\n\t\t\tpairs));\n};\nvar $author$project$Phoenix$Socket$disconnect = F2(\n\tfunction (code, portOut) {\n\t\treturn portOut(\n\t\t\t{\n\t\t\t\tmsg: 'disconnect',\n\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'code',\n\t\t\t\t\t\t\tA2($elm_community$json_extra$Json$Encode$Extra$maybe, $elm$json$Json$Encode$int, code))\n\t\t\t\t\t\t]))\n\t\t\t});\n\t});\nvar $author$project$Internal$Socket$disconnect = F2(\n\tfunction (code, _v0) {\n\t\tvar portOut = _v0.a.portOut;\n\t\treturn A2($author$project$Phoenix$Socket$disconnect, code, portOut);\n\t});\nvar $author$project$Phoenix$Socket$ClosedInfo = F5(\n\tfunction (reason, code, wasClean, type_, isTrusted) {\n\t\treturn {code: code, isTrusted: isTrusted, reason: reason, type_: type_, wasClean: wasClean};\n\t});\nvar $author$project$Phoenix$Disconnected = function (a) {\n\treturn {$: 'Disconnected', a: a};\n};\nvar $author$project$Phoenix$Model = function (a) {\n\treturn {$: 'Model', a: a};\n};\nvar $author$project$Internal$Channel$Channel = function (a) {\n\treturn {$: 'Channel', a: a};\n};\nvar $author$project$Internal$Config$empty = $elm$core$Dict$empty;\nvar $elm$core$Set$Set_elm_builtin = function (a) {\n\treturn {$: 'Set_elm_builtin', a: a};\n};\nvar $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);\nvar $author$project$Internal$Unique$empty = $elm$core$Set$empty;\nvar $author$project$Internal$Channel$init = function (portOut) {\n\treturn $author$project$Internal$Channel$Channel(\n\t\t{joinConfigs: $author$project$Internal$Config$empty, joined: $author$project$Internal$Unique$empty, leaveConfigs: $author$project$Internal$Config$empty, portOut: portOut, queuedJoins: $author$project$Internal$Unique$empty, queuedLeaves: $author$project$Internal$Unique$empty});\n};\nvar $author$project$Internal$Presence$Presence = function (a) {\n\treturn {$: 'Presence', a: a};\n};\nvar $author$project$Internal$Presence$init = $author$project$Internal$Presence$Presence(\n\t{diff: $author$project$Internal$Config$empty, joins: $author$project$Internal$Config$empty, leaves: $author$project$Internal$Config$empty, state: $author$project$Internal$Config$empty});\nvar $author$project$Internal$Push$Push = function (a) {\n\treturn {$: 'Push', a: a};\n};\nvar $author$project$Internal$Push$init = function (portOut) {\n\treturn $author$project$Internal$Push$Push(\n\t\t{count: 0, portOut: portOut, queue: $author$project$Internal$Config$empty, sent: $author$project$Internal$Config$empty, timeouts: $author$project$Internal$Config$empty});\n};\nvar $author$project$Internal$Socket$Socket = function (a) {\n\treturn {$: 'Socket', a: a};\n};\nvar $author$project$Internal$Socket$init = F2(\n\tfunction (portOut, state) {\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t{\n\t\t\t\tdisconnectReason: $elm$core$Maybe$Nothing,\n\t\t\t\tinfo: {connectionState: '', endPointURL: '', isConnected: false, makeRef: '', protocol: ''},\n\t\t\t\toptions: _List_Nil,\n\t\t\t\tparams: $elm$core$Maybe$Nothing,\n\t\t\t\tportOut: portOut,\n\t\t\t\treconnect: false,\n\t\t\t\tstate: state\n\t\t\t});\n\t});\nvar $author$project$Phoenix$init = function (portConfig) {\n\treturn $author$project$Phoenix$Model(\n\t\t{\n\t\t\tchannel: $author$project$Internal$Channel$init(portConfig.phoenixSend),\n\t\t\tportConfig: portConfig,\n\t\t\tpresence: $author$project$Internal$Presence$init,\n\t\t\tpush: $author$project$Internal$Push$init(portConfig.phoenixSend),\n\t\t\tsocket: A2(\n\t\t\t\t$author$project$Internal$Socket$init,\n\t\t\t\tportConfig.phoenixSend,\n\t\t\t\t$author$project$Phoenix$Disconnected(\n\t\t\t\t\tA5($author$project$Phoenix$Socket$ClosedInfo, $elm$core$Maybe$Nothing, 0, false, '', false)))\n\t\t});\n};\nvar $author$project$Phoenix$disconnectAndReset = F2(\n\tfunction (code, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\t\tswitch (_v1.$) {\n\t\t\tcase 'Disconnected':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$init(model.portConfig),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'Disconnecting':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$init(model.portConfig),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$init(model.portConfig),\n\t\t\t\t\tA2($author$project$Internal$Socket$disconnect, code, model.socket));\n\t\t}\n\t});\nvar $elm$core$Platform$Cmd$map = _Platform_map;\nvar $author$project$Session$Session = function (a) {\n\treturn {$: 'Session', a: a};\n};\nvar $author$project$Session$updatePhoenix = F2(\n\tfunction (phx, _v0) {\n\t\tvar session = _v0.a;\n\t\treturn $author$project$Session$Session(\n\t\t\t_Utils_update(\n\t\t\t\tsession,\n\t\t\t\t{phoenix: phx}));\n\t});\nvar $author$project$Page$Home$init = function (session) {\n\tvar _v0 = A2(\n\t\t$author$project$Phoenix$disconnectAndReset,\n\t\t$elm$core$Maybe$Nothing,\n\t\t$author$project$Session$phoenix(session));\n\tvar phx = _v0.a;\n\tvar phxCmd = _v0.b;\n\treturn _Utils_Tuple2(\n\t\tA2($author$project$Session$updatePhoenix, phx, session),\n\t\tA2($elm$core$Platform$Cmd$map, $author$project$Page$Home$PhoenixMsg, phxCmd));\n};\nvar $author$project$Page$JoinAndLeaveChannels$SimpleJoinAndLeave = function (a) {\n\treturn {$: 'SimpleJoinAndLeave', a: a};\n};\nvar $author$project$Example$SimpleJoinAndLeave$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Page$JoinAndLeaveChannels$init = function (session) {\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\texample: $author$project$Page$JoinAndLeaveChannels$SimpleJoinAndLeave(\n\t\t\t\t$author$project$Example$SimpleJoinAndLeave$init(\n\t\t\t\t\t$author$project$Session$phoenix(session))),\n\t\t\tsession: session\n\t\t},\n\t\t$elm$core$Platform$Cmd$none);\n};\nvar $author$project$Page$SendAndReceive$PushOneEvent = function (a) {\n\treturn {$: 'PushOneEvent', a: a};\n};\nvar $author$project$Example$PushOneEvent$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Page$SendAndReceive$init = function (session) {\n\treturn _Utils_Tuple2(\n\t\t{\n\t\t\texample: $author$project$Page$SendAndReceive$PushOneEvent(\n\t\t\t\t$author$project$Example$PushOneEvent$init(\n\t\t\t\t\t$author$project$Session$phoenix(session))),\n\t\t\tsession: session\n\t\t},\n\t\t$elm$core$Platform$Cmd$none);\n};\nvar $author$project$Session$navKey = function (_v0) {\n\tvar session = _v0.a;\n\treturn session.key;\n};\nvar $elm$browser$Browser$Navigation$replaceUrl = _Browser_replaceUrl;\nvar $author$project$Route$routeToString = function (route) {\n\tswitch (route.$) {\n\t\tcase 'Home':\n\t\t\treturn '/';\n\t\tcase 'Root':\n\t\t\treturn '/';\n\t\tcase 'ChatRooms':\n\t\t\treturn '/ChatRooms';\n\t\tcase 'ControlTheSocketConnection':\n\t\t\treturn '/ControlTheSocketConnection';\n\t\tcase 'JoinAndLeaveChannels':\n\t\t\treturn '/JoinAndLeaveChannels';\n\t\tdefault:\n\t\t\treturn '/SendAndReceive';\n\t}\n};\nvar $author$project$Route$replaceUrl = F2(\n\tfunction (key, route) {\n\t\treturn A2(\n\t\t\t$elm$browser$Browser$Navigation$replaceUrl,\n\t\t\tkey,\n\t\t\t$author$project$Route$routeToString(route));\n\t});\nvar $author$project$Page$ChatRooms$toSession = function (model) {\n\treturn model.session;\n};\nvar $author$project$Page$ControlTheSocketConnection$toSession = function (model) {\n\treturn model.session;\n};\nvar $author$project$Page$Home$toSession = function (model) {\n\treturn model;\n};\nvar $author$project$Page$JoinAndLeaveChannels$toSession = function (model) {\n\treturn model.session;\n};\nvar $author$project$Page$SendAndReceive$toSession = function (model) {\n\treturn model.session;\n};\nvar $author$project$Main$toSession = function (model) {\n\tswitch (model.$) {\n\t\tcase 'Redirect':\n\t\t\tvar session = model.a;\n\t\t\treturn session;\n\t\tcase 'NotFound':\n\t\t\tvar session = model.a;\n\t\t\treturn session;\n\t\tcase 'Home':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $author$project$Page$Home$toSession(subModel);\n\t\tcase 'ChatRooms':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $author$project$Page$ChatRooms$toSession(subModel);\n\t\tcase 'ControlTheSocketConnection':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $author$project$Page$ControlTheSocketConnection$toSession(subModel);\n\t\tcase 'JoinAndLeaveChannels':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $author$project$Page$JoinAndLeaveChannels$toSession(subModel);\n\t\tdefault:\n\t\t\tvar subModel = model.a;\n\t\t\treturn $author$project$Page$SendAndReceive$toSession(subModel);\n\t}\n};\nvar $author$project$Main$updateWith = F3(\n\tfunction (toModel, toMsg, _v0) {\n\t\tvar subModel = _v0.a;\n\t\tvar subCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\ttoModel(subModel),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, subCmd));\n\t});\nvar $author$project$Main$changeRouteTo = F2(\n\tfunction (maybeRoute, model) {\n\t\tvar session = $author$project$Main$toSession(model);\n\t\tif (maybeRoute.$ === 'Nothing') {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Main$NotFound(session),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tswitch (maybeRoute.a.$) {\n\t\t\t\tcase 'Root':\n\t\t\t\t\tvar _v1 = maybeRoute.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Route$replaceUrl,\n\t\t\t\t\t\t\t$author$project$Session$navKey(session),\n\t\t\t\t\t\t\t$author$project$Route$Home));\n\t\t\t\tcase 'Home':\n\t\t\t\t\tvar _v2 = maybeRoute.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t$author$project$Main$Home,\n\t\t\t\t\t\t$author$project$Main$GotHomeMsg,\n\t\t\t\t\t\t$author$project$Page$Home$init(session));\n\t\t\t\tcase 'ChatRooms':\n\t\t\t\t\tvar _v3 = maybeRoute.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t$author$project$Main$ChatRooms,\n\t\t\t\t\t\t$author$project$Main$GotChatRoomsMsg,\n\t\t\t\t\t\t$author$project$Page$ChatRooms$init(session));\n\t\t\t\tcase 'ControlTheSocketConnection':\n\t\t\t\t\tvar _v4 = maybeRoute.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t$author$project$Main$ControlTheSocketConnection,\n\t\t\t\t\t\t$author$project$Main$GotControlTheSocketConnectionMsg,\n\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$init(session));\n\t\t\t\tcase 'JoinAndLeaveChannels':\n\t\t\t\t\tvar _v5 = maybeRoute.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t$author$project$Main$JoinAndLeaveChannels,\n\t\t\t\t\t\t$author$project$Main$GotJoinAndLeaveChannelsMsg,\n\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$init(session));\n\t\t\t\tdefault:\n\t\t\t\t\tvar _v6 = maybeRoute.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t$author$project$Main$SendAndReceive,\n\t\t\t\t\t\t$author$project$Main$GotSendAndReceiveMsg,\n\t\t\t\t\t\t$author$project$Page$SendAndReceive$init(session));\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$BigDesktop = {$: 'BigDesktop'};\nvar $mdgriffith$elm_ui$Element$Desktop = {$: 'Desktop'};\nvar $mdgriffith$elm_ui$Element$Landscape = {$: 'Landscape'};\nvar $mdgriffith$elm_ui$Element$Phone = {$: 'Phone'};\nvar $mdgriffith$elm_ui$Element$Portrait = {$: 'Portrait'};\nvar $mdgriffith$elm_ui$Element$Tablet = {$: 'Tablet'};\nvar $elm$core$Basics$min = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) < 0) ? x : y;\n\t});\nvar $mdgriffith$elm_ui$Element$classifyDevice = function (window) {\n\treturn {\n\t\t_class: function () {\n\t\t\tvar shortSide = A2($elm$core$Basics$min, window.width, window.height);\n\t\t\tvar longSide = A2($elm$core$Basics$max, window.width, window.height);\n\t\t\treturn (shortSide < 600) ? $mdgriffith$elm_ui$Element$Phone : ((longSide <= 1200) ? $mdgriffith$elm_ui$Element$Tablet : (((longSide > 1200) && (longSide <= 1920)) ? $mdgriffith$elm_ui$Element$Desktop : $mdgriffith$elm_ui$Element$BigDesktop));\n\t\t}(),\n\t\torientation: (_Utils_cmp(window.width, window.height) < 0) ? $mdgriffith$elm_ui$Element$Portrait : $mdgriffith$elm_ui$Element$Landscape\n\t};\n};\nvar $elm$url$Url$Parser$State = F5(\n\tfunction (visited, unvisited, params, frag, value) {\n\t\treturn {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};\n\t});\nvar $elm$url$Url$Parser$getFirstMatch = function (states) {\n\tgetFirstMatch:\n\twhile (true) {\n\t\tif (!states.b) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar state = states.a;\n\t\t\tvar rest = states.b;\n\t\t\tvar _v1 = state.unvisited;\n\t\t\tif (!_v1.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(state.value);\n\t\t\t} else {\n\t\t\t\tif ((_v1.a === '') && (!_v1.b.b)) {\n\t\t\t\t\treturn $elm$core$Maybe$Just(state.value);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$states = rest;\n\t\t\t\t\tstates = $temp$states;\n\t\t\t\t\tcontinue getFirstMatch;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\nvar $elm$url$Url$Parser$removeFinalEmpty = function (segments) {\n\tif (!segments.b) {\n\t\treturn _List_Nil;\n\t} else {\n\t\tif ((segments.a === '') && (!segments.b.b)) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar segment = segments.a;\n\t\t\tvar rest = segments.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tsegment,\n\t\t\t\t$elm$url$Url$Parser$removeFinalEmpty(rest));\n\t\t}\n\t}\n};\nvar $elm$url$Url$Parser$preparePath = function (path) {\n\tvar _v0 = A2($elm$core$String$split, '/', path);\n\tif (_v0.b && (_v0.a === '')) {\n\t\tvar segments = _v0.b;\n\t\treturn $elm$url$Url$Parser$removeFinalEmpty(segments);\n\t} else {\n\t\tvar segments = _v0;\n\t\treturn $elm$url$Url$Parser$removeFinalEmpty(segments);\n\t}\n};\nvar $elm$url$Url$Parser$addToParametersHelp = F2(\n\tfunction (value, maybeList) {\n\t\tif (maybeList.$ === 'Nothing') {\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[value]));\n\t\t} else {\n\t\t\tvar list = maybeList.a;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\tA2($elm$core$List$cons, value, list));\n\t\t}\n\t});\nvar $elm$url$Url$percentDecode = _Url_percentDecode;\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1.$) {\n\t\t\t\t\tcase 'LT':\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 'EQ':\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$Black = {$: 'Black'};\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = {$: 'Red'};\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 'LT':\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 'EQ':\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$getMin = function (dict) {\n\tgetMin:\n\twhile (true) {\n\t\tif ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {\n\t\t\tvar left = dict.d;\n\t\t\tvar $temp$dict = left;\n\t\t\tdict = $temp$dict;\n\t\t\tcontinue getMin;\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t}\n};\nvar $elm$core$Dict$moveRedLeft = function (dict) {\n\tif (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {\n\t\tif ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar lLeft = _v1.d;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v2 = dict.e;\n\t\t\tvar rClr = _v2.a;\n\t\t\tvar rK = _v2.b;\n\t\t\tvar rV = _v2.c;\n\t\t\tvar rLeft = _v2.d;\n\t\t\tvar _v3 = rLeft.a;\n\t\t\tvar rlK = rLeft.b;\n\t\t\tvar rlV = rLeft.c;\n\t\t\tvar rlL = rLeft.d;\n\t\t\tvar rlR = rLeft.e;\n\t\t\tvar rRight = _v2.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\trlK,\n\t\t\t\trlV,\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\trlL),\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v4 = dict.d;\n\t\t\tvar lClr = _v4.a;\n\t\t\tvar lK = _v4.b;\n\t\t\tvar lV = _v4.c;\n\t\t\tvar lLeft = _v4.d;\n\t\t\tvar lRight = _v4.e;\n\t\t\tvar _v5 = dict.e;\n\t\t\tvar rClr = _v5.a;\n\t\t\tvar rK = _v5.b;\n\t\t\tvar rV = _v5.c;\n\t\t\tvar rLeft = _v5.d;\n\t\t\tvar rRight = _v5.e;\n\t\t\tif (clr.$ === 'Black') {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$moveRedRight = function (dict) {\n\tif (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {\n\t\tif ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v1 = dict.d;\n\t\t\tvar lClr = _v1.a;\n\t\t\tvar lK = _v1.b;\n\t\t\tvar lV = _v1.c;\n\t\t\tvar _v2 = _v1.d;\n\t\t\tvar _v3 = _v2.a;\n\t\t\tvar llK = _v2.b;\n\t\t\tvar llV = _v2.c;\n\t\t\tvar llLeft = _v2.d;\n\t\t\tvar llRight = _v2.e;\n\t\t\tvar lRight = _v1.e;\n\t\t\tvar _v4 = dict.e;\n\t\t\tvar rClr = _v4.a;\n\t\t\tvar rK = _v4.b;\n\t\t\tvar rV = _v4.c;\n\t\t\tvar rLeft = _v4.d;\n\t\t\tvar rRight = _v4.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t$elm$core$Dict$Red,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),\n\t\t\t\tA5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tlRight,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));\n\t\t} else {\n\t\t\tvar clr = dict.a;\n\t\t\tvar k = dict.b;\n\t\t\tvar v = dict.c;\n\t\t\tvar _v5 = dict.d;\n\t\t\tvar lClr = _v5.a;\n\t\t\tvar lK = _v5.b;\n\t\t\tvar lV = _v5.c;\n\t\t\tvar lLeft = _v5.d;\n\t\t\tvar lRight = _v5.e;\n\t\t\tvar _v6 = dict.e;\n\t\t\tvar rClr = _v6.a;\n\t\t\tvar rK = _v6.b;\n\t\t\tvar rV = _v6.c;\n\t\t\tvar rLeft = _v6.d;\n\t\t\tvar rRight = _v6.e;\n\t\t\tif (clr.$ === 'Black') {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t$elm$core$Dict$Black,\n\t\t\t\t\tk,\n\t\t\t\t\tv,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn dict;\n\t}\n};\nvar $elm$core$Dict$removeHelpPrepEQGT = F7(\n\tfunction (targetKey, dict, color, key, value, left, right) {\n\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {\n\t\t\tvar _v1 = left.a;\n\t\t\tvar lK = left.b;\n\t\t\tvar lV = left.c;\n\t\t\tvar lLeft = left.d;\n\t\t\tvar lRight = left.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tlK,\n\t\t\t\tlV,\n\t\t\t\tlLeft,\n\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));\n\t\t} else {\n\t\t\t_v2$2:\n\t\t\twhile (true) {\n\t\t\t\tif ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {\n\t\t\t\t\tif (right.d.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\t\tif (right.d.a.$ === 'Black') {\n\t\t\t\t\t\t\tvar _v3 = right.a;\n\t\t\t\t\t\t\tvar _v4 = right.d;\n\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v6 = right.a;\n\t\t\t\t\t\tvar _v7 = right.d;\n\t\t\t\t\t\treturn $elm$core$Dict$moveRedRight(dict);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$core$Dict$removeMin = function (dict) {\n\tif ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {\n\t\tvar color = dict.a;\n\t\tvar key = dict.b;\n\t\tvar value = dict.c;\n\t\tvar left = dict.d;\n\t\tvar lColor = left.a;\n\t\tvar lLeft = left.d;\n\t\tvar right = dict.e;\n\t\tif (lColor.$ === 'Black') {\n\t\t\tif ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {\n\t\t\t\tvar _v3 = lLeft.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\t\tright);\n\t\t\t} else {\n\t\t\t\tvar _v4 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\tif (_v4.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\tvar nColor = _v4.a;\n\t\t\t\t\tvar nKey = _v4.b;\n\t\t\t\t\tvar nValue = _v4.c;\n\t\t\t\t\tvar nLeft = _v4.d;\n\t\t\t\t\tvar nRight = _v4.e;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t\t$elm$core$Dict$removeMin(left),\n\t\t\t\tright);\n\t\t}\n\t} else {\n\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t}\n};\nvar $elm$core$Dict$removeHelp = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_cmp(targetKey, key) < 0) {\n\t\t\t\tif ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {\n\t\t\t\t\tvar _v4 = left.a;\n\t\t\t\t\tvar lLeft = left.d;\n\t\t\t\t\tif ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {\n\t\t\t\t\t\tvar _v6 = lLeft.a;\n\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\t\tcolor,\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\t\tright);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v7 = $elm$core$Dict$moveRedLeft(dict);\n\t\t\t\t\t\tif (_v7.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\t\t\tvar nColor = _v7.a;\n\t\t\t\t\t\t\tvar nKey = _v7.b;\n\t\t\t\t\t\t\tvar nValue = _v7.c;\n\t\t\t\t\t\t\tvar nLeft = _v7.d;\n\t\t\t\t\t\t\tvar nRight = _v7.e;\n\t\t\t\t\t\t\treturn A5(\n\t\t\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\t\t\tnColor,\n\t\t\t\t\t\t\t\tnKey,\n\t\t\t\t\t\t\t\tnValue,\n\t\t\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, nLeft),\n\t\t\t\t\t\t\t\tnRight);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, left),\n\t\t\t\t\t\tright);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Dict$removeHelpEQGT,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\tA7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$removeHelpEQGT = F2(\n\tfunction (targetKey, dict) {\n\t\tif (dict.$ === 'RBNode_elm_builtin') {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\tif (_Utils_eq(targetKey, key)) {\n\t\t\t\tvar _v1 = $elm$core$Dict$getMin(right);\n\t\t\t\tif (_v1.$ === 'RBNode_elm_builtin') {\n\t\t\t\t\tvar minKey = _v1.b;\n\t\t\t\t\tvar minValue = _v1.c;\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tminKey,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t\tleft,\n\t\t\t\t\t\t$elm$core$Dict$removeMin(right));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\tcolor,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tleft,\n\t\t\t\t\tA2($elm$core$Dict$removeHelp, targetKey, right));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t}\n\t});\nvar $elm$core$Dict$remove = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$removeHelp, key, dict);\n\t\tif ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$core$Dict$update = F3(\n\tfunction (targetKey, alter, dictionary) {\n\t\tvar _v0 = alter(\n\t\t\tA2($elm$core$Dict$get, targetKey, dictionary));\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar value = _v0.a;\n\t\t\treturn A3($elm$core$Dict$insert, targetKey, value, dictionary);\n\t\t} else {\n\t\t\treturn A2($elm$core$Dict$remove, targetKey, dictionary);\n\t\t}\n\t});\nvar $elm$url$Url$Parser$addParam = F2(\n\tfunction (segment, dict) {\n\t\tvar _v0 = A2($elm$core$String$split, '=', segment);\n\t\tif ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {\n\t\t\tvar rawKey = _v0.a;\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar rawValue = _v1.a;\n\t\t\tvar _v2 = $elm$url$Url$percentDecode(rawKey);\n\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\treturn dict;\n\t\t\t} else {\n\t\t\t\tvar key = _v2.a;\n\t\t\t\tvar _v3 = $elm$url$Url$percentDecode(rawValue);\n\t\t\t\tif (_v3.$ === 'Nothing') {\n\t\t\t\t\treturn dict;\n\t\t\t\t} else {\n\t\t\t\t\tvar value = _v3.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$core$Dict$update,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\t$elm$url$Url$Parser$addToParametersHelp(value),\n\t\t\t\t\t\tdict);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn dict;\n\t\t}\n\t});\nvar $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {\n\tif (maybeQuery.$ === 'Nothing') {\n\t\treturn $elm$core$Dict$empty;\n\t} else {\n\t\tvar qry = maybeQuery.a;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$url$Url$Parser$addParam,\n\t\t\t$elm$core$Dict$empty,\n\t\t\tA2($elm$core$String$split, '&', qry));\n\t}\n};\nvar $elm$url$Url$Parser$parse = F2(\n\tfunction (_v0, url) {\n\t\tvar parser = _v0.a;\n\t\treturn $elm$url$Url$Parser$getFirstMatch(\n\t\t\tparser(\n\t\t\t\tA5(\n\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t$elm$url$Url$Parser$preparePath(url.path),\n\t\t\t\t\t$elm$url$Url$Parser$prepareQuery(url.query),\n\t\t\t\t\turl.fragment,\n\t\t\t\t\t$elm$core$Basics$identity)));\n\t});\nvar $author$project$Route$ChatRooms = {$: 'ChatRooms'};\nvar $author$project$Route$ControlTheSocketConnection = {$: 'ControlTheSocketConnection'};\nvar $author$project$Route$JoinAndLeaveChannels = {$: 'JoinAndLeaveChannels'};\nvar $author$project$Route$SendAndReceive = {$: 'SendAndReceive'};\nvar $elm$url$Url$Parser$Parser = function (a) {\n\treturn {$: 'Parser', a: a};\n};\nvar $elm$url$Url$Parser$mapState = F2(\n\tfunction (func, _v0) {\n\t\tvar visited = _v0.visited;\n\t\tvar unvisited = _v0.unvisited;\n\t\tvar params = _v0.params;\n\t\tvar frag = _v0.frag;\n\t\tvar value = _v0.value;\n\t\treturn A5(\n\t\t\t$elm$url$Url$Parser$State,\n\t\t\tvisited,\n\t\t\tunvisited,\n\t\t\tparams,\n\t\t\tfrag,\n\t\t\tfunc(value));\n\t});\nvar $elm$url$Url$Parser$map = F2(\n\tfunction (subValue, _v0) {\n\t\tvar parseArg = _v0.a;\n\t\treturn $elm$url$Url$Parser$Parser(\n\t\t\tfunction (_v1) {\n\t\t\t\tvar visited = _v1.visited;\n\t\t\t\tvar unvisited = _v1.unvisited;\n\t\t\t\tvar params = _v1.params;\n\t\t\t\tvar frag = _v1.frag;\n\t\t\t\tvar value = _v1.value;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$url$Url$Parser$mapState(value),\n\t\t\t\t\tparseArg(\n\t\t\t\t\t\tA5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));\n\t\t\t});\n\t});\nvar $elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar $elm$core$List$concat = function (lists) {\n\treturn A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);\n};\nvar $elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn $elm$core$List$concat(\n\t\t\tA2($elm$core$List$map, f, list));\n\t});\nvar $elm$url$Url$Parser$oneOf = function (parsers) {\n\treturn $elm$url$Url$Parser$Parser(\n\t\tfunction (state) {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$concatMap,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar parser = _v0.a;\n\t\t\t\t\treturn parser(state);\n\t\t\t\t},\n\t\t\t\tparsers);\n\t\t});\n};\nvar $elm$url$Url$Parser$s = function (str) {\n\treturn $elm$url$Url$Parser$Parser(\n\t\tfunction (_v0) {\n\t\t\tvar visited = _v0.visited;\n\t\t\tvar unvisited = _v0.unvisited;\n\t\t\tvar params = _v0.params;\n\t\t\tvar frag = _v0.frag;\n\t\t\tvar value = _v0.value;\n\t\t\tif (!unvisited.b) {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar next = unvisited.a;\n\t\t\t\tvar rest = unvisited.b;\n\t\t\t\treturn _Utils_eq(next, str) ? _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA5(\n\t\t\t\t\t\t$elm$url$Url$Parser$State,\n\t\t\t\t\t\tA2($elm$core$List$cons, next, visited),\n\t\t\t\t\t\trest,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tfrag,\n\t\t\t\t\t\tvalue)\n\t\t\t\t\t]) : _List_Nil;\n\t\t\t}\n\t\t});\n};\nvar $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(\n\tfunction (state) {\n\t\treturn _List_fromArray(\n\t\t\t[state]);\n\t});\nvar $author$project$Route$parser = $elm$url$Url$Parser$oneOf(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($elm$url$Url$Parser$map, $author$project$Route$Home, $elm$url$Url$Parser$top),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Route$ChatRooms,\n\t\t\t$elm$url$Url$Parser$s('ChatRooms')),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Route$ControlTheSocketConnection,\n\t\t\t$elm$url$Url$Parser$s('ControlTheSocketConnection')),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Route$JoinAndLeaveChannels,\n\t\t\t$elm$url$Url$Parser$s('JoinAndLeaveChannels')),\n\t\t\tA2(\n\t\t\t$elm$url$Url$Parser$map,\n\t\t\t$author$project$Route$SendAndReceive,\n\t\t\t$elm$url$Url$Parser$s('SendAndReceive'))\n\t\t]));\nvar $author$project$Route$fromUrl = function (url) {\n\treturn A2($elm$url$Url$Parser$parse, $author$project$Route$parser, url);\n};\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $elm$json$Json$Decode$value = _Json_decodeValue;\nvar $author$project$Ports$channelReceiver = _Platform_incomingPort(\n\t'channelReceiver',\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (topic) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (payload) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (msg) {\n\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t{msg: msg, payload: payload, topic: topic});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'msg', $elm$json$Json$Decode$string));\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string)));\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $author$project$Ports$phoenixSend = _Platform_outgoingPort(\n\t'phoenixSend',\n\tfunction ($) {\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'msg',\n\t\t\t\t\t$elm$json$Json$Encode$string($.msg)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'payload',\n\t\t\t\t\t$elm$core$Basics$identity($.payload))\n\t\t\t\t]));\n\t});\nvar $author$project$Ports$presenceReceiver = _Platform_incomingPort(\n\t'presenceReceiver',\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (topic) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (payload) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (msg) {\n\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t{msg: msg, payload: payload, topic: topic});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'msg', $elm$json$Json$Decode$string));\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string)));\nvar $author$project$Ports$socketReceiver = _Platform_incomingPort(\n\t'socketReceiver',\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (payload) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (msg) {\n\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t{msg: msg, payload: payload});\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'msg', $elm$json$Json$Decode$string));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value)));\nvar $author$project$Ports$config = {channelReceiver: $author$project$Ports$channelReceiver, phoenixSend: $author$project$Ports$phoenixSend, presenceReceiver: $author$project$Ports$presenceReceiver, socketReceiver: $author$project$Ports$socketReceiver};\nvar $author$project$Session$init = F3(\n\tfunction (vsn_, key, device_) {\n\t\treturn $author$project$Session$Session(\n\t\t\t{\n\t\t\t\tdevice: device_,\n\t\t\t\tkey: key,\n\t\t\t\tphoenix: $author$project$Phoenix$init($author$project$Ports$config),\n\t\t\t\tvsn: vsn_\n\t\t\t});\n\t});\nvar $author$project$Main$init = F3(\n\tfunction (flags, url, navKey) {\n\t\treturn A2(\n\t\t\t$author$project$Main$changeRouteTo,\n\t\t\t$author$project$Route$fromUrl(url),\n\t\t\t$author$project$Main$Redirect(\n\t\t\t\tA3(\n\t\t\t\t\t$author$project$Session$init,\n\t\t\t\t\tflags.vsn,\n\t\t\t\t\tnavKey,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$classifyDevice(flags))));\n\t});\nvar $elm$json$Json$Decode$int = _Json_decodeInt;\nvar $author$project$Main$WindowResized = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'WindowResized', a: a, b: b};\n\t});\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$core$Platform$Sub$map = _Platform_map;\nvar $elm$browser$Browser$Events$Window = {$: 'Window'};\nvar $elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'MySub', a: a, b: b, c: c};\n\t});\nvar $elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {pids: pids, subs: subs};\n\t});\nvar $elm$browser$Browser$Events$init = $elm$core$Task$succeed(\n\tA2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));\nvar $elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (node.$ === 'Document') {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar $elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\t$elm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar $elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, dict) {\n\t\t\t\tvar key = _v0.a;\n\t\t\t\tvar value = _v0.b;\n\t\t\t\treturn A3($elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\t$elm$core$Dict$empty,\n\t\tassocs);\n};\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {event: event, key: key};\n\t});\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (node.$ === 'Document') {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2($elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);\n\t});\nvar $elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _v6) {\n\t\t\t\tvar deads = _v6.a;\n\t\t\t\tvar lives = _v6.b;\n\t\t\t\tvar news = _v6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3($elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_v4, pid, _v5) {\n\t\t\t\tvar deads = _v5.a;\n\t\t\t\tvar lives = _v5.b;\n\t\t\t\tvar news = _v5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _v2, _v3) {\n\t\t\t\tvar deads = _v3.a;\n\t\t\t\tvar lives = _v3.b;\n\t\t\t\tvar news = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);\n\t\tvar _v0 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.pids,\n\t\t\t$elm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _v0.a;\n\t\tvar livePids = _v0.b;\n\t\tvar makeNewPids = _v0.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\t$elm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\t$elm$core$Task$sequence(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Process$kill, deadPids))));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _v0, state) {\n\t\tvar key = _v0.key;\n\t\tvar event = _v0.event;\n\t\tvar toMessage = function (_v2) {\n\t\t\tvar subKey = _v2.a;\n\t\t\tvar _v3 = _v2.b;\n\t\t\tvar node = _v3.a;\n\t\t\tvar name = _v3.b;\n\t\t\tvar decoder = _v3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2($elm$core$List$filterMap, toMessage, state.subs);\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v1) {\n\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar $elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _v0) {\n\t\tvar node = _v0.a;\n\t\tvar name = _v0.b;\n\t\tvar decoder = _v0.c;\n\t\treturn A3(\n\t\t\t$elm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2($elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);\nvar $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar $elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn $elm$browser$Browser$Events$subscription(\n\t\t\tA3($elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar $elm$browser$Browser$Events$onResize = function (func) {\n\treturn A3(\n\t\t$elm$browser$Browser$Events$on,\n\t\t$elm$browser$Browser$Events$Window,\n\t\t'resize',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'target',\n\t\t\tA3(\n\t\t\t\t$elm$json$Json$Decode$map2,\n\t\t\t\tfunc,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),\n\t\t\t\tA2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));\n};\nvar $author$project$Page$ChatRooms$GotMultiRoomMsg = function (a) {\n\treturn {$: 'GotMultiRoomMsg', a: a};\n};\nvar $author$project$Example$MultiRoomChat$OnResize = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'OnResize', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Phoenix$ReceivedChannelMsg = function (a) {\n\treturn {$: 'ReceivedChannelMsg', a: a};\n};\nvar $author$project$Phoenix$ReceivedPresenceMsg = function (a) {\n\treturn {$: 'ReceivedPresenceMsg', a: a};\n};\nvar $author$project$Phoenix$ReceivedSocketMsg = function (a) {\n\treturn {$: 'ReceivedSocketMsg', a: a};\n};\nvar $author$project$Phoenix$TimeoutTick = function (a) {\n\treturn {$: 'TimeoutTick', a: a};\n};\nvar $elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Every', a: a, b: b};\n\t});\nvar $elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {processes: processes, taggers: taggers};\n\t});\nvar $elm$time$Time$init = $elm$core$Task$succeed(\n\tA2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));\nvar $elm$time$Time$addMySub = F2(\n\tfunction (_v0, state) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\tvar _v1 = A2($elm$core$Dict$get, interval, state);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2($elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 'Name', a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 'Offset', a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Zone', a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$setInterval = _Time_setInterval;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn $elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = $elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2($elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2($elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar $elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar processes = _v0.processes;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_v6, id, _v7) {\n\t\t\t\tvar spawns = _v7.a;\n\t\t\t\tvar existing = _v7.b;\n\t\t\t\tvar kills = _v7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _v4) {\n\t\t\t\tvar spawns = _v4.a;\n\t\t\t\tvar existing = _v4.b;\n\t\t\t\tvar kills = _v4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _v3) {\n\t\t\t\tvar spawns = _v3.a;\n\t\t\t\tvar existing = _v3.b;\n\t\t\t\tvar kills = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _v1 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$Dict$empty,\n\t\t\t\t$elm$core$Task$succeed(_Utils_Tuple0)));\n\t\tvar spawnList = _v1.a;\n\t\tvar existingDict = _v1.b;\n\t\tvar killTask = _v1.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar $elm$time$Time$Posix = function (a) {\n\treturn {$: 'Posix', a: a};\n};\nvar $elm$time$Time$millisToPosix = $elm$time$Time$Posix;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _v0 = A2($elm$core$Dict$get, interval, state.taggers);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn $elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _v0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn $elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));\n\t\t}\n\t});\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$time$Time$subMap = F2(\n\tfunction (f, _v0) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2($elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);\nvar $elm$time$Time$subscription = _Platform_leaf('Time');\nvar $elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn $elm$time$Time$subscription(\n\t\t\tA2($elm$time$Time$Every, interval, tagger));\n\t});\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $author$project$Phoenix$Channel$Closed = function (a) {\n\treturn {$: 'Closed', a: a};\n};\nvar $author$project$Phoenix$Channel$Error = function (a) {\n\treturn {$: 'Error', a: a};\n};\nvar $author$project$Phoenix$Channel$InternalError = function (a) {\n\treturn {$: 'InternalError', a: a};\n};\nvar $author$project$Phoenix$Channel$InvalidMessage = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'InvalidMessage', a: a, b: b, c: c};\n\t});\nvar $author$project$Phoenix$Channel$JoinError = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinError', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Channel$JoinOk = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinOk', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Channel$JoinTimeout = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinTimeout', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Channel$LeaveOk = function (a) {\n\treturn {$: 'LeaveOk', a: a};\n};\nvar $author$project$Phoenix$Channel$Message = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Message', a: a, b: b, c: c};\n\t});\nvar $author$project$Phoenix$Channel$PushError = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushError', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$Channel$PushOk = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushOk', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$Channel$PushTimeout = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushTimeout', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$Channel$DecoderError = function (a) {\n\treturn {$: 'DecoderError', a: a};\n};\nvar $elm$json$Json$Decode$decodeValue = _Json_run;\nvar $author$project$Phoenix$Channel$EventIn = F2(\n\tfunction (event, payload) {\n\t\treturn {event: event, payload: payload};\n\t});\nvar $elm_community$json_extra$Json$Decode$Extra$andMap = $elm$json$Json$Decode$map2($elm$core$Basics$apR);\nvar $author$project$Phoenix$Channel$eventDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string),\n\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Channel$EventIn)));\nvar $author$project$Phoenix$Channel$decodeEvent = F3(\n\tfunction (topic, eventMsg, response) {\n\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Phoenix$Channel$eventDecoder, response);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar event = _v0.a.event;\n\t\t\tvar payload = _v0.a.payload;\n\t\t\treturn A3(eventMsg, topic, event, payload);\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $author$project$Phoenix$Channel$InternalError(\n\t\t\t\t$author$project$Phoenix$Channel$DecoderError(\n\t\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Channel$PushResponse = F3(\n\tfunction (event, payload, ref) {\n\t\treturn {event: event, payload: payload, ref: ref};\n\t});\nvar $author$project$Phoenix$Channel$pushDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string),\n\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Channel$PushResponse))));\nvar $author$project$Phoenix$Channel$decodePushResponse = F3(\n\tfunction (topic, pushMsg, response) {\n\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Phoenix$Channel$pushDecoder, response);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar event = _v0.a.event;\n\t\t\tvar payload = _v0.a.payload;\n\t\t\tvar ref = _v0.a.ref;\n\t\t\treturn A4(pushMsg, topic, event, payload, ref);\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $author$project$Phoenix$Channel$InternalError(\n\t\t\t\t$author$project$Phoenix$Channel$DecoderError(\n\t\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Channel$map = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar topic = _v0.topic;\n\t\tvar msg = _v0.msg;\n\t\tvar payload = _v0.payload;\n\t\tswitch (msg) {\n\t\t\tcase 'JoinOk':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA2($author$project$Phoenix$Channel$JoinOk, topic, payload));\n\t\t\tcase 'JoinError':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA2($author$project$Phoenix$Channel$JoinError, topic, payload));\n\t\t\tcase 'JoinTimeout':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA2($author$project$Phoenix$Channel$JoinTimeout, topic, payload));\n\t\t\tcase 'PushOk':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Channel$decodePushResponse, topic, $author$project$Phoenix$Channel$PushOk, payload));\n\t\t\tcase 'PushError':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Channel$decodePushResponse, topic, $author$project$Phoenix$Channel$PushError, payload));\n\t\t\tcase 'PushTimeout':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Channel$decodePushResponse, topic, $author$project$Phoenix$Channel$PushTimeout, payload));\n\t\t\tcase 'Message':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Channel$decodeEvent, topic, $author$project$Phoenix$Channel$Message, payload));\n\t\t\tcase 'Error':\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Channel$Error(topic));\n\t\t\tcase 'LeaveOk':\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Channel$LeaveOk(topic));\n\t\t\tcase 'Closed':\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Channel$Closed(topic));\n\t\t\tdefault:\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Channel$InternalError(\n\t\t\t\t\t\tA3($author$project$Phoenix$Channel$InvalidMessage, topic, msg, payload)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Channel$subscriptions = F2(\n\tfunction (toMsg, portIn) {\n\t\treturn portIn(\n\t\t\t$author$project$Phoenix$Channel$map(toMsg));\n\t});\nvar $author$project$Phoenix$Presence$Diff = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Diff', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Presence$InternalError = function (a) {\n\treturn {$: 'InternalError', a: a};\n};\nvar $author$project$Phoenix$Presence$InvalidMessage = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'InvalidMessage', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Presence$Join = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Join', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Presence$Leave = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Leave', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Presence$State = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'State', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Presence$DecoderError = function (a) {\n\treturn {$: 'DecoderError', a: a};\n};\nvar $author$project$Phoenix$Presence$decodePresence = F4(\n\tfunction (topic, presenceMsg, decoder, payload) {\n\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, decoder, payload);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar presence = _v0.a;\n\t\t\treturn A2(presenceMsg, topic, presence);\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $author$project$Phoenix$Presence$InternalError(\n\t\t\t\t$author$project$Phoenix$Presence$DecoderError(\n\t\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Presence$PresenceDiff = F2(\n\tfunction (joins, leaves) {\n\t\treturn {joins: joins, leaves: leaves};\n\t});\nvar $elm$json$Json$Decode$list = _Json_decodeList;\nvar $author$project$Phoenix$Presence$Presence = F4(\n\tfunction (id, metas, user, presence) {\n\t\treturn {id: id, metas: metas, presence: presence, user: user};\n\t});\nvar $author$project$Phoenix$Presence$presenceDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'presence', $elm$json$Json$Decode$value),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'user', $elm$json$Json$Decode$value),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2(\n\t\t\t\t$elm$json$Json$Decode$field,\n\t\t\t\t'metas',\n\t\t\t\t$elm$json$Json$Decode$list($elm$json$Json$Decode$value)),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),\n\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Presence$Presence)))));\nvar $author$project$Phoenix$Presence$listDecoder = $elm$json$Json$Decode$list($author$project$Phoenix$Presence$presenceDecoder);\nvar $author$project$Phoenix$Presence$diffDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'leaves', $author$project$Phoenix$Presence$listDecoder),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'joins', $author$project$Phoenix$Presence$listDecoder),\n\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Presence$PresenceDiff)));\nvar $author$project$Phoenix$Presence$stateDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'list', $author$project$Phoenix$Presence$listDecoder),\n\t$elm$json$Json$Decode$succeed($elm$core$Basics$identity));\nvar $author$project$Phoenix$Presence$map = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar topic = _v0.topic;\n\t\tvar msg = _v0.msg;\n\t\tvar payload = _v0.payload;\n\t\tswitch (msg) {\n\t\t\tcase 'Join':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA4($author$project$Phoenix$Presence$decodePresence, topic, $author$project$Phoenix$Presence$Join, $author$project$Phoenix$Presence$presenceDecoder, payload));\n\t\t\tcase 'Leave':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA4($author$project$Phoenix$Presence$decodePresence, topic, $author$project$Phoenix$Presence$Leave, $author$project$Phoenix$Presence$presenceDecoder, payload));\n\t\t\tcase 'State':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA4($author$project$Phoenix$Presence$decodePresence, topic, $author$project$Phoenix$Presence$State, $author$project$Phoenix$Presence$stateDecoder, payload));\n\t\t\tcase 'Diff':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA4($author$project$Phoenix$Presence$decodePresence, topic, $author$project$Phoenix$Presence$Diff, $author$project$Phoenix$Presence$diffDecoder, payload));\n\t\t\tdefault:\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Presence$InternalError(\n\t\t\t\t\t\tA2($author$project$Phoenix$Presence$InvalidMessage, topic, msg)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Presence$subscriptions = F2(\n\tfunction (msg, portIn) {\n\t\treturn portIn(\n\t\t\t$author$project$Phoenix$Presence$map(msg));\n\t});\nvar $author$project$Phoenix$Socket$All = function (a) {\n\treturn {$: 'All', a: a};\n};\nvar $author$project$Phoenix$Socket$Channel = function (a) {\n\treturn {$: 'Channel', a: a};\n};\nvar $author$project$Phoenix$Socket$Connecting = {$: 'Connecting'};\nvar $author$project$Phoenix$Socket$ConnectionState = function (a) {\n\treturn {$: 'ConnectionState', a: a};\n};\nvar $author$project$Phoenix$Socket$Disconnecting = {$: 'Disconnecting'};\nvar $author$project$Phoenix$Socket$EndPointURL = function (a) {\n\treturn {$: 'EndPointURL', a: a};\n};\nvar $author$project$Phoenix$Socket$Heartbeat = function (a) {\n\treturn {$: 'Heartbeat', a: a};\n};\nvar $author$project$Phoenix$Socket$InternalError = function (a) {\n\treturn {$: 'InternalError', a: a};\n};\nvar $author$project$Phoenix$Socket$InvalidMessage = function (a) {\n\treturn {$: 'InvalidMessage', a: a};\n};\nvar $author$project$Phoenix$Socket$IsConnected = function (a) {\n\treturn {$: 'IsConnected', a: a};\n};\nvar $author$project$Phoenix$Socket$MakeRef = function (a) {\n\treturn {$: 'MakeRef', a: a};\n};\nvar $author$project$Phoenix$Socket$Opened = {$: 'Opened'};\nvar $author$project$Phoenix$Socket$Presence = function (a) {\n\treturn {$: 'Presence', a: a};\n};\nvar $author$project$Phoenix$Socket$Protocol = function (a) {\n\treturn {$: 'Protocol', a: a};\n};\nvar $elm$json$Json$Decode$bool = _Json_decodeBool;\nvar $author$project$Phoenix$Socket$ChannelMessage = F5(\n\tfunction (topic, event, payload, joinRef, ref) {\n\t\treturn {event: event, joinRef: joinRef, payload: payload, ref: ref, topic: topic};\n\t});\nvar $elm$json$Json$Decode$oneOf = _Json_oneOf;\nvar $elm$json$Json$Decode$maybe = function (decoder) {\n\treturn $elm$json$Json$Decode$oneOf(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),\n\t\t\t\t$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)\n\t\t\t]));\n};\nvar $author$project$Phoenix$Socket$channelDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t$elm$json$Json$Decode$maybe(\n\t\tA2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string)),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t$elm$json$Json$Decode$maybe(\n\t\t\tA2($elm$json$Json$Decode$field, 'join_ref', $elm$json$Json$Decode$string)),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string),\n\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Socket$ChannelMessage))))));\nvar $author$project$Phoenix$Socket$Closed = function (a) {\n\treturn {$: 'Closed', a: a};\n};\nvar $author$project$Phoenix$Socket$DecoderError = function (a) {\n\treturn {$: 'DecoderError', a: a};\n};\nvar $author$project$Phoenix$Socket$closedDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'isTrusted', $elm$json$Json$Decode$bool),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'wasClean', $elm$json$Json$Decode$bool),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'code', $elm$json$Json$Decode$int),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (reason) {\n\t\t\t\t\t\t\tif ((reason.$ === 'Just') && (reason.a === '')) {\n\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(reason);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$json$Json$Decode$maybe(\n\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'reason', $elm$json$Json$Decode$string))),\n\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Socket$ClosedInfo))))));\nvar $author$project$Phoenix$Socket$decodeClosed = function (payload) {\n\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Phoenix$Socket$closedDecoder, payload);\n\tif (_v0.$ === 'Ok') {\n\t\tvar closed = _v0.a;\n\t\treturn $author$project$Phoenix$Socket$Closed(closed);\n\t} else {\n\t\tvar error = _v0.a;\n\t\treturn $author$project$Phoenix$Socket$InternalError(\n\t\t\t$author$project$Phoenix$Socket$DecoderError(\n\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t}\n};\nvar $author$project$Phoenix$Socket$Error = function (a) {\n\treturn {$: 'Error', a: a};\n};\nvar $author$project$Phoenix$Socket$errorDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'reason', $elm$json$Json$Decode$string),\n\t$elm$json$Json$Decode$succeed($elm$core$Basics$identity));\nvar $author$project$Phoenix$Socket$decodeError = function (payload) {\n\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Phoenix$Socket$errorDecoder, payload);\n\tif (_v0.$ === 'Ok') {\n\t\tvar reason = _v0.a;\n\t\treturn $author$project$Phoenix$Socket$Error(reason);\n\t} else {\n\t\tvar error = _v0.a;\n\t\treturn $author$project$Phoenix$Socket$InternalError(\n\t\t\t$author$project$Phoenix$Socket$DecoderError(\n\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t}\n};\nvar $author$project$Phoenix$Socket$Info = function (a) {\n\treturn {$: 'Info', a: a};\n};\nvar $author$project$Phoenix$Socket$decodeInfo = F3(\n\tfunction (toInfo, decoder, payload) {\n\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, decoder, payload);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar val = _v0.a;\n\t\t\treturn $author$project$Phoenix$Socket$Info(\n\t\t\t\ttoInfo(val));\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $author$project$Phoenix$Socket$InternalError(\n\t\t\t\t$author$project$Phoenix$Socket$DecoderError(\n\t\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Socket$decodeMessage = F3(\n\tfunction (toMsg, decoder, payload) {\n\t\tvar _v0 = A2($elm$json$Json$Decode$decodeValue, decoder, payload);\n\t\tif (_v0.$ === 'Ok') {\n\t\t\tvar message = _v0.a;\n\t\t\treturn toMsg(message);\n\t\t} else {\n\t\t\tvar error = _v0.a;\n\t\t\treturn $author$project$Phoenix$Socket$InternalError(\n\t\t\t\t$author$project$Phoenix$Socket$DecoderError(\n\t\t\t\t\t$elm$json$Json$Decode$errorToString(error)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Socket$HeartbeatMessage = F4(\n\tfunction (topic, event, payload, ref) {\n\t\treturn {event: event, payload: payload, ref: ref, topic: topic};\n\t});\nvar $author$project$Phoenix$Socket$heartbeatDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'ref', $elm$json$Json$Decode$string),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string),\n\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Socket$HeartbeatMessage)))));\nvar $author$project$Phoenix$Socket$AllInfo = F5(\n\tfunction (connectionState, endPointURL, isConnected, makeRef, protocol) {\n\t\treturn {connectionState: connectionState, endPointURL: endPointURL, isConnected: isConnected, makeRef: makeRef, protocol: protocol};\n\t});\nvar $author$project$Phoenix$Socket$infoDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'protocol', $elm$json$Json$Decode$string),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'nextMessageRef', $elm$json$Json$Decode$string),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'isConnected', $elm$json$Json$Decode$bool),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'endPointURL', $elm$json$Json$Decode$string),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'connectionState', $elm$json$Json$Decode$string),\n\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Socket$AllInfo))))));\nvar $author$project$Phoenix$Socket$PresenceMessage = F3(\n\tfunction (topic, event, payload) {\n\t\treturn {event: event, payload: payload, topic: topic};\n\t});\nvar $author$project$Phoenix$Socket$presenceDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'payload', $elm$json$Json$Decode$value),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'event', $elm$json$Json$Decode$string),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'topic', $elm$json$Json$Decode$string),\n\t\t\t$elm$json$Json$Decode$succeed($author$project$Phoenix$Socket$PresenceMessage))));\nvar $author$project$Phoenix$Socket$map = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar msg = _v0.msg;\n\t\tvar payload = _v0.payload;\n\t\tswitch (msg) {\n\t\t\tcase 'Opened':\n\t\t\t\treturn toMsg($author$project$Phoenix$Socket$Opened);\n\t\t\tcase 'Connecting':\n\t\t\t\treturn toMsg($author$project$Phoenix$Socket$Connecting);\n\t\t\tcase 'Disconnecting':\n\t\t\t\treturn toMsg($author$project$Phoenix$Socket$Disconnecting);\n\t\t\tcase 'Error':\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Socket$decodeError(payload));\n\t\t\tcase 'Closed':\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Socket$decodeClosed(payload));\n\t\t\tcase 'Channel':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeMessage, $author$project$Phoenix$Socket$Channel, $author$project$Phoenix$Socket$channelDecoder, payload));\n\t\t\tcase 'Presence':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeMessage, $author$project$Phoenix$Socket$Presence, $author$project$Phoenix$Socket$presenceDecoder, payload));\n\t\t\tcase 'Heartbeat':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeMessage, $author$project$Phoenix$Socket$Heartbeat, $author$project$Phoenix$Socket$heartbeatDecoder, payload));\n\t\t\tcase 'ConnectionState':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$ConnectionState, $elm$json$Json$Decode$string, payload));\n\t\t\tcase 'EndPointURL':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$EndPointURL, $elm$json$Json$Decode$string, payload));\n\t\t\tcase 'Info':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$All, $author$project$Phoenix$Socket$infoDecoder, payload));\n\t\t\tcase 'IsConnected':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$IsConnected, $elm$json$Json$Decode$bool, payload));\n\t\t\tcase 'MakeRef':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$MakeRef, $elm$json$Json$Decode$string, payload));\n\t\t\tcase 'Protocol':\n\t\t\t\treturn toMsg(\n\t\t\t\t\tA3($author$project$Phoenix$Socket$decodeInfo, $author$project$Phoenix$Socket$Protocol, $elm$json$Json$Decode$string, payload));\n\t\t\tdefault:\n\t\t\t\treturn toMsg(\n\t\t\t\t\t$author$project$Phoenix$Socket$InternalError(\n\t\t\t\t\t\t$author$project$Phoenix$Socket$InvalidMessage(msg)));\n\t\t}\n\t});\nvar $author$project$Phoenix$Socket$subscriptions = F2(\n\tfunction (msg, portIn) {\n\t\treturn portIn(\n\t\t\t$author$project$Phoenix$Socket$map(msg));\n\t});\nvar $elm$core$Dict$isEmpty = function (dict) {\n\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $author$project$Internal$Config$isEmpty = $elm$core$Dict$isEmpty;\nvar $elm$core$Basics$not = _Basics_not;\nvar $author$project$Internal$Config$exists = A2($elm$core$Basics$composeR, $author$project$Internal$Config$isEmpty, $elm$core$Basics$not);\nvar $author$project$Internal$Push$timeoutsExist = function (_v0) {\n\tvar timeouts = _v0.a.timeouts;\n\treturn $author$project$Internal$Config$exists(timeouts);\n};\nvar $author$project$Phoenix$subscriptions = function (_v0) {\n\tvar model = _v0.a;\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($author$project$Phoenix$Channel$subscriptions, $author$project$Phoenix$ReceivedChannelMsg, model.portConfig.channelReceiver),\n\t\t\t\tA2($author$project$Phoenix$Socket$subscriptions, $author$project$Phoenix$ReceivedSocketMsg, model.portConfig.socketReceiver),\n\t\t\t\tA2($author$project$Phoenix$Presence$subscriptions, $author$project$Phoenix$ReceivedPresenceMsg, model.portConfig.presenceReceiver),\n\t\t\t\t$author$project$Internal$Push$timeoutsExist(model.push) ? A2($elm$time$Time$every, 1000, $author$project$Phoenix$TimeoutTick) : $elm$core$Platform$Sub$none\n\t\t\t]));\n};\nvar $author$project$Example$MultiRoomChat$subscriptions = function (model) {\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Example$MultiRoomChat$OnResize),\n\t\t\t\tA2(\n\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t$author$project$Phoenix$subscriptions(model.phoenix))\n\t\t\t]));\n};\nvar $author$project$Page$ChatRooms$subscriptions = function (model) {\n\tvar _v0 = model.example;\n\tvar subModel = _v0.a;\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Page$ChatRooms$GotMultiRoomMsg,\n\t\t$author$project$Example$MultiRoomChat$subscriptions(subModel));\n};\nvar $author$project$Page$ControlTheSocketConnection$GotConnectWithBadParamsMsg = function (a) {\n\treturn {$: 'GotConnectWithBadParamsMsg', a: a};\n};\nvar $author$project$Page$ControlTheSocketConnection$GotConnectWithGoodParamsMsg = function (a) {\n\treturn {$: 'GotConnectWithGoodParamsMsg', a: a};\n};\nvar $author$project$Page$ControlTheSocketConnection$GotSimpleConnectMsg = function (a) {\n\treturn {$: 'GotSimpleConnectMsg', a: a};\n};\nvar $author$project$Page$ControlTheSocketConnection$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$ConnectWithBadParams$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$ConnectWithBadParams$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$ConnectWithBadParams$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$ConnectWithGoodParams$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$ConnectWithGoodParams$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$ConnectWithGoodParams$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$SimpleConnect$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$SimpleConnect$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$SimpleConnect$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Page$ControlTheSocketConnection$subscriptions = function (model) {\n\tvar exampleSub = function () {\n\t\tvar _v0 = model.example;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'SimpleConnect':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotSimpleConnectMsg,\n\t\t\t\t\t$author$project$Example$SimpleConnect$subscriptions(subModel));\n\t\t\tcase 'ConnectWithGoodParams':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithGoodParamsMsg,\n\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$subscriptions(subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithBadParamsMsg,\n\t\t\t\t\t$author$project$Example$ConnectWithBadParams$subscriptions(subModel));\n\t\t}\n\t}();\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\texampleSub,\n\t\t\t\tA2(\n\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t$author$project$Page$ControlTheSocketConnection$PhoenixMsg,\n\t\t\t\t$author$project$Phoenix$subscriptions(\n\t\t\t\t\t$author$project$Session$phoenix(model.session)))\n\t\t\t]));\n};\nvar $author$project$Page$Home$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Page$Home$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(\n\t\t\t$author$project$Session$phoenix(model)));\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotJoinMultipleChannelsMsg = function (a) {\n\treturn {$: 'GotJoinMultipleChannelsMsg', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotJoinWithBadParamsMsg = function (a) {\n\treturn {$: 'GotJoinWithBadParamsMsg', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotJoinWithGoodParamsMsg = function (a) {\n\treturn {$: 'GotJoinWithGoodParamsMsg', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotSimpleJoinAndLeaveMsg = function (a) {\n\treturn {$: 'GotSimpleJoinAndLeaveMsg', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$JoinMultipleChannels$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$JoinMultipleChannels$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$JoinMultipleChannels$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$JoinWithBadParams$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$JoinWithBadParams$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$JoinWithBadParams$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$JoinWithGoodParams$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$JoinWithGoodParams$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$JoinWithGoodParams$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$SimpleJoinAndLeave$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$SimpleJoinAndLeave$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$SimpleJoinAndLeave$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Page$JoinAndLeaveChannels$subscriptions = function (model) {\n\tvar exampleSub = function () {\n\t\tvar _v0 = model.example;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'SimpleJoinAndLeave':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotSimpleJoinAndLeaveMsg,\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$subscriptions(subModel));\n\t\t\tcase 'JoinWithGoodParams':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithGoodParamsMsg,\n\t\t\t\t\t$author$project$Example$JoinWithGoodParams$subscriptions(subModel));\n\t\t\tcase 'JoinWithBadParams':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithBadParamsMsg,\n\t\t\t\t\t$author$project$Example$JoinWithBadParams$subscriptions(subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinMultipleChannelsMsg,\n\t\t\t\t\t$author$project$Example$JoinMultipleChannels$subscriptions(subModel));\n\t\t}\n\t}();\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\texampleSub,\n\t\t\t\tA2(\n\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t$author$project$Page$JoinAndLeaveChannels$PhoenixMsg,\n\t\t\t\t$author$project$Phoenix$subscriptions(\n\t\t\t\t\t$author$project$Session$phoenix(model.session)))\n\t\t\t]));\n};\nvar $author$project$Page$SendAndReceive$GotPushMultipleEventsMsg = function (a) {\n\treturn {$: 'GotPushMultipleEventsMsg', a: a};\n};\nvar $author$project$Page$SendAndReceive$GotPushOneEventMsg = function (a) {\n\treturn {$: 'GotPushOneEventMsg', a: a};\n};\nvar $author$project$Page$SendAndReceive$GotPushWithTimeoutMsg = function (a) {\n\treturn {$: 'GotPushWithTimeoutMsg', a: a};\n};\nvar $author$project$Page$SendAndReceive$GotReceiveEventsMsg = function (a) {\n\treturn {$: 'GotReceiveEventsMsg', a: a};\n};\nvar $author$project$Page$SendAndReceive$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$PushMultipleEvents$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$PushMultipleEvents$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$PushMultipleEvents$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$PushOneEvent$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$PushOneEvent$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$PushOneEvent$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$PushWithTimeout$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$PushWithTimeout$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$PushWithTimeout$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Example$ReceiveEvents$PhoenixMsg = function (a) {\n\treturn {$: 'PhoenixMsg', a: a};\n};\nvar $author$project$Example$ReceiveEvents$subscriptions = function (model) {\n\treturn A2(\n\t\t$elm$core$Platform$Sub$map,\n\t\t$author$project$Example$ReceiveEvents$PhoenixMsg,\n\t\t$author$project$Phoenix$subscriptions(model.phoenix));\n};\nvar $author$project$Page$SendAndReceive$subscriptions = function (model) {\n\tvar exampleSub = function () {\n\t\tvar _v0 = model.example;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'PushOneEvent':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushOneEventMsg,\n\t\t\t\t\t$author$project$Example$PushOneEvent$subscriptions(subModel));\n\t\t\tcase 'PushMultipleEvents':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushMultipleEventsMsg,\n\t\t\t\t\t$author$project$Example$PushMultipleEvents$subscriptions(subModel));\n\t\t\tcase 'ReceiveEvents':\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotReceiveEventsMsg,\n\t\t\t\t\t$author$project$Example$ReceiveEvents$subscriptions(subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = _v0.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushWithTimeoutMsg,\n\t\t\t\t\t$author$project$Example$PushWithTimeout$subscriptions(subModel));\n\t\t}\n\t}();\n\treturn $elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\texampleSub,\n\t\t\t\tA2(\n\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t$author$project$Page$SendAndReceive$PhoenixMsg,\n\t\t\t\t$author$project$Phoenix$subscriptions(\n\t\t\t\t\t$author$project$Session$phoenix(model.session)))\n\t\t\t]));\n};\nvar $author$project$Main$subscriptions = function (model) {\n\tswitch (model.$) {\n\t\tcase 'Redirect':\n\t\t\treturn $elm$browser$Browser$Events$onResize($author$project$Main$WindowResized);\n\t\tcase 'NotFound':\n\t\t\treturn $elm$browser$Browser$Events$onResize($author$project$Main$WindowResized);\n\t\tcase 'Home':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t\t$author$project$Main$GotHomeMsg,\n\t\t\t\t\t\t$author$project$Page$Home$subscriptions(subModel)),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$WindowResized)\n\t\t\t\t\t]));\n\t\tcase 'ChatRooms':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t\t$author$project$Main$GotChatRoomsMsg,\n\t\t\t\t\t\t$author$project$Page$ChatRooms$subscriptions(subModel)),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$WindowResized)\n\t\t\t\t\t]));\n\t\tcase 'ControlTheSocketConnection':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t\t$author$project$Main$GotControlTheSocketConnectionMsg,\n\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$subscriptions(subModel)),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$WindowResized)\n\t\t\t\t\t]));\n\t\tcase 'JoinAndLeaveChannels':\n\t\t\tvar subModel = model.a;\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t\t$author$project$Main$GotJoinAndLeaveChannelsMsg,\n\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$subscriptions(subModel)),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$WindowResized)\n\t\t\t\t\t]));\n\t\tdefault:\n\t\t\tvar subModel = model.a;\n\t\t\treturn $elm$core$Platform$Sub$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Platform$Sub$map,\n\t\t\t\t\t\t$author$project$Main$GotSendAndReceiveMsg,\n\t\t\t\t\t\t$author$project$Page$SendAndReceive$subscriptions(subModel)),\n\t\t\t\t\t\t$elm$browser$Browser$Events$onResize($author$project$Main$WindowResized)\n\t\t\t\t\t]));\n\t}\n};\nvar $elm$browser$Browser$Navigation$load = _Browser_load;\nvar $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;\nvar $elm$url$Url$addPort = F2(\n\tfunction (maybePort, starter) {\n\t\tif (maybePort.$ === 'Nothing') {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar port_ = maybePort.a;\n\t\t\treturn starter + (':' + $elm$core$String$fromInt(port_));\n\t\t}\n\t});\nvar $elm$url$Url$addPrefixed = F3(\n\tfunction (prefix, maybeSegment, starter) {\n\t\tif (maybeSegment.$ === 'Nothing') {\n\t\t\treturn starter;\n\t\t} else {\n\t\t\tvar segment = maybeSegment.a;\n\t\t\treturn _Utils_ap(\n\t\t\t\tstarter,\n\t\t\t\t_Utils_ap(prefix, segment));\n\t\t}\n\t});\nvar $elm$url$Url$toString = function (url) {\n\tvar http = function () {\n\t\tvar _v0 = url.protocol;\n\t\tif (_v0.$ === 'Http') {\n\t\t\treturn 'http://';\n\t\t} else {\n\t\t\treturn 'https://';\n\t\t}\n\t}();\n\treturn A3(\n\t\t$elm$url$Url$addPrefixed,\n\t\t'#',\n\t\turl.fragment,\n\t\tA3(\n\t\t\t$elm$url$Url$addPrefixed,\n\t\t\t'?',\n\t\t\turl.query,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$url$Url$addPort,\n\t\t\t\t\turl.port_,\n\t\t\t\t\t_Utils_ap(http, url.host)),\n\t\t\t\turl.path)));\n};\nvar $author$project$Example$MultiRoomChat$InLobby = function (a) {\n\treturn {$: 'InLobby', a: a};\n};\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$browser$Browser$Navigation$back = F2(\n\tfunction (key, n) {\n\t\treturn A2(_Browser_go, key, -n);\n\t});\nvar $author$project$Route$back = function (key) {\n\treturn A2($elm$browser$Browser$Navigation$back, key, 1);\n};\nvar $author$project$Internal$Channel$defaultLeaveConfig = function (topic) {\n\treturn {timeout: $elm$core$Maybe$Nothing, topic: topic};\n};\nvar $author$project$Internal$Config$get = $elm$core$Dict$get;\nvar $author$project$Phoenix$Channel$leave = F2(\n\tfunction (_v0, portOut) {\n\t\tvar topic = _v0.topic;\n\t\tvar timeout = _v0.timeout;\n\t\treturn portOut(\n\t\t\t{\n\t\t\t\tmsg: 'leave',\n\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'topic',\n\t\t\t\t\t\t\t$elm$json$Json$Encode$string(topic)),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'timeout',\n\t\t\t\t\t\t\tA2($elm_community$json_extra$Json$Encode$Extra$maybe, $elm$json$Json$Encode$int, timeout))\n\t\t\t\t\t\t]))\n\t\t\t});\n\t});\nvar $elm$core$Set$insert = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn $elm$core$Set$Set_elm_builtin(\n\t\t\tA3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));\n\t});\nvar $author$project$Internal$Unique$insert = $elm$core$Set$insert;\nvar $author$project$Internal$Channel$queueLeave = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a;\n\t\tvar queuedLeaves = channel.queuedLeaves;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tqueuedLeaves: A2($author$project$Internal$Unique$insert, topic, queuedLeaves)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Config$insert = $elm$core$Dict$insert;\nvar $author$project$Internal$Channel$setLeaveConfig = F2(\n\tfunction (config, _v0) {\n\t\tvar topic = config.topic;\n\t\tvar channel = _v0.a;\n\t\tvar leaveConfigs = channel.leaveConfigs;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tleaveConfigs: A3($author$project$Internal$Config$insert, topic, config, leaveConfigs)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Channel$leave = F2(\n\tfunction (topic, channel) {\n\t\tvar leaveConfigs = channel.a.leaveConfigs;\n\t\tvar portOut = channel.a.portOut;\n\t\tvar _v0 = A2($author$project$Internal$Config$get, topic, leaveConfigs);\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar config = _v0.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($author$project$Internal$Channel$queueLeave, topic, channel),\n\t\t\t\tA2($author$project$Phoenix$Channel$leave, config, portOut));\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$author$project$Internal$Channel$leave,\n\t\t\t\ttopic,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Internal$Channel$setLeaveConfig,\n\t\t\t\t\t$author$project$Internal$Channel$defaultLeaveConfig(topic),\n\t\t\t\t\tchannel));\n\t\t}\n\t});\nvar $author$project$Phoenix$leave = F2(\n\tfunction (topic, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\t\tif (_v1.$ === 'Connected') {\n\t\t\tvar _v2 = A2($author$project$Internal$Channel$leave, topic, model.channel);\n\t\t\tvar channel = _v2.a;\n\t\t\tvar channelCmd = _v2.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{channel: channel})),\n\t\t\t\tchannelCmd);\n\t\t} else {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchannel: A2($author$project$Internal$Channel$queueLeave, topic, model.channel)\n\t\t\t\t\t\t})),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $author$project$Utils$updatePhoenixWith = F3(\n\tfunction (toMsg, model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{phoenix: phoenix}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, phoenixCmd));\n\t});\nvar $author$project$Example$MultiRoomChat$back = F2(\n\tfunction (key, model) {\n\t\tvar _v0 = model.state;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Unregistered':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Route$back(key));\n\t\t\tcase 'InRoom':\n\t\t\t\tvar room = _v0.a;\n\t\t\t\tvar currentUser = _v0.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(currentUser)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:room:' + room.id, model.phoenix));\n\t\t\tdefault:\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$Unregistered($author$project$Type$User$init)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:lobby', model.phoenix));\n\t\t}\n\t});\nvar $author$project$Type$User$Accepted = {$: 'Accepted'};\nvar $author$project$Type$User$Accepting = {$: 'Accepting'};\nvar $author$project$Type$User$Declined = {$: 'Declined'};\nvar $author$project$Type$User$Declining = {$: 'Declining'};\nvar $author$project$Type$Lobby$Deleting = function (a) {\n\treturn {$: 'Deleting', a: a};\n};\nvar $author$project$Type$Lobby$Entering = function (a) {\n\treturn {$: 'Entering', a: a};\n};\nvar $author$project$Type$User$Expired = {$: 'Expired'};\nvar $author$project$Example$MultiRoomChat$InRoom = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'InRoom', a: a, b: b};\n\t});\nvar $author$project$Type$Lobby$Inspecting = function (a) {\n\treturn {$: 'Inspecting', a: a};\n};\nvar $author$project$Type$User$Invited = {$: 'Invited'};\nvar $author$project$Type$User$Inviting = {$: 'Inviting'};\nvar $author$project$Type$Lobby$NoAction = function (a) {\n\treturn {$: 'NoAction', a: a};\n};\nvar $author$project$Type$User$Revoked = {$: 'Revoked'};\nvar $author$project$Type$User$Revoking = {$: 'Revoking'};\nvar $author$project$Type$User$match = F2(\n\tfunction (_v0, _v1) {\n\t\tvar userA = _v0.a;\n\t\tvar userB = _v1.a;\n\t\treturn _Utils_eq(userA.id, userB.id);\n\t});\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$core$List$partition = F2(\n\tfunction (pred, list) {\n\t\tvar step = F2(\n\t\t\tfunction (x, _v0) {\n\t\t\t\tvar trues = _v0.a;\n\t\t\t\tvar falses = _v0.b;\n\t\t\t\treturn pred(x) ? _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, x, trues),\n\t\t\t\t\tfalses) : _Utils_Tuple2(\n\t\t\t\t\ttrues,\n\t\t\t\t\tA2($elm$core$List$cons, x, falses));\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tstep,\n\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\tlist);\n\t});\nvar $author$project$Type$User$member = F2(\n\tfunction (user, users) {\n\t\treturn !$elm$core$List$isEmpty(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$partition,\n\t\t\t\t$author$project$Type$User$match(user),\n\t\t\t\tusers).a);\n\t});\nvar $author$project$Type$Room$addOccupantTyping = F3(\n\tfunction (currentUser, user, room) {\n\t\treturn (!(A2($author$project$Type$User$match, currentUser, user) && (!A2($author$project$Type$User$member, user, room.occupantsTyping)))) ? _Utils_update(\n\t\t\troom,\n\t\t\t{\n\t\t\t\toccupantsTyping: A2($elm$core$List$cons, user, room.occupantsTyping)\n\t\t\t}) : room;\n\t});\nvar $author$project$Type$User$bgColorSelected = F2(\n\tfunction (color, user) {\n\t\treturn _Utils_update(\n\t\t\tuser,\n\t\t\t{\n\t\t\t\tbackgroundColor: $elm$core$Maybe$Just(color),\n\t\t\t\tbackgroundColorError: $elm$core$Maybe$Nothing\n\t\t\t});\n\t});\nvar $author$project$Type$Room$clearMessage = function (room) {\n\treturn _Utils_update(\n\t\troom,\n\t\t{message: ''});\n};\nvar $author$project$Type$User$id = function (_v0) {\n\tvar id_ = _v0.a;\n\treturn id_;\n};\nvar $author$project$Type$User$createInviteId = F3(\n\tfunction (_v0, roomId, _v1) {\n\t\tvar toUser = _v0.a;\n\t\tvar fromUser = _v1.a;\n\t\treturn $author$project$Type$User$id(toUser.id) + (':' + (roomId + (':' + $author$project$Type$User$id(fromUser.id))));\n\t});\nvar $author$project$Type$User$createInvite = F3(\n\tfunction (toUser, roomId, fromUser) {\n\t\treturn {\n\t\t\tfrom: fromUser,\n\t\t\tid: A3($author$project$Type$User$createInviteId, toUser, roomId, fromUser),\n\t\t\troomId: roomId,\n\t\t\tto: toUser\n\t\t};\n\t});\nvar $author$project$Type$Room$Room = F6(\n\tfunction (id, owner, members, message, messages, occupantsTyping) {\n\t\treturn {id: id, members: members, message: message, messages: messages, occupantsTyping: occupantsTyping, owner: owner};\n\t});\nvar $author$project$Type$ChatMessage$ChatMessage = F3(\n\tfunction (text, owner, createdAt) {\n\t\treturn {createdAt: createdAt, owner: owner, text: text};\n\t});\nvar $author$project$Type$User$RegisteredUser = function (a) {\n\treturn {$: 'RegisteredUser', a: a};\n};\nvar $author$project$Type$User$TempUser = F6(\n\tfunction (id, username, backgroundColor, foregroundColor, sentInvites, receivedInvites) {\n\t\treturn {backgroundColor: backgroundColor, foregroundColor: foregroundColor, id: id, receivedInvites: receivedInvites, sentInvites: sentInvites, username: username};\n\t});\nvar $author$project$Type$Color$RGBA = F4(\n\tfunction (red, green, blue, alpha) {\n\t\treturn {alpha: alpha, blue: blue, green: green, red: red};\n\t});\nvar $elm$json$Json$Decode$float = _Json_decodeFloat;\nvar $mdgriffith$elm_ui$Internal$Model$Rgba = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'Rgba', a: a, b: b, c: c, d: d};\n\t});\nvar $mdgriffith$elm_ui$Element$fromRgb = function (clr) {\n\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, clr.red, clr.green, clr.blue, clr.alpha);\n};\nvar $author$project$Type$Color$fromRgbaDecoder = function (rgba) {\n\treturn $elm$json$Json$Decode$succeed(\n\t\t$mdgriffith$elm_ui$Element$fromRgb(rgba));\n};\nvar $author$project$Type$Color$decoder = A2(\n\t$elm$json$Json$Decode$andThen,\n\t$author$project$Type$Color$fromRgbaDecoder,\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'alpha', $elm$json$Json$Decode$float),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'blue', $elm$json$Json$Decode$float),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'green', $elm$json$Json$Decode$float),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'red', $elm$json$Json$Decode$float),\n\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Type$Color$RGBA))))));\nvar $author$project$Type$User$ID = function (a) {\n\treturn {$: 'ID', a: a};\n};\nvar $elm$json$Json$Decode$fail = _Json_fail;\nvar $author$project$Type$User$toID = function (id_) {\n\treturn $elm$core$String$isEmpty(id_) ? $elm$json$Json$Decode$fail('User ID cannot be empty.') : $elm$json$Json$Decode$succeed(\n\t\t$author$project$Type$User$ID(id_));\n};\nvar $author$project$Type$User$decoder = A2(\n\t$elm$json$Json$Decode$andThen,\n\tfunction (user) {\n\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t$author$project$Type$User$RegisteredUser(user));\n\t},\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t$elm$json$Json$Decode$succeed($elm$core$Dict$empty),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t$elm$json$Json$Decode$succeed($elm$core$Dict$empty),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'foreground_color', $author$project$Type$Color$decoder),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'background_color', $author$project$Type$Color$decoder),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'username', $elm$json$Json$Decode$string),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\t\t\t$author$project$Type$User$toID,\n\t\t\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string)),\n\t\t\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Type$User$TempUser))))))));\nvar $author$project$Type$ChatMessage$decoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'created_at', $elm$json$Json$Decode$int),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'owner', $author$project$Type$User$decoder),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'text', $elm$json$Json$Decode$string),\n\t\t\t$elm$json$Json$Decode$succeed($author$project$Type$ChatMessage$ChatMessage))));\nvar $author$project$Type$Room$decoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t$elm$json$Json$Decode$succeed(_List_Nil),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'messages',\n\t\t\t$elm$json$Json$Decode$list($author$project$Type$ChatMessage$decoder)),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t$elm$json$Json$Decode$succeed(''),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$field,\n\t\t\t\t\t'members',\n\t\t\t\t\t$elm$json$Json$Decode$list($author$project$Type$User$decoder)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\tA2($elm$json$Json$Decode$field, 'owner', $author$project$Type$User$decoder),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),\n\t\t\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Type$Room$Room)))))));\nvar $author$project$Type$Room$decode = function (payload) {\n\treturn A2($elm$json$Json$Decode$decodeValue, $author$project$Type$Room$decoder, payload);\n};\nvar $author$project$Type$User$decode = function (payload) {\n\treturn A2($elm$json$Json$Decode$decodeValue, $author$project$Type$User$decoder, payload);\n};\nvar $author$project$Type$ChatMessage$decodeList = function (payload) {\n\treturn A2(\n\t\t$elm$json$Json$Decode$decodeValue,\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'messages',\n\t\t\t$elm$json$Json$Decode$list($author$project$Type$ChatMessage$decoder)),\n\t\tpayload);\n};\nvar $author$project$Type$Room$decodeList = function (payload) {\n\treturn A2(\n\t\t$elm$json$Json$Decode$decodeValue,\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$field,\n\t\t\t'rooms',\n\t\t\t$elm$json$Json$Decode$list($author$project$Type$Room$decoder)),\n\t\tpayload);\n};\nvar $author$project$Type$User$decodePresenceState = function (state) {\n\treturn A2(\n\t\t$elm$core$List$filterMap,\n\t\tfunction (_v0) {\n\t\t\tvar user = _v0.user;\n\t\t\tvar _v1 = $author$project$Type$User$decode(user);\n\t\t\tif (_v1.$ === 'Ok') {\n\t\t\t\tvar u = _v1.a;\n\t\t\t\treturn $elm$core$Maybe$Just(u);\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t},\n\t\tstate);\n};\nvar $author$project$Type$User$RoomInvite = F4(\n\tfunction (id, from, to, roomId) {\n\t\treturn {from: from, id: id, roomId: roomId, to: to};\n\t});\nvar $author$project$Type$User$roomInviteDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'room_id', $elm$json$Json$Decode$string),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'to', $author$project$Type$User$decoder),\n\t\tA2(\n\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\tA2($elm$json$Json$Decode$field, 'from', $author$project$Type$User$decoder),\n\t\t\tA2(\n\t\t\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\t\t\tA2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string),\n\t\t\t\t$elm$json$Json$Decode$succeed($author$project$Type$User$RoomInvite)))));\nvar $author$project$Type$User$decodeRoomInvite = function (payload) {\n\treturn A2($elm$json$Json$Decode$decodeValue, $author$project$Type$User$roomInviteDecoder, payload);\n};\nvar $author$project$Type$User$deleteReceivedInvite = F2(\n\tfunction (invite, _v0) {\n\t\tvar user = _v0.a;\n\t\tvar key = A3($author$project$Type$User$createInviteId, invite.to, invite.roomId, invite.from);\n\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t_Utils_update(\n\t\t\t\tuser,\n\t\t\t\t{\n\t\t\t\t\treceivedInvites: A2($elm$core$Dict$remove, key, user.receivedInvites)\n\t\t\t\t}));\n\t});\nvar $author$project$Type$User$deleteInvitesForRoom = F2(\n\tfunction (roomId, invites) {\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (key, _v0, dict) {\n\t\t\t\t\tvar _v1 = A2($elm$core$String$split, ':', key);\n\t\t\t\t\tif (((_v1.b && _v1.b.b) && _v1.b.b.b) && (!_v1.b.b.b.b)) {\n\t\t\t\t\t\tvar _v2 = _v1.b;\n\t\t\t\t\t\tvar roomId_ = _v2.a;\n\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\treturn _Utils_eq(roomId_, roomId) ? A2($elm$core$Dict$remove, key, dict) : dict;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn dict;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\tinvites,\n\t\t\tinvites);\n\t});\nvar $author$project$Type$User$dropInviteForRoom = F2(\n\tfunction (roomId, _v0) {\n\t\tvar user = _v0.a;\n\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t_Utils_update(\n\t\t\t\tuser,\n\t\t\t\t{\n\t\t\t\t\treceivedInvites: A2($author$project$Type$User$deleteInvitesForRoom, roomId, user.receivedInvites)\n\t\t\t\t}));\n\t});\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $author$project$Type$User$drop = F2(\n\tfunction (user, users) {\n\t\treturn A2(\n\t\t\t$elm$core$List$partition,\n\t\t\t$author$project$Type$User$match(user),\n\t\t\tusers).b;\n\t});\nvar $author$project$Type$Room$dropOccupantTyping = F2(\n\tfunction (user, room) {\n\t\treturn _Utils_update(\n\t\t\troom,\n\t\t\t{\n\t\t\t\toccupantsTyping: A2($author$project$Type$User$drop, user, room.occupantsTyping)\n\t\t\t});\n\t});\nvar $author$project$Type$ChatMessage$encode = function (text) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'message',\n\t\t\t\t$elm$json$Json$Encode$string(text))\n\t\t\t]));\n};\nvar $elm$json$Json$Encode$float = _Json_wrap;\nvar $mdgriffith$elm_ui$Element$toRgb = function (_v0) {\n\tvar r = _v0.a;\n\tvar g = _v0.b;\n\tvar b = _v0.c;\n\tvar a = _v0.d;\n\treturn {alpha: a, blue: b, green: g, red: r};\n};\nvar $author$project$Type$Color$encode = function (color) {\n\tvar rgba = $mdgriffith$elm_ui$Element$toRgb(color);\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'red',\n\t\t\t\t$elm$json$Json$Encode$float(rgba.red)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'green',\n\t\t\t\t$elm$json$Json$Encode$float(rgba.green)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'blue',\n\t\t\t\t$elm$json$Json$Encode$float(rgba.blue)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'alpha',\n\t\t\t\t$elm$json$Json$Encode$float(rgba.alpha))\n\t\t\t]));\n};\nvar $author$project$Type$User$encode = function (_v0) {\n\tvar user = _v0.a;\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'id',\n\t\t\t\t$elm$json$Json$Encode$string(\n\t\t\t\t\t$author$project$Type$User$id(user.id))),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'username',\n\t\t\t\t$elm$json$Json$Encode$string(user.username)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'background_color',\n\t\t\t\t$author$project$Type$Color$encode(user.backgroundColor)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'foreground_color',\n\t\t\t\t$author$project$Type$Color$encode(user.foregroundColor))\n\t\t\t]));\n};\nvar $author$project$Type$User$encodeField = function (field) {\n\tswitch (field.$) {\n\t\tcase 'Username':\n\t\t\tvar uname = field.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'username',\n\t\t\t\t$elm$json$Json$Encode$string(uname));\n\t\tcase 'BackgroundColor':\n\t\t\tvar color = field.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'background_color',\n\t\t\t\t$author$project$Type$Color$encode(color));\n\t\tdefault:\n\t\t\tvar color = field.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'foreground_color',\n\t\t\t\t$author$project$Type$Color$encode(color));\n\t}\n};\nvar $author$project$Type$User$encodeFields = function (fields) {\n\treturn $elm$json$Json$Encode$object(\n\t\tA2($elm$core$List$map, $author$project$Type$User$encodeField, fields));\n};\nvar $author$project$Type$User$encodeRoomInvite = function (invite) {\n\treturn $elm$json$Json$Encode$object(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'id',\n\t\t\t\t$elm$json$Json$Encode$string(invite.id)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'from',\n\t\t\t\t$author$project$Type$User$encode(invite.from)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'to',\n\t\t\t\t$author$project$Type$User$encode(invite.to)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'room_id',\n\t\t\t\t$elm$json$Json$Encode$string(invite.roomId))\n\t\t\t]));\n};\nvar $author$project$Type$User$fgColorSelected = F2(\n\tfunction (color, user) {\n\t\treturn _Utils_update(\n\t\t\tuser,\n\t\t\t{\n\t\t\t\tforegroundColor: $elm$core$Maybe$Just(color),\n\t\t\t\tforegroundColorError: $elm$core$Maybe$Nothing\n\t\t\t});\n\t});\nvar $author$project$Type$User$findInviteTo = F3(\n\tfunction (toUser, roomId, _v0) {\n\t\tvar currentUser = _v0.a;\n\t\tvar key = A3(\n\t\t\t$author$project$Type$User$createInviteId,\n\t\t\ttoUser,\n\t\t\troomId,\n\t\t\t$author$project$Type$User$RegisteredUser(currentUser));\n\t\treturn A2($elm$core$Dict$get, key, currentUser.sentInvites);\n\t});\nvar $author$project$Example$MultiRoomChat$GotLayoutHeight = function (a) {\n\treturn {$: 'GotLayoutHeight', a: a};\n};\nvar $elm$core$Task$onError = _Scheduler_onError;\nvar $elm$core$Task$attempt = F2(\n\tfunction (resultToMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\t$elm$core$Task$Perform(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$Task$onError,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\t$elm$core$Result$Err),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\t\tA2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),\n\t\t\t\t\t\t\t$elm$core$Result$Ok),\n\t\t\t\t\t\ttask))));\n\t});\nvar $elm$browser$Browser$Dom$getElement = _Browser_getElement;\nvar $author$project$Example$MultiRoomChat$getLayoutHeight = A2(\n\t$elm$core$Task$attempt,\n\t$author$project$Example$MultiRoomChat$GotLayoutHeight,\n\t$elm$browser$Browser$Dom$getElement('layout'));\nvar $author$project$Phoenix$Connecting = {$: 'Connecting'};\nvar $elm$json$Json$Encode$bool = _Json_wrap;\nvar $elm$json$Json$Encode$list = F2(\n\tfunction (func, entries) {\n\t\treturn _Json_wrap(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t_Json_addEntry(func),\n\t\t\t\t_Json_emptyArray(_Utils_Tuple0),\n\t\t\t\tentries));\n\t});\nvar $author$project$Phoenix$Socket$encodeConnectOption = function (option) {\n\tswitch (option.$) {\n\t\tcase 'BinaryType':\n\t\t\tvar binaryType = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'binaryType',\n\t\t\t\t$elm$json$Json$Encode$string(binaryType));\n\t\tcase 'HeartbeatIntervalMillis':\n\t\t\tvar interval = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'heartbeatIntervalMs',\n\t\t\t\t$elm$json$Json$Encode$int(interval));\n\t\tcase 'Logger':\n\t\t\tvar use = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'logger',\n\t\t\t\t$elm$json$Json$Encode$bool(use));\n\t\tcase 'LongpollerTimeout':\n\t\t\tvar timeout = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'longpollerTimeout',\n\t\t\t\t$elm$json$Json$Encode$int(timeout));\n\t\tcase 'ReconnectAfterMillis':\n\t\t\tvar millis = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'reconnectAfterMs',\n\t\t\t\t$elm$json$Json$Encode$int(millis));\n\t\tcase 'ReconnectSteppedBackoff':\n\t\t\tvar list = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'reconnectSteppedBackoff',\n\t\t\t\tA2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, list));\n\t\tcase 'RejoinAfterMillis':\n\t\t\tvar millis = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'rejoinAfterMs',\n\t\t\t\t$elm$json$Json$Encode$int(millis));\n\t\tcase 'RejoinSteppedBackoff':\n\t\t\tvar list = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'rejoinSteppedBackoff',\n\t\t\t\tA2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, list));\n\t\tcase 'Timeout':\n\t\t\tvar millis = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'timeout',\n\t\t\t\t$elm$json$Json$Encode$int(millis));\n\t\tcase 'Transport':\n\t\t\tvar transport = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'transport',\n\t\t\t\t$elm$json$Json$Encode$string(transport));\n\t\tdefault:\n\t\t\tvar vsn = option.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t'vsn',\n\t\t\t\t$elm$json$Json$Encode$string(vsn));\n\t}\n};\nvar $author$project$Phoenix$Socket$encodeConnectOptionsAndParams = F2(\n\tfunction (options, maybeParams) {\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'options',\n\t\t\t\t\t$elm$json$Json$Encode$object(\n\t\t\t\t\t\tA2($elm$core$List$map, $author$project$Phoenix$Socket$encodeConnectOption, options))),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'params',\n\t\t\t\t\tA2($elm$core$Maybe$withDefault, $elm$json$Json$Encode$null, maybeParams))\n\t\t\t\t]));\n\t});\nvar $author$project$Phoenix$Socket$connect = F3(\n\tfunction (options, maybeParams, portOut) {\n\t\treturn portOut(\n\t\t\t{\n\t\t\t\tmsg: 'connect',\n\t\t\t\tpayload: A2($author$project$Phoenix$Socket$encodeConnectOptionsAndParams, options, maybeParams)\n\t\t\t});\n\t});\nvar $author$project$Internal$Socket$connect = function (_v0) {\n\tvar options = _v0.a.options;\n\tvar params = _v0.a.params;\n\tvar portOut = _v0.a.portOut;\n\treturn A3($author$project$Phoenix$Socket$connect, options, params, portOut);\n};\nvar $author$project$Internal$Socket$setReconnect = F2(\n\tfunction (reconnect_, _v0) {\n\t\tvar socket = _v0.a;\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t_Utils_update(\n\t\t\t\tsocket,\n\t\t\t\t{reconnect: reconnect_}));\n\t});\nvar $author$project$Internal$Socket$setState = F2(\n\tfunction (state, _v0) {\n\t\tvar socket = _v0.a;\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t_Utils_update(\n\t\t\t\tsocket,\n\t\t\t\t{state: state}));\n\t});\nvar $author$project$Phoenix$updateSocketState = F2(\n\tfunction (state, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setState, state, model.socket)\n\t\t\t\t}));\n\t});\nvar $author$project$Phoenix$connect = function (_v0) {\n\tvar model = _v0.a;\n\tvar socket = model.socket;\n\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\tswitch (_v1.$) {\n\t\tcase 'Disconnected':\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t$author$project$Phoenix$Connecting,\n\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setReconnect, false, socket)\n\t\t\t\t\t\t\t}))),\n\t\t\t\t$author$project$Internal$Socket$connect(model.socket));\n\t\tcase 'Disconnecting':\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setReconnect, true, socket)\n\t\t\t\t\t\t})),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\tdefault:\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t}\n};\nvar $elm$core$Dict$member = F2(\n\tfunction (key, dict) {\n\t\tvar _v0 = A2($elm$core$Dict$get, key, dict);\n\t\tif (_v0.$ === 'Just') {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\nvar $elm$core$Set$member = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn A2($elm$core$Dict$member, key, dict);\n\t});\nvar $author$project$Internal$Unique$exists = $elm$core$Set$member;\nvar $author$project$Internal$Channel$isJoined = F2(\n\tfunction (topic, _v0) {\n\t\tvar joined = _v0.a.joined;\n\t\treturn A2($author$project$Internal$Unique$exists, topic, joined);\n\t});\nvar $author$project$Phoenix$Channel$joinConfig = {events: _List_Nil, payload: $elm$json$Json$Encode$null, timeout: $elm$core$Maybe$Nothing, topic: ''};\nvar $author$project$Internal$Channel$defaultJoinConfig = function (topic) {\n\treturn _Utils_update(\n\t\t$author$project$Phoenix$Channel$joinConfig,\n\t\t{topic: topic});\n};\nvar $author$project$Phoenix$Channel$join = F2(\n\tfunction (_v0, portOut) {\n\t\tvar topic = _v0.topic;\n\t\tvar events = _v0.events;\n\t\tvar payload = _v0.payload;\n\t\tvar timeout = _v0.timeout;\n\t\treturn portOut(\n\t\t\t{\n\t\t\t\tmsg: 'join',\n\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'topic',\n\t\t\t\t\t\t\t$elm$json$Json$Encode$string(topic)),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'events',\n\t\t\t\t\t\t\tA2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, events)),\n\t\t\t\t\t\t\t_Utils_Tuple2('payload', payload),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'timeout',\n\t\t\t\t\t\t\tA2($elm_community$json_extra$Json$Encode$Extra$maybe, $elm$json$Json$Encode$int, timeout))\n\t\t\t\t\t\t]))\n\t\t\t});\n\t});\nvar $author$project$Internal$Channel$queueJoin = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a;\n\t\tvar queuedJoins = channel.queuedJoins;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tqueuedJoins: A2($author$project$Internal$Unique$insert, topic, queuedJoins)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Channel$setJoinConfig = F2(\n\tfunction (config, _v0) {\n\t\tvar topic = config.topic;\n\t\tvar channel = _v0.a;\n\t\tvar joinConfigs = channel.joinConfigs;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tjoinConfigs: A3($author$project$Internal$Config$insert, topic, config, joinConfigs)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Channel$join = F2(\n\tfunction (topic, channel) {\n\t\tvar joinConfigs = channel.a.joinConfigs;\n\t\tvar portOut = channel.a.portOut;\n\t\tvar _v0 = A2($author$project$Internal$Config$get, topic, joinConfigs);\n\t\tif (_v0.$ === 'Just') {\n\t\t\tvar joinConfig = _v0.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($author$project$Internal$Channel$queueJoin, topic, channel),\n\t\t\t\tA2($author$project$Phoenix$Channel$join, joinConfig, portOut));\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$author$project$Internal$Channel$join,\n\t\t\t\ttopic,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Internal$Channel$setJoinConfig,\n\t\t\t\t\t$author$project$Internal$Channel$defaultJoinConfig(topic),\n\t\t\t\t\tchannel));\n\t\t}\n\t});\nvar $author$project$Phoenix$queueJoin = F2(\n\tfunction (topic, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tchannel: A2($author$project$Internal$Channel$queueJoin, topic, model.channel)\n\t\t\t\t}));\n\t});\nvar $author$project$Phoenix$join = F2(\n\tfunction (topic, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar channel = model.channel;\n\t\tif (A2($author$project$Internal$Channel$isJoined, topic, channel)) {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\t\t\tswitch (_v1.$) {\n\t\t\t\tcase 'Connected':\n\t\t\t\t\tvar _v2 = A2($author$project$Internal$Channel$join, topic, channel);\n\t\t\t\t\tvar channel_ = _v2.a;\n\t\t\t\t\tvar channelCmd = _v2.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{channel: channel_})),\n\t\t\t\t\t\tchannelCmd);\n\t\t\t\tcase 'Connecting':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$queueJoin,\n\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\tcase 'Disconnecting':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$queueJoin,\n\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\tdefault:\n\t\t\t\t\treturn $author$project$Phoenix$connect(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$queueJoin,\n\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)));\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Type$User$TempRoom = F2(\n\tfunction (occupant, roomId) {\n\t\treturn {occupant: occupant, roomId: roomId};\n\t});\nvar $author$project$Type$User$tempRoomDecoder = A2(\n\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\tA2($elm$json$Json$Decode$field, 'room_id', $elm$json$Json$Decode$string),\n\tA2(\n\t\t$elm_community$json_extra$Json$Decode$Extra$andMap,\n\t\tA2($elm$json$Json$Decode$field, 'occupant', $author$project$Type$User$decoder),\n\t\t$elm$json$Json$Decode$succeed($author$project$Type$User$TempRoom)));\nvar $author$project$Type$User$decodeTempRoom = function (payload) {\n\treturn A2($elm$json$Json$Decode$decodeValue, $author$project$Type$User$tempRoomDecoder, payload);\n};\nvar $author$project$Type$User$deleteInviteFromRoom = F3(\n\tfunction (_v0, roomId, invites) {\n\t\tvar fromUser = _v0.a;\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (key, _v1, dict) {\n\t\t\t\t\tvar _v2 = A2($elm$core$String$split, ':', key);\n\t\t\t\t\tif (((_v2.b && _v2.b.b) && _v2.b.b.b) && (!_v2.b.b.b.b)) {\n\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\tvar roomId_ = _v3.a;\n\t\t\t\t\t\tvar _v4 = _v3.b;\n\t\t\t\t\t\tvar fromId = _v4.a;\n\t\t\t\t\t\treturn (_Utils_eq(roomId_, roomId) && _Utils_eq(\n\t\t\t\t\t\t\tfromId,\n\t\t\t\t\t\t\t$author$project$Type$User$id(fromUser.id))) ? A2($elm$core$Dict$remove, key, dict) : dict;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn dict;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\tinvites,\n\t\t\tinvites);\n\t});\nvar $author$project$Type$User$leftRoom = F2(\n\tfunction (payload, _v0) {\n\t\tvar user = _v0.a;\n\t\tvar _v1 = $author$project$Type$User$decodeTempRoom(payload);\n\t\tif (_v1.$ === 'Ok') {\n\t\t\tvar occupant = _v1.a.occupant;\n\t\t\tvar roomId = _v1.a.roomId;\n\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tuser,\n\t\t\t\t\t{\n\t\t\t\t\t\treceivedInvites: A3($author$project$Type$User$deleteInviteFromRoom, occupant, roomId, user.receivedInvites)\n\t\t\t\t\t}));\n\t\t} else {\n\t\t\treturn $author$project$Type$User$RegisteredUser(user);\n\t\t}\n\t});\nvar $author$project$Configs$joinConfig = {events: _List_Nil, payload: $elm$json$Json$Encode$null, timeout: $elm$core$Maybe$Nothing, topic: ''};\nvar $author$project$Example$MultiRoomChat$lobbyJoinConfig = _Utils_update(\n\t$author$project$Configs$joinConfig,\n\t{\n\t\tevents: _List_fromArray(\n\t\t\t['room_closed', 'room_list', 'room_invite', 'invite_accepted', 'invite_declined', 'invite_expired', 'invite_revoked', 'occupant_left_room']),\n\t\ttopic: 'example:lobby'\n\t});\nvar $author$project$Phoenix$Drop = {$: 'Drop'};\nvar $author$project$Phoenix$pushConfig = {event: '', payload: $elm$json$Json$Encode$null, ref: $elm$core$Maybe$Nothing, retryStrategy: $author$project$Phoenix$Drop, timeout: $elm$core$Maybe$Nothing, topic: ''};\nvar $author$project$Example$MultiRoomChat$lobbyPushConfig = _Utils_update(\n\t$author$project$Phoenix$pushConfig,\n\t{topic: 'example:lobby'});\nvar $author$project$Type$User$byUsername = F2(\n\tfunction (_v0, _v1) {\n\t\tvar user1 = _v0.a;\n\t\tvar user2 = _v1.a;\n\t\tvar _v2 = A2($elm$core$Basics$compare, user1.username, user2.username);\n\t\tswitch (_v2.$) {\n\t\t\tcase 'LT':\n\t\t\t\treturn $elm$core$Basics$LT;\n\t\t\tcase 'EQ':\n\t\t\t\treturn $elm$core$Basics$EQ;\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Basics$GT;\n\t\t}\n\t});\nvar $author$project$Type$User$combine = function (_v0) {\n\tvar a = _v0.a;\n\tvar b = _v0.b;\n\treturn A2($elm$core$List$append, a, b);\n};\nvar $author$project$Type$User$currentUserFirst = F2(\n\tfunction (currentUser, allUsers) {\n\t\treturn $author$project$Type$User$combine(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$partition,\n\t\t\t\t$author$project$Type$User$match(currentUser),\n\t\t\t\tallUsers));\n\t});\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $author$project$Type$Lobby$allOccupants = function (_v0) {\n\tvar ownRooms = _v0.a;\n\tvar othersRooms = _v0.b;\n\treturn $elm$core$List$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.members;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\townRooms,\n\t\t\t\t$elm$core$List$concat(\n\t\t\t\t\tA2($elm$core$List$map, $elm$core$Tuple$second, othersRooms)))));\n};\nvar $author$project$Type$Lobby$isInviteable = F2(\n\tfunction (allRooms, user) {\n\t\treturn $elm$core$List$isEmpty(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\t$author$project$Type$User$match(user),\n\t\t\t\t$author$project$Type$Lobby$allOccupants(allRooms)));\n\t});\nvar $author$project$Type$Lobby$inviteableUsers = F2(\n\tfunction (allRooms, users) {\n\t\treturn A2(\n\t\t\t$elm$core$List$filter,\n\t\t\t$author$project$Type$Lobby$isInviteable(allRooms),\n\t\t\tusers);\n\t});\nvar $elm$core$List$sortWith = _List_sortWith;\nvar $author$project$Type$User$sortWith = function (sortFunc) {\n\treturn $elm$core$List$sortWith(sortFunc);\n};\nvar $author$project$Type$Lobby$occupantsState = F3(\n\tfunction (currentUser, allUsers, lobby) {\n\t\tvar occupants_ = A2(\n\t\t\t$author$project$Type$User$currentUserFirst,\n\t\t\tcurrentUser,\n\t\t\tA2($author$project$Type$User$sortWith, $author$project$Type$User$byUsername, allUsers));\n\t\treturn _Utils_update(\n\t\t\tlobby,\n\t\t\t{\n\t\t\t\tinviteableUsers: A2($author$project$Type$Lobby$inviteableUsers, lobby.rooms, occupants_),\n\t\t\t\toccupants: occupants_\n\t\t\t});\n\t});\nvar $author$project$Type$ErrorMessage$BackgroundColorNotSelected = {$: 'BackgroundColorNotSelected'};\nvar $author$project$Type$ErrorMessage$ForegroundColorNotSelected = {$: 'ForegroundColorNotSelected'};\nvar $author$project$Type$ErrorMessage$UsernameCannotBeBlank = {$: 'UsernameCannotBeBlank'};\nvar $author$project$Type$ErrorMessage$UsernameCannotBeMoreThan25Chars = {$: 'UsernameCannotBeMoreThan25Chars'};\nvar $author$project$Type$ErrorMessage$UsernamePartsCannotBeMoreThan12Chars = {$: 'UsernamePartsCannotBeMoreThan12Chars'};\nvar $author$project$Type$User$processErrors = F2(\n\tfunction (errors, user) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (error, u) {\n\t\t\t\t\tswitch (error.$) {\n\t\t\t\t\t\tcase 'UsernameCannotBeBlank':\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tusernameError: $elm$core$Maybe$Just($author$project$Type$ErrorMessage$UsernameCannotBeBlank)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tcase 'UsernamePartsCannotBeMoreThan12Chars':\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tusernameError: $elm$core$Maybe$Just($author$project$Type$ErrorMessage$UsernamePartsCannotBeMoreThan12Chars)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tcase 'UsernameCannotBeMoreThan25Chars':\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tusernameError: $elm$core$Maybe$Just($author$project$Type$ErrorMessage$UsernameCannotBeMoreThan25Chars)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tcase 'BackgroundColorNotSelected':\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbackgroundColorError: $elm$core$Maybe$Just($author$project$Type$ErrorMessage$BackgroundColorNotSelected)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tcase 'ForegroundColorNotSelected':\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tforegroundColorError: $elm$core$Maybe$Just($author$project$Type$ErrorMessage$ForegroundColorNotSelected)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn u;\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t_Utils_update(\n\t\t\t\tuser,\n\t\t\t\t{backgroundColorError: $elm$core$Maybe$Nothing, foregroundColorError: $elm$core$Maybe$Nothing, usernameError: $elm$core$Maybe$Nothing}),\n\t\t\terrors);\n\t});\nvar $author$project$Internal$Channel$joinIsQueued = F2(\n\tfunction (topic, _v0) {\n\t\tvar queuedJoins = _v0.a.queuedJoins;\n\t\treturn A2($author$project$Internal$Unique$exists, topic, queuedJoins);\n\t});\nvar $author$project$Internal$Push$preFlight = F2(\n\tfunction (pushConfig, _v0) {\n\t\tvar ref = pushConfig.ref;\n\t\tvar retryStrategy = pushConfig.retryStrategy;\n\t\tvar push = _v0.a;\n\t\tvar count = push.count;\n\t\tvar queue = push.queue;\n\t\tvar _v1 = function () {\n\t\t\tif (ref.$ === 'Nothing') {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$elm$core$String$fromInt(count + 1),\n\t\t\t\t\tcount + 1);\n\t\t\t} else {\n\t\t\t\tvar r = ref.a;\n\t\t\t\treturn _Utils_Tuple2(r, count);\n\t\t\t}\n\t\t}();\n\t\tvar ref_ = _v1.a;\n\t\tvar newCount = _v1.b;\n\t\tvar internalConfig = {\n\t\t\tpushConfig: _Utils_update(\n\t\t\t\tpushConfig,\n\t\t\t\t{\n\t\t\t\t\tref: $elm$core$Maybe$Just(ref_)\n\t\t\t\t}),\n\t\t\tref: ref_,\n\t\t\tretryStrategy: retryStrategy,\n\t\t\ttimeoutTick: 0\n\t\t};\n\t\treturn _Utils_Tuple2(\n\t\t\t$author$project$Internal$Push$Push(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tpush,\n\t\t\t\t\t{\n\t\t\t\t\t\tcount: newCount,\n\t\t\t\t\t\tqueue: A3($author$project$Internal$Config$insert, ref_, internalConfig, queue)\n\t\t\t\t\t})),\n\t\t\tref_);\n\t});\nvar $author$project$Phoenix$Channel$push = F2(\n\tfunction (_v0, portOut) {\n\t\tvar topic = _v0.topic;\n\t\tvar event = _v0.event;\n\t\tvar payload = _v0.payload;\n\t\tvar timeout = _v0.timeout;\n\t\tvar ref = _v0.ref;\n\t\treturn portOut(\n\t\t\t{\n\t\t\t\tmsg: 'push',\n\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'topic',\n\t\t\t\t\t\t\t$elm$json$Json$Encode$string(topic)),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'event',\n\t\t\t\t\t\t\t$elm$json$Json$Encode$string(event)),\n\t\t\t\t\t\t\t_Utils_Tuple2('payload', payload),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'timeout',\n\t\t\t\t\t\t\tA2($elm_community$json_extra$Json$Encode$Extra$maybe, $elm$json$Json$Encode$int, timeout)),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'ref',\n\t\t\t\t\t\t\tA2($elm_community$json_extra$Json$Encode$Extra$maybe, $elm$json$Json$Encode$string, ref))\n\t\t\t\t\t\t]))\n\t\t\t});\n\t});\nvar $author$project$Internal$Config$remove = $elm$core$Dict$remove;\nvar $author$project$Internal$Push$send = F2(\n\tfunction (ref, _v0) {\n\t\tvar push = _v0.a;\n\t\tvar _v1 = A2($author$project$Internal$Config$get, ref, push.queue);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Internal$Push$Push(push),\n\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t} else {\n\t\t\tvar internalConfig = _v1.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Internal$Push$Push(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tpush,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tqueue: A2($author$project$Internal$Config$remove, ref, push.queue),\n\t\t\t\t\t\t\tsent: A3($author$project$Internal$Config$insert, ref, internalConfig, push.sent),\n\t\t\t\t\t\t\ttimeouts: A2($author$project$Internal$Config$remove, ref, push.timeouts)\n\t\t\t\t\t\t})),\n\t\t\t\tA2($author$project$Phoenix$Channel$push, internalConfig.pushConfig, push.portOut));\n\t\t}\n\t});\nvar $author$project$Phoenix$push = F2(\n\tfunction (config, _v0) {\n\t\tvar topic = config.topic;\n\t\tvar model = _v0.a;\n\t\tvar channel = model.channel;\n\t\tvar _v1 = A2($author$project$Internal$Push$preFlight, config, model.push);\n\t\tvar push_ = _v1.a;\n\t\tvar ref = _v1.b;\n\t\tif (A2($author$project$Internal$Channel$isJoined, topic, channel)) {\n\t\t\tvar _v2 = A2($author$project$Internal$Push$send, ref, push_);\n\t\t\tvar p = _v2.a;\n\t\t\tvar cmd = _v2.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{push: p})),\n\t\t\t\tcmd);\n\t\t} else {\n\t\t\tif (A2($author$project$Internal$Channel$joinIsQueued, topic, channel)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{push: push_})),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\ttopic,\n\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tchannel: A2($author$project$Internal$Channel$queueJoin, topic, channel),\n\t\t\t\t\t\t\t\tpush: push_\n\t\t\t\t\t\t\t})));\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Type$Lobby$resetRoomAction = F2(\n\tfunction (room, lobby) {\n\t\treturn _Utils_update(\n\t\t\tlobby,\n\t\t\t{\n\t\t\t\troomActions: A3(\n\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\troom.id,\n\t\t\t\t\t$author$project$Type$Lobby$NoAction(room),\n\t\t\t\t\tlobby.roomActions)\n\t\t\t});\n\t});\nvar $author$project$Type$User$roomClosed = F2(\n\tfunction (roomId, _v0) {\n\t\tvar user = _v0.a;\n\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t_Utils_update(\n\t\t\t\tuser,\n\t\t\t\t{\n\t\t\t\t\treceivedInvites: A2($author$project$Type$User$deleteInvitesForRoom, roomId, user.receivedInvites),\n\t\t\t\t\tsentInvites: A2($author$project$Type$User$deleteInvitesForRoom, roomId, user.sentInvites)\n\t\t\t\t}));\n\t});\nvar $author$project$Example$MultiRoomChat$roomJoinConfig = _Utils_update(\n\t$author$project$Configs$joinConfig,\n\t{\n\t\tevents: _List_fromArray(\n\t\t\t['message_list', 'member_started_typing', 'member_stopped_typing', 'room_closed', 'room_deleted'])\n\t});\nvar $author$project$Type$User$username = function (_v0) {\n\tvar user = _v0.a;\n\treturn user.username;\n};\nvar $author$project$Type$Room$byUsername = F2(\n\tfunction (userA, userB) {\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$Basics$compare,\n\t\t\t$author$project$Type$User$username(userA),\n\t\t\t$author$project$Type$User$username(userB));\n\t\tswitch (_v0.$) {\n\t\t\tcase 'LT':\n\t\t\t\treturn $elm$core$Basics$LT;\n\t\t\tcase 'EQ':\n\t\t\t\treturn $elm$core$Basics$EQ;\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Basics$GT;\n\t\t}\n\t});\nvar $author$project$Type$Room$byOwner = F2(\n\tfunction (roomA, roomB) {\n\t\treturn A2($author$project$Type$Room$byUsername, roomA.owner, roomB.owner);\n\t});\nvar $elm_community$list_extra$List$Extra$groupWhile = F2(\n\tfunction (isSameGroup, items) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\tif (!acc.b) {\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, _List_Nil)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v1 = acc.a;\n\t\t\t\t\t\tvar y = _v1.a;\n\t\t\t\t\t\tvar restOfGroup = _v1.b;\n\t\t\t\t\t\tvar groups = acc.b;\n\t\t\t\t\t\treturn A2(isSameGroup, x, y) ? A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\tA2($elm$core$List$cons, y, restOfGroup)),\n\t\t\t\t\t\t\tgroups) : A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(x, _List_Nil),\n\t\t\t\t\t\t\tacc);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\titems);\n\t});\nvar $author$project$Type$Room$matchOwner = F2(\n\tfunction (roomA, roomB) {\n\t\treturn A2($author$project$Type$User$match, roomA.owner, roomB.owner);\n\t});\nvar $author$project$Type$Room$toOwnerWith = F2(\n\tfunction (sortFunc, _v0) {\n\t\tvar room = _v0.a;\n\t\tvar rooms = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\troom.owner,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$sortWith,\n\t\t\t\tsortFunc,\n\t\t\t\tA2($elm$core$List$cons, room, rooms)));\n\t});\nvar $author$project$Type$Room$groupByOwnerWith = F2(\n\tfunction (sortFunc, rooms) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$author$project$Type$Room$toOwnerWith(sortFunc),\n\t\t\tA2(\n\t\t\t\t$elm_community$list_extra$List$Extra$groupWhile,\n\t\t\t\t$author$project$Type$Room$matchOwner,\n\t\t\t\tA2($elm$core$List$sortWith, $author$project$Type$Room$byOwner, rooms)));\n\t});\nvar $elm$core$Tuple$mapSecond = F2(\n\tfunction (func, _v0) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tx,\n\t\t\tfunc(y));\n\t});\nvar $author$project$Type$Room$mostMembers = F2(\n\tfunction (roomA, roomB) {\n\t\tvar _v0 = A2(\n\t\t\t$elm$core$Basics$compare,\n\t\t\t$elm$core$List$length(roomA.members),\n\t\t\t$elm$core$List$length(roomB.members));\n\t\tswitch (_v0.$) {\n\t\t\tcase 'LT':\n\t\t\t\treturn $elm$core$Basics$GT;\n\t\t\tcase 'EQ':\n\t\t\t\treturn $elm$core$Basics$EQ;\n\t\t\tdefault:\n\t\t\t\treturn $elm$core$Basics$LT;\n\t\t}\n\t});\nvar $author$project$Type$Room$partition = F2(\n\tfunction (currentUser, rooms) {\n\t\treturn A2(\n\t\t\t$elm$core$List$partition,\n\t\t\tfunction (room) {\n\t\t\t\treturn A2($author$project$Type$User$match, currentUser, room.owner);\n\t\t\t},\n\t\t\trooms);\n\t});\nvar $author$project$Type$Lobby$roomList = F3(\n\tfunction (currentUser, rooms, lobby) {\n\t\tvar rooms_ = A2(\n\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t$author$project$Type$Room$groupByOwnerWith($author$project$Type$Room$mostMembers),\n\t\t\tA2($author$project$Type$Room$partition, currentUser, rooms));\n\t\treturn _Utils_update(\n\t\t\tlobby,\n\t\t\t{\n\t\t\t\tinviteableUsers: A2($author$project$Type$Lobby$inviteableUsers, rooms_, lobby.occupants),\n\t\t\t\trooms: rooms_\n\t\t\t});\n\t});\nvar $author$project$Example$MultiRoomChat$NoOp = {$: 'NoOp'};\nvar $elm$browser$Browser$Dom$getViewportOf = _Browser_getViewportOf;\nvar $elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;\nvar $author$project$Example$MultiRoomChat$scrollToBottom = function (id) {\n\treturn A2(\n\t\t$elm$core$Task$attempt,\n\t\tfunction (_v1) {\n\t\t\treturn $author$project$Example$MultiRoomChat$NoOp;\n\t\t},\n\t\tA2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (_v0) {\n\t\t\t\tvar scene = _v0.scene;\n\t\t\t\treturn A3($elm$browser$Browser$Dom$setViewportOf, id, 0, scene.height);\n\t\t\t},\n\t\t\t$elm$browser$Browser$Dom$getViewportOf(id)));\n};\nvar $author$project$Phoenix$setJoinConfig = F2(\n\tfunction (config, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar channel = model.channel;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tchannel: A2($author$project$Internal$Channel$setJoinConfig, config, channel)\n\t\t\t\t}));\n\t});\nvar $author$project$Phoenix$ChannelClosed = function (a) {\n\treturn {$: 'ChannelClosed', a: a};\n};\nvar $author$project$Phoenix$ChannelError = function (a) {\n\treturn {$: 'ChannelError', a: a};\n};\nvar $author$project$Phoenix$ChannelEvent = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'ChannelEvent', a: a, b: b, c: c};\n\t});\nvar $author$project$Phoenix$ChannelMessage = function (a) {\n\treturn {$: 'ChannelMessage', a: a};\n};\nvar $author$project$Phoenix$ChannelResponse = function (a) {\n\treturn {$: 'ChannelResponse', a: a};\n};\nvar $author$project$Phoenix$Connected = {$: 'Connected'};\nvar $author$project$Phoenix$DecoderError = function (a) {\n\treturn {$: 'DecoderError', a: a};\n};\nvar $author$project$Phoenix$Diff = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Diff', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Disconnecting = {$: 'Disconnecting'};\nvar $author$project$Phoenix$Heartbeat = function (a) {\n\treturn {$: 'Heartbeat', a: a};\n};\nvar $author$project$Phoenix$InternalError = function (a) {\n\treturn {$: 'InternalError', a: a};\n};\nvar $author$project$Phoenix$InvalidMessage = function (a) {\n\treturn {$: 'InvalidMessage', a: a};\n};\nvar $author$project$Phoenix$Join = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Join', a: a, b: b};\n\t});\nvar $author$project$Phoenix$JoinError = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinError', a: a, b: b};\n\t});\nvar $author$project$Phoenix$JoinOk = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinOk', a: a, b: b};\n\t});\nvar $author$project$Phoenix$JoinTimeout = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'JoinTimeout', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Leave = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Leave', a: a, b: b};\n\t});\nvar $author$project$Phoenix$LeaveOk = function (a) {\n\treturn {$: 'LeaveOk', a: a};\n};\nvar $author$project$Phoenix$NoOp = {$: 'NoOp'};\nvar $author$project$Phoenix$PresenceEvent = function (a) {\n\treturn {$: 'PresenceEvent', a: a};\n};\nvar $author$project$Phoenix$PresenceMessage = function (a) {\n\treturn {$: 'PresenceMessage', a: a};\n};\nvar $author$project$Phoenix$PushError = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushError', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$PushOk = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushOk', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$PushTimeout = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'PushTimeout', a: a, b: b, c: c, d: d};\n\t});\nvar $author$project$Phoenix$SocketError = function (a) {\n\treturn {$: 'SocketError', a: a};\n};\nvar $author$project$Phoenix$SocketMessage = function (a) {\n\treturn {$: 'SocketMessage', a: a};\n};\nvar $author$project$Phoenix$State = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'State', a: a, b: b};\n\t});\nvar $author$project$Phoenix$StateChange = function (a) {\n\treturn {$: 'StateChange', a: a};\n};\nvar $author$project$Internal$Config$update = $elm$core$Dict$update;\nvar $author$project$Internal$Presence$add = F3(\n\tfunction (topic, value, config) {\n\t\treturn A3(\n\t\t\t$author$project$Internal$Config$update,\n\t\t\ttopic,\n\t\t\tfunction (maybeV) {\n\t\t\t\tif (maybeV.$ === 'Just') {\n\t\t\t\t\tvar v = maybeV.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$List$cons, value, v));\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[value]));\n\t\t\t\t}\n\t\t\t},\n\t\t\tconfig);\n\t});\nvar $author$project$Internal$Presence$addDiff = F3(\n\tfunction (topic, diff_, _v0) {\n\t\tvar presence = _v0.a;\n\t\treturn $author$project$Internal$Presence$Presence(\n\t\t\t_Utils_update(\n\t\t\t\tpresence,\n\t\t\t\t{\n\t\t\t\t\tdiff: A3($author$project$Internal$Presence$add, topic, diff_, presence.diff)\n\t\t\t\t}));\n\t});\nvar $elm$core$Set$remove = F2(\n\tfunction (key, _v0) {\n\t\tvar dict = _v0.a;\n\t\treturn $elm$core$Set$Set_elm_builtin(\n\t\t\tA2($elm$core$Dict$remove, key, dict));\n\t});\nvar $author$project$Internal$Unique$remove = $elm$core$Set$remove;\nvar $author$project$Internal$Channel$addJoin = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a;\n\t\tvar joined = channel.joined;\n\t\tvar queuedJoins = channel.queuedJoins;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tjoined: A2($author$project$Internal$Unique$insert, topic, joined),\n\t\t\t\t\tqueuedJoins: A2($author$project$Internal$Unique$remove, topic, queuedJoins)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Presence$addJoin = F3(\n\tfunction (topic, join, _v0) {\n\t\tvar presence = _v0.a;\n\t\treturn $author$project$Internal$Presence$Presence(\n\t\t\t_Utils_update(\n\t\t\t\tpresence,\n\t\t\t\t{\n\t\t\t\t\tjoins: A3($author$project$Internal$Presence$add, topic, join, presence.joins)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Presence$addLeave = F3(\n\tfunction (topic, leave, _v0) {\n\t\tvar presence = _v0.a;\n\t\treturn $author$project$Internal$Presence$Presence(\n\t\t\t_Utils_update(\n\t\t\t\tpresence,\n\t\t\t\t{\n\t\t\t\t\tleaves: A3($author$project$Internal$Presence$add, topic, leave, presence.leaves)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Unique$toList = $elm$core$Set$toList;\nvar $author$project$Internal$Channel$allQueuedLeaves = function (_v0) {\n\tvar queuedLeaves = _v0.a.queuedLeaves;\n\treturn $author$project$Internal$Unique$toList(queuedLeaves);\n};\nvar $author$project$Phoenix$batchCmds = F2(\n\tfunction (func, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\tfunction (cmd_) {\n\t\t\t\treturn $elm$core$Platform$Cmd$batch(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[cmd, cmd_]));\n\t\t\t},\n\t\t\tfunc(model));\n\t});\nvar $author$project$Phoenix$batch = F2(\n\tfunction (functions, model) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$author$project$Phoenix$batchCmds,\n\t\t\t_Utils_Tuple2(model, $elm$core$Platform$Cmd$none),\n\t\t\tfunctions);\n\t});\nvar $author$project$Phoenix$batchWithParams = F2(\n\tfunction (list, model) {\n\t\treturn A2(\n\t\t\t$author$project$Phoenix$batch,\n\t\t\t$elm$core$List$concat(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\tvar func = _v0.a;\n\t\t\t\t\t\tvar params = _v0.b;\n\t\t\t\t\t\treturn A2($elm$core$List$map, func, params);\n\t\t\t\t\t},\n\t\t\t\t\tlist)),\n\t\t\tmodel);\n\t});\nvar $author$project$Phoenix$Backoff = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Backoff', a: a, b: b};\n\t});\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Phoenix$currentBackoffComplete = function (config) {\n\tvar _v0 = config.retryStrategy;\n\tif (_v0.$ === 'Backoff') {\n\t\tvar list = _v0.a;\n\t\tvar max = _v0.b;\n\t\treturn _Utils_update(\n\t\t\tconfig,\n\t\t\t{\n\t\t\t\tretryStrategy: A2(\n\t\t\t\t\t$author$project$Phoenix$Backoff,\n\t\t\t\t\tA2($elm$core$List$drop, 1, list),\n\t\t\t\t\tmax)\n\t\t\t});\n\t} else {\n\t\treturn config;\n\t}\n};\nvar $author$project$Internal$Channel$dropJoin = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a;\n\t\tvar joined = channel.joined;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tjoined: A2($author$project$Internal$Unique$remove, topic, joined)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Channel$dropLeave = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a;\n\t\tvar queuedLeaves = channel.queuedLeaves;\n\t\treturn $author$project$Internal$Channel$Channel(\n\t\t\t_Utils_update(\n\t\t\t\tchannel,\n\t\t\t\t{\n\t\t\t\t\tqueuedLeaves: A2($author$project$Internal$Unique$remove, topic, queuedLeaves)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Push$dropSentByRef = F2(\n\tfunction (ref, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn $author$project$Internal$Push$Push(\n\t\t\t_Utils_update(\n\t\t\t\tpush,\n\t\t\t\t{\n\t\t\t\t\tsent: A2($author$project$Internal$Config$remove, ref, push.sent)\n\t\t\t\t}));\n\t});\nvar $elm$core$Dict$filter = F2(\n\tfunction (isGood, dict) {\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tF3(\n\t\t\t\tfunction (k, v, d) {\n\t\t\t\t\treturn A2(isGood, k, v) ? A3($elm$core$Dict$insert, k, v, d) : d;\n\t\t\t\t}),\n\t\t\t$elm$core$Dict$empty,\n\t\t\tdict);\n\t});\nvar $author$project$Internal$Config$filter = $elm$core$Dict$filter;\nvar $author$project$Internal$Push$filter = F2(\n\tfunction (func, config) {\n\t\treturn A2(\n\t\t\t$author$project$Internal$Config$filter,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, internalConfig) {\n\t\t\t\t\treturn func(internalConfig);\n\t\t\t\t}),\n\t\t\tconfig);\n\t});\nvar $author$project$Phoenix$isTimeToRetryPush = F2(\n\tfunction (_v0, config) {\n\t\tvar _v1 = config.retryStrategy;\n\t\tswitch (_v1.$) {\n\t\t\tcase 'Every':\n\t\t\t\tvar secs = _v1.a;\n\t\t\t\treturn _Utils_eq(config.timeoutTick, secs);\n\t\t\tcase 'Backoff':\n\t\t\t\tif (_v1.a.b) {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\tvar head = _v2.a;\n\t\t\t\t\treturn _Utils_eq(config.timeoutTick, head);\n\t\t\t\t} else {\n\t\t\t\t\tif (_v1.b.$ === 'Just') {\n\t\t\t\t\t\tvar max = _v1.b.a;\n\t\t\t\t\t\treturn _Utils_eq(config.timeoutTick, max);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t});\nvar $elm$core$Dict$map = F2(\n\tfunction (func, dict) {\n\t\tif (dict.$ === 'RBEmpty_elm_builtin') {\n\t\t\treturn $elm$core$Dict$RBEmpty_elm_builtin;\n\t\t} else {\n\t\t\tvar color = dict.a;\n\t\t\tvar key = dict.b;\n\t\t\tvar value = dict.c;\n\t\t\tvar left = dict.d;\n\t\t\tvar right = dict.e;\n\t\t\treturn A5(\n\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\tcolor,\n\t\t\t\tkey,\n\t\t\t\tA2(func, key, value),\n\t\t\t\tA2($elm$core$Dict$map, func, left),\n\t\t\t\tA2($elm$core$Dict$map, func, right));\n\t\t}\n\t});\nvar $author$project$Internal$Config$map = $elm$core$Dict$map;\nvar $author$project$Internal$Push$map = F2(\n\tfunction (func, config) {\n\t\treturn A2(\n\t\t\t$author$project$Internal$Config$map,\n\t\t\tF2(\n\t\t\t\tfunction (_v0, internalConfig) {\n\t\t\t\t\treturn func(internalConfig);\n\t\t\t\t}),\n\t\t\tconfig);\n\t});\nvar $elm$core$Tuple$mapFirst = F2(\n\tfunction (func, _v0) {\n\t\tvar x = _v0.a;\n\t\tvar y = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tfunc(x),\n\t\t\ty);\n\t});\nvar $author$project$Internal$Push$maybeRetryStrategy = F2(\n\tfunction (ref, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.retryStrategy;\n\t\t\t},\n\t\t\tA2($author$project$Internal$Config$get, ref, push.sent));\n\t});\nvar $elm$core$Dict$partition = F2(\n\tfunction (isGood, dict) {\n\t\tvar add = F3(\n\t\t\tfunction (key, value, _v0) {\n\t\t\t\tvar t1 = _v0.a;\n\t\t\t\tvar t2 = _v0.b;\n\t\t\t\treturn A2(isGood, key, value) ? _Utils_Tuple2(\n\t\t\t\t\tA3($elm$core$Dict$insert, key, value, t1),\n\t\t\t\t\tt2) : _Utils_Tuple2(\n\t\t\t\t\tt1,\n\t\t\t\t\tA3($elm$core$Dict$insert, key, value, t2));\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tadd,\n\t\t\t_Utils_Tuple2($elm$core$Dict$empty, $elm$core$Dict$empty),\n\t\t\tdict);\n\t});\nvar $author$project$Internal$Config$partition = $elm$core$Dict$partition;\nvar $author$project$Internal$Push$partition = F2(\n\tfunction (compareFunc, config) {\n\t\treturn A2($author$project$Internal$Config$partition, compareFunc, config);\n\t});\nvar $author$project$Internal$Push$partitionTimeouts = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn A2($author$project$Internal$Push$partition, compareFunc, push.timeouts);\n\t});\nvar $author$project$Internal$Channel$allQueuedJoins = function (_v0) {\n\tvar queuedJoins = _v0.a.queuedJoins;\n\treturn $author$project$Internal$Unique$toList(queuedJoins);\n};\nvar $author$project$Phoenix$queuedChannels = function (_v0) {\n\tvar channel = _v0.a.channel;\n\treturn $author$project$Internal$Channel$allQueuedJoins(channel);\n};\nvar $author$project$Internal$Socket$reconnect = function (_v0) {\n\tvar socket = _v0.a;\n\treturn socket.reconnect;\n};\nvar $author$project$Internal$Push$resetTimeoutTick = function (timeouts) {\n\treturn A2(\n\t\t$author$project$Internal$Push$map,\n\t\tfunction (internalConfig) {\n\t\t\treturn _Utils_update(\n\t\t\t\tinternalConfig,\n\t\t\t\t{timeoutTick: 0});\n\t\t},\n\t\ttimeouts);\n};\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $author$project$Phoenix$retryStrategiesToKeep = function (_v0) {\n\tvar retryStrategy = _v0.retryStrategy;\n\treturn (!_Utils_eq(retryStrategy, $author$project$Phoenix$Drop)) && (!_Utils_eq(\n\t\tretryStrategy,\n\t\tA2($author$project$Phoenix$Backoff, _List_Nil, $elm$core$Maybe$Nothing)));\n};\nvar $author$project$Internal$Push$batchPush = F2(\n\tfunction (internalConfig, _v0) {\n\t\tvar ref = internalConfig.ref;\n\t\tvar pushConfig = internalConfig.pushConfig;\n\t\tvar push = _v0.a.a;\n\t\tvar portOut = push.portOut;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t$author$project$Internal$Push$Push(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tpush,\n\t\t\t\t\t{\n\t\t\t\t\t\tsent: A3($author$project$Internal$Config$insert, ref, internalConfig, push.sent)\n\t\t\t\t\t})),\n\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tcmd,\n\t\t\t\t\t\tA2($author$project$Phoenix$Channel$push, pushConfig, portOut)\n\t\t\t\t\t])));\n\t});\nvar $author$project$Internal$Config$toList = $elm$core$Dict$toList;\nvar $author$project$Internal$Push$sendAll = F2(\n\tfunction (config, push) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\t$author$project$Internal$Push$batchPush,\n\t\t\t_Utils_Tuple2(push, $elm$core$Platform$Cmd$none),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$core$Tuple$second,\n\t\t\t\t$author$project$Internal$Config$toList(config)));\n\t});\nvar $author$project$Internal$Push$sendByTopic = F2(\n\tfunction (topic, _v0) {\n\t\tvar push = _v0.a;\n\t\tvar queue = push.queue;\n\t\tvar _v1 = A2(\n\t\t\t$author$project$Internal$Push$partition,\n\t\t\tF2(\n\t\t\t\tfunction (_v2, _v3) {\n\t\t\t\t\tvar pushConfig = _v3.pushConfig;\n\t\t\t\t\treturn _Utils_eq(pushConfig.topic, topic);\n\t\t\t\t}),\n\t\t\tqueue);\n\t\tvar toGo = _v1.a;\n\t\tvar toKeep = _v1.b;\n\t\treturn A2(\n\t\t\t$author$project$Internal$Push$sendAll,\n\t\t\ttoGo,\n\t\t\t$author$project$Internal$Push$Push(\n\t\t\t\t_Utils_update(\n\t\t\t\t\tpush,\n\t\t\t\t\t{queue: toKeep})));\n\t});\nvar $author$project$Internal$Socket$setInfo = F2(\n\tfunction (info_, _v0) {\n\t\tvar socket = _v0.a;\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t_Utils_update(\n\t\t\t\tsocket,\n\t\t\t\t{info: info_}));\n\t});\nvar $author$project$Internal$Presence$setState = F3(\n\tfunction (topic, state_, _v0) {\n\t\tvar presence = _v0.a;\n\t\treturn $author$project$Internal$Presence$Presence(\n\t\t\t_Utils_update(\n\t\t\t\tpresence,\n\t\t\t\t{\n\t\t\t\t\tstate: A3($author$project$Internal$Config$insert, topic, state_, presence.state)\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Push$setTimeouts = F2(\n\tfunction (timeouts, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn $author$project$Internal$Push$Push(\n\t\t\t_Utils_update(\n\t\t\t\tpush,\n\t\t\t\t{timeouts: timeouts}));\n\t});\nvar $author$project$Internal$Push$timedOut = F2(\n\tfunction (ref, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn $author$project$Internal$Push$Push(\n\t\t\t_Utils_update(\n\t\t\t\tpush,\n\t\t\t\t{\n\t\t\t\t\tsent: A2($author$project$Internal$Config$remove, ref, push.sent),\n\t\t\t\t\ttimeouts: function () {\n\t\t\t\t\t\tvar _v1 = A2($author$project$Internal$Config$get, ref, push.sent);\n\t\t\t\t\t\tif (_v1.$ === 'Just') {\n\t\t\t\t\t\t\tvar config = _v1.a;\n\t\t\t\t\t\t\treturn A3($author$project$Internal$Config$insert, ref, config, push.timeouts);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn push.timeouts;\n\t\t\t\t\t\t}\n\t\t\t\t\t}()\n\t\t\t\t}));\n\t});\nvar $author$project$Internal$Push$tick = function (internalConfig) {\n\treturn _Utils_update(\n\t\tinternalConfig,\n\t\t{timeoutTick: internalConfig.timeoutTick + 1});\n};\nvar $author$project$Internal$Push$timeoutTick = function (_v0) {\n\tvar push = _v0.a;\n\treturn $author$project$Internal$Push$Push(\n\t\t_Utils_update(\n\t\t\tpush,\n\t\t\t{\n\t\t\t\ttimeouts: A2($author$project$Internal$Push$map, $author$project$Internal$Push$tick, push.timeouts)\n\t\t\t}));\n};\nvar $author$project$Phoenix$toPhoenixMsg = F2(\n\tfunction (phoenixMsg, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple3(model, cmd, phoenixMsg);\n\t});\nvar $author$project$Internal$Socket$setDisconnectReason = F2(\n\tfunction (maybeReason, _v0) {\n\t\tvar socket = _v0.a;\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t_Utils_update(\n\t\t\t\tsocket,\n\t\t\t\t{disconnectReason: maybeReason}));\n\t});\nvar $author$project$Phoenix$updateDisconnectReason = F2(\n\tfunction (maybeReason, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setDisconnectReason, maybeReason, model.socket)\n\t\t\t\t}));\n\t});\nvar $author$project$Phoenix$update = F2(\n\tfunction (msg, _v0) {\n\t\tvar model = _v0.a;\n\t\tswitch (msg.$) {\n\t\t\tcase 'TimeoutTick':\n\t\t\t\tvar _v2 = A2(\n\t\t\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t\t\t$author$project$Internal$Push$filter($author$project$Phoenix$retryStrategiesToKeep),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Tuple$mapFirst,\n\t\t\t\t\t\t$author$project$Internal$Push$map($author$project$Phoenix$currentBackoffComplete),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Tuple$mapFirst,\n\t\t\t\t\t\t\t$author$project$Internal$Push$resetTimeoutTick,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Internal$Push$partitionTimeouts,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$isTimeToRetryPush,\n\t\t\t\t\t\t\t\t$author$project$Internal$Push$timeoutTick(model.push)))));\n\t\t\t\tvar toSend = _v2.a;\n\t\t\t\tvar toKeep = _v2.b;\n\t\t\t\tvar _v3 = A2($author$project$Internal$Push$sendAll, toSend, model.push);\n\t\t\t\tvar push_ = _v3.a;\n\t\t\t\tvar pushCmd = _v3.b;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$setTimeouts, toKeep, push_)\n\t\t\t\t\t\t\t})),\n\t\t\t\t\tpushCmd,\n\t\t\t\t\t$author$project$Phoenix$NoOp);\n\t\t\tcase 'ReceivedSocketMsg':\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tswitch (subMsg.$) {\n\t\t\t\t\tcase 'Opened':\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$author$project$Phoenix$toPhoenixMsg,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange($author$project$Phoenix$Connected)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$batchWithParams,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$queuedChannels(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model))),\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$leave,\n\t\t\t\t\t\t\t\t\t\t$author$project$Internal$Channel$allQueuedLeaves(model.channel))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Connected,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$updateDisconnectReason,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Nothing,\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setReconnect, false, model.socket)\n\t\t\t\t\t\t\t\t\t\t\t\t}))))));\n\t\t\t\t\tcase 'Closed':\n\t\t\t\t\t\tvar closedInfo = subMsg.a;\n\t\t\t\t\t\treturn $author$project$Internal$Socket$reconnect(model.socket) ? A2(\n\t\t\t\t\t\t\t$author$project$Phoenix$toPhoenixMsg,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Disconnected(closedInfo))),\n\t\t\t\t\t\t\t$author$project$Phoenix$connect(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model))) : A2(\n\t\t\t\t\t\t\t$author$project$Phoenix$toPhoenixMsg,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Disconnected(closedInfo))),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$batchWithParams,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$queuedChannels(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Disconnected(closedInfo),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$updateDisconnectReason,\n\t\t\t\t\t\t\t\t\t\tclosedInfo.reason,\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)))));\n\t\t\t\t\tcase 'Connecting':\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Connecting,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange($author$project$Phoenix$Connecting)));\n\t\t\t\t\tcase 'Disconnecting':\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Disconnecting,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model)),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange($author$project$Phoenix$Disconnecting)));\n\t\t\t\t\tcase 'Channel':\n\t\t\t\t\t\tvar message = subMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$ChannelMessage(message)));\n\t\t\t\t\tcase 'Presence':\n\t\t\t\t\t\tvar message = subMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$PresenceMessage(message)));\n\t\t\t\t\tcase 'Heartbeat':\n\t\t\t\t\t\tvar message = subMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Heartbeat(message)));\n\t\t\t\t\tcase 'Info':\n\t\t\t\t\t\tvar socketInfo = subMsg.a;\n\t\t\t\t\t\tif (socketInfo.$ === 'All') {\n\t\t\t\t\t\t\tvar info = socketInfo.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tsocket: A2($author$project$Internal$Socket$setInfo, info, model.socket)\n\t\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$NoOp);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$NoOp);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\tvar reason = subMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$SocketMessage(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$SocketError(reason)));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar errorType = subMsg.a;\n\t\t\t\t\t\tif (errorType.$ === 'DecoderError') {\n\t\t\t\t\t\t\tvar error = errorType.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$DecoderError('Socket : ' + error)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar error = errorType.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$InvalidMessage('Socket : ' + error)));\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tcase 'ReceivedChannelMsg':\n\t\t\t\tvar channelMsg = msg.a;\n\t\t\t\tswitch (channelMsg.$) {\n\t\t\t\t\tcase 'Closed':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$ChannelClosed(topic)));\n\t\t\t\t\tcase 'Error':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$ChannelError(topic)));\n\t\t\t\t\tcase 'JoinError':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar payload = channelMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$JoinError, topic, payload)));\n\t\t\t\t\tcase 'JoinOk':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar payload = channelMsg.b;\n\t\t\t\t\t\tvar _v8 = A2($author$project$Internal$Push$sendByTopic, topic, model.push);\n\t\t\t\t\t\tvar push_ = _v8.a;\n\t\t\t\t\t\tvar pushCmd = _v8.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchannel: A2($author$project$Internal$Channel$addJoin, topic, model.channel),\n\t\t\t\t\t\t\t\t\t\tpush: push_\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\tpushCmd,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$JoinOk, topic, payload)));\n\t\t\t\t\tcase 'JoinTimeout':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar payload = channelMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$JoinTimeout, topic, payload)));\n\t\t\t\t\tcase 'LeaveOk':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tchannel: A2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Internal$Channel$dropJoin,\n\t\t\t\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Internal$Channel$dropLeave, topic, model.channel))\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$LeaveOk(topic)));\n\t\t\t\t\tcase 'Message':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar event = channelMsg.b;\n\t\t\t\t\t\tvar payload = channelMsg.c;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\tA3($author$project$Phoenix$ChannelEvent, topic, event, payload));\n\t\t\t\t\tcase 'PushError':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar event = channelMsg.b;\n\t\t\t\t\t\tvar payload = channelMsg.c;\n\t\t\t\t\t\tvar ref = channelMsg.d;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$dropSentByRef, ref, model.push)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$PushError,\n\t\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(ref),\n\t\t\t\t\t\t\t\t\tpayload)));\n\t\t\t\t\tcase 'PushOk':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar event = channelMsg.b;\n\t\t\t\t\t\tvar payload = channelMsg.c;\n\t\t\t\t\t\tvar ref = channelMsg.d;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$dropSentByRef, ref, model.push)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$PushOk,\n\t\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(ref),\n\t\t\t\t\t\t\t\t\tpayload)));\n\t\t\t\t\tcase 'PushTimeout':\n\t\t\t\t\t\tvar topic = channelMsg.a;\n\t\t\t\t\t\tvar event = channelMsg.b;\n\t\t\t\t\t\tvar payload = channelMsg.c;\n\t\t\t\t\t\tvar ref = channelMsg.d;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tvar _v9 = A2($author$project$Internal$Push$maybeRetryStrategy, ref, model.push);\n\t\t\t\t\t\t\t\tif (_v9.$ === 'Just') {\n\t\t\t\t\t\t\t\t\tif (_v9.a.$ === 'Drop') {\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$dropSentByRef, ref, model.push)\n\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$timedOut, ref, model.push)\n\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn $author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tpush: A2($author$project$Internal$Push$dropSentByRef, ref, model.push)\n\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$ChannelResponse(\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$PushTimeout,\n\t\t\t\t\t\t\t\t\ttopic,\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(ref),\n\t\t\t\t\t\t\t\t\tpayload)));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar errorType = channelMsg.a;\n\t\t\t\t\t\tif (errorType.$ === 'DecoderError') {\n\t\t\t\t\t\t\tvar error = errorType.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$DecoderError('Channel : ' + error)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar topic = errorType.a;\n\t\t\t\t\t\t\tvar error = errorType.b;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$InvalidMessage('Channel : ' + (topic + (' : ' + error)))));\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar presenceMsg = msg.a;\n\t\t\t\tswitch (presenceMsg.$) {\n\t\t\t\t\tcase 'Diff':\n\t\t\t\t\t\tvar topic = presenceMsg.a;\n\t\t\t\t\t\tvar diff = presenceMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpresence: A3($author$project$Internal$Presence$addDiff, topic, diff, model.presence)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$PresenceEvent(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$Diff, topic, diff)));\n\t\t\t\t\tcase 'Join':\n\t\t\t\t\t\tvar topic = presenceMsg.a;\n\t\t\t\t\t\tvar presence = presenceMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpresence: A3($author$project$Internal$Presence$addJoin, topic, presence, model.presence)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$PresenceEvent(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$Join, topic, presence)));\n\t\t\t\t\tcase 'Leave':\n\t\t\t\t\t\tvar topic = presenceMsg.a;\n\t\t\t\t\t\tvar presence = presenceMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpresence: A3($author$project$Internal$Presence$addLeave, topic, presence, model.presence)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$PresenceEvent(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$Leave, topic, presence)));\n\t\t\t\t\tcase 'State':\n\t\t\t\t\t\tvar topic = presenceMsg.a;\n\t\t\t\t\t\tvar state = presenceMsg.b;\n\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t$author$project$Phoenix$Model(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpresence: A3($author$project$Internal$Presence$setState, topic, state, model.presence)\n\t\t\t\t\t\t\t\t\t})),\n\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t$author$project$Phoenix$PresenceEvent(\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$State, topic, state)));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar errorType = presenceMsg.a;\n\t\t\t\t\t\tif (errorType.$ === 'DecoderError') {\n\t\t\t\t\t\t\tvar error = errorType.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$DecoderError('Presence : ' + error)));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar topic = errorType.a;\n\t\t\t\t\t\t\tvar error = errorType.b;\n\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t\t\t\t$author$project$Phoenix$InternalError(\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$InvalidMessage('Presence : ' + (topic + (' : ' + error)))));\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Type$Room$updateMembers = F2(\n\tfunction (users, room) {\n\t\treturn _Utils_update(\n\t\t\troom,\n\t\t\t{\n\t\t\t\tmembers: A2($author$project$Type$User$sortWith, $author$project$Type$User$byUsername, users)\n\t\t\t});\n\t});\nvar $author$project$Type$Room$updateMessage = F2(\n\tfunction (message, room) {\n\t\treturn _Utils_update(\n\t\t\troom,\n\t\t\t{message: message});\n\t});\nvar $author$project$Type$Room$updateMessages = F2(\n\tfunction (messages, room) {\n\t\treturn _Utils_update(\n\t\t\troom,\n\t\t\t{messages: messages});\n\t});\nvar $author$project$Type$User$updateReceivedInvites = F2(\n\tfunction (_v0, _v1) {\n\t\tvar state = _v0.a;\n\t\tvar invite = _v0.b;\n\t\tvar user = _v1.a;\n\t\tvar key = A3($author$project$Type$User$createInviteId, invite.to, invite.roomId, invite.from);\n\t\tswitch (state.$) {\n\t\t\tcase 'Accepted':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treceivedInvites: A2($elm$core$Dict$remove, key, user.receivedInvites)\n\t\t\t\t\t\t}));\n\t\t\tcase 'Declined':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treceivedInvites: A2($elm$core$Dict$remove, key, user.receivedInvites)\n\t\t\t\t\t\t}));\n\t\t\tcase 'Revoked':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treceivedInvites: A2($elm$core$Dict$remove, key, user.receivedInvites)\n\t\t\t\t\t\t}));\n\t\t\tdefault:\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treceivedInvites: A3(\n\t\t\t\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(state, invite),\n\t\t\t\t\t\t\t\tuser.receivedInvites)\n\t\t\t\t\t\t}));\n\t\t}\n\t});\nvar $author$project$Type$Lobby$roomAction = F2(\n\tfunction (room, lobby) {\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t$author$project$Type$Lobby$NoAction(room),\n\t\t\tA2($elm$core$Dict$get, room.id, lobby.roomActions));\n\t});\nvar $author$project$Type$Lobby$updateRoomAction = F3(\n\tfunction (roomAction_, room, lobby) {\n\t\tvar _v0 = _Utils_Tuple2(\n\t\t\tA2($author$project$Type$Lobby$roomAction, room, lobby),\n\t\t\troomAction_(room));\n\t\t_v0$4:\n\t\twhile (true) {\n\t\t\tswitch (_v0.a.$) {\n\t\t\t\tcase 'Entering':\n\t\t\t\t\tswitch (_v0.b.$) {\n\t\t\t\t\t\tcase 'NoAction':\n\t\t\t\t\t\t\treturn lobby;\n\t\t\t\t\t\tcase 'Inspecting':\n\t\t\t\t\t\t\treturn lobby;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$4;\n\t\t\t\t\t}\n\t\t\t\tcase 'Deleting':\n\t\t\t\t\tswitch (_v0.b.$) {\n\t\t\t\t\t\tcase 'NoAction':\n\t\t\t\t\t\t\treturn lobby;\n\t\t\t\t\t\tcase 'Inspecting':\n\t\t\t\t\t\t\treturn lobby;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$4;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tbreak _v0$4;\n\t\t\t}\n\t\t}\n\t\treturn _Utils_update(\n\t\t\tlobby,\n\t\t\t{\n\t\t\t\troomActions: A3(\n\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\troom.id,\n\t\t\t\t\troomAction_(room),\n\t\t\t\t\tlobby.roomActions)\n\t\t\t});\n\t});\nvar $author$project$Type$User$updateSentInvites = F2(\n\tfunction (_v0, _v1) {\n\t\tvar state = _v0.a;\n\t\tvar invite = _v0.b;\n\t\tvar user = _v1.a;\n\t\tvar key = A3($author$project$Type$User$createInviteId, invite.to, invite.roomId, invite.from);\n\t\tswitch (state.$) {\n\t\t\tcase 'Accepted':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsentInvites: A2($elm$core$Dict$remove, key, user.sentInvites)\n\t\t\t\t\t\t}));\n\t\t\tcase 'Declined':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsentInvites: A2($elm$core$Dict$remove, key, user.sentInvites)\n\t\t\t\t\t\t}));\n\t\t\tcase 'Revoked':\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsentInvites: A2($elm$core$Dict$remove, key, user.sentInvites)\n\t\t\t\t\t\t}));\n\t\t\tdefault:\n\t\t\t\treturn $author$project$Type$User$RegisteredUser(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tuser,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsentInvites: A3(\n\t\t\t\t\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(state, invite),\n\t\t\t\t\t\t\t\tuser.sentInvites)\n\t\t\t\t\t\t}));\n\t\t}\n\t});\nvar $author$project$Phoenix$updateWith = F3(\n\tfunction (toMsg, model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\tvar phoenixMsg = _v0.c;\n\t\treturn _Utils_Tuple3(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{phoenix: phoenix}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, phoenixCmd),\n\t\t\tphoenixMsg);\n\t});\nvar $elm$core$String$trim = _String_trim;\nvar $author$project$Type$User$usernameChanged = F2(\n\tfunction (name, user) {\n\t\treturn _Utils_update(\n\t\t\tuser,\n\t\t\t{\n\t\t\t\tusername: name,\n\t\t\t\tusernameError: ($elm$core$String$trim(name) === '') ? user.usernameError : $elm$core$Maybe$Nothing\n\t\t\t});\n\t});\nvar $author$project$Type$TwoTrack$Success = function (a) {\n\treturn {$: 'Success', a: a};\n};\nvar $author$project$Type$TwoTrack$Failure = function (a) {\n\treturn {$: 'Failure', a: a};\n};\nvar $author$project$Type$TwoTrack$bind = F4(\n\tfunction (_switch, func, input, twoTrack) {\n\t\tvar _v0 = _Utils_Tuple2(\n\t\t\t_switch(\n\t\t\t\tfunc(input)),\n\t\t\ttwoTrack);\n\t\tif (_v0.a.$ === 'Success') {\n\t\t\tif (_v0.b.$ === 'Success') {\n\t\t\t\tvar a = _v0.a.a;\n\t\t\t\tvar b = _v0.b.a;\n\t\t\t\treturn $author$project$Type$TwoTrack$Success(\n\t\t\t\t\tA2($elm$core$List$append, a, b));\n\t\t\t} else {\n\t\t\t\tvar f = _v0.b.a;\n\t\t\t\treturn $author$project$Type$TwoTrack$Failure(f);\n\t\t\t}\n\t\t} else {\n\t\t\tif (_v0.b.$ === 'Failure') {\n\t\t\t\tvar e = _v0.a.a;\n\t\t\t\tvar f = _v0.b.a;\n\t\t\t\treturn $author$project$Type$TwoTrack$Failure(\n\t\t\t\t\tA2($elm$core$List$append, e, f));\n\t\t\t} else {\n\t\t\t\tvar e = _v0.a.a;\n\t\t\t\treturn $author$project$Type$TwoTrack$Failure(e);\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Type$User$switch = function (result) {\n\tif (result.$ === 'Ok') {\n\t\tvar field = result.a;\n\t\treturn $author$project$Type$TwoTrack$Success(\n\t\t\t_List_fromArray(\n\t\t\t\t[field]));\n\t} else {\n\t\tvar error = result.a;\n\t\treturn $author$project$Type$TwoTrack$Failure(\n\t\t\t_List_fromArray(\n\t\t\t\t[error]));\n\t}\n};\nvar $author$project$Type$User$BackgroundColor = function (a) {\n\treturn {$: 'BackgroundColor', a: a};\n};\nvar $author$project$Type$User$validateBackgroundColor = function (maybeColor) {\n\tif (maybeColor.$ === 'Nothing') {\n\t\treturn $elm$core$Result$Err($author$project$Type$ErrorMessage$BackgroundColorNotSelected);\n\t} else {\n\t\tvar color = maybeColor.a;\n\t\treturn $elm$core$Result$Ok(\n\t\t\t$author$project$Type$User$BackgroundColor(color));\n\t}\n};\nvar $author$project$Type$User$ForegroundColor = function (a) {\n\treturn {$: 'ForegroundColor', a: a};\n};\nvar $author$project$Type$User$validateForegroundColor = function (maybeColor) {\n\tif (maybeColor.$ === 'Nothing') {\n\t\treturn $elm$core$Result$Err($author$project$Type$ErrorMessage$ForegroundColorNotSelected);\n\t} else {\n\t\tvar color = maybeColor.a;\n\t\treturn $elm$core$Result$Ok(\n\t\t\t$author$project$Type$User$ForegroundColor(color));\n\t}\n};\nvar $author$project$Type$User$Username = function (a) {\n\treturn {$: 'Username', a: a};\n};\nvar $elm$core$String$words = _String_words;\nvar $author$project$Type$User$usernamePartMoreThan12Chars = function (uname) {\n\treturn !$elm$core$List$isEmpty(\n\t\tA2(\n\t\t\t$elm$core$List$filter,\n\t\t\tfunction (word) {\n\t\t\t\treturn $elm$core$String$length(word) > 12;\n\t\t\t},\n\t\t\t$elm$core$String$words(uname)));\n};\nvar $author$project$Type$User$validateUsername = function (uname) {\n\treturn ($elm$core$String$trim(uname) === '') ? $elm$core$Result$Err($author$project$Type$ErrorMessage$UsernameCannotBeBlank) : ($author$project$Type$User$usernamePartMoreThan12Chars(uname) ? $elm$core$Result$Err($author$project$Type$ErrorMessage$UsernamePartsCannotBeMoreThan12Chars) : (($elm$core$String$length(uname) > 25) ? $elm$core$Result$Err($author$project$Type$ErrorMessage$UsernameCannotBeMoreThan25Chars) : $elm$core$Result$Ok(\n\t\t$author$project$Type$User$Username(\n\t\t\t$elm$core$String$trim(uname)))));\n};\nvar $author$project$Type$User$validate = function (user) {\n\treturn A4(\n\t\t$author$project$Type$TwoTrack$bind,\n\t\t$author$project$Type$User$switch,\n\t\t$author$project$Type$User$validateForegroundColor,\n\t\tuser.foregroundColor,\n\t\tA4(\n\t\t\t$author$project$Type$TwoTrack$bind,\n\t\t\t$author$project$Type$User$switch,\n\t\t\t$author$project$Type$User$validateBackgroundColor,\n\t\t\tuser.backgroundColor,\n\t\t\tA4(\n\t\t\t\t$author$project$Type$TwoTrack$bind,\n\t\t\t\t$author$project$Type$User$switch,\n\t\t\t\t$author$project$Type$User$validateUsername,\n\t\t\t\tuser.username,\n\t\t\t\t$author$project$Type$TwoTrack$Success(_List_Nil))));\n};\nvar $author$project$Example$MultiRoomChat$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'NoOp':\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\tcase 'OnResize':\n\t\t\t\treturn _Utils_Tuple2(model, $author$project$Example$MultiRoomChat$getLayoutHeight);\n\t\t\tcase 'GotLayoutHeight':\n\t\t\t\tvar result = msg.a;\n\t\t\t\tif (result.$ === 'Ok') {\n\t\t\t\t\tvar element = result.a.element;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{layoutHeight: element.height}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 'GotUsernameChange':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar name = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$Unregistered(\n\t\t\t\t\t\t\t\tA2($author$project$Type$User$usernameChanged, name, currentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotBackgroundColorSelection':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar color = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$Unregistered(\n\t\t\t\t\t\t\t\tA2($author$project$Type$User$bgColorSelected, color, currentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotForegroundColorSelection':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar color = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$Unregistered(\n\t\t\t\t\t\t\t\tA2($author$project$Type$User$fgColorSelected, color, currentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotJoinLobby':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar _v2 = $author$project$Type$User$validate(currentUser);\n\t\t\t\tif (_v2.$ === 'Success') {\n\t\t\t\t\tvar fields = _v2.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t\t'example:lobby',\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyJoinConfig,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encodeFields(fields)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tmodel.phoenix)));\n\t\t\t\t} else {\n\t\t\t\t\tvar errors = _v2.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$Unregistered(\n\t\t\t\t\t\t\t\t\tA2($author$project$Type$User$processErrors, errors, currentUser))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 'GotCreateRoom':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyPushConfig,\n\t\t\t\t\t\t\t{event: 'create_room'}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotDeleteRoom':\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$updateRoomAction, $author$project$Type$Lobby$Deleting, room, model.lobby)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyPushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'delete_room',\n\t\t\t\t\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t'room_id',\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$string(room.id))\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotEnterRoom':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$updateRoomAction, $author$project$Type$Lobby$Entering, room, model.lobby)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t'example:room:' + room.id,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$roomJoinConfig,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encode(currentUser),\n\t\t\t\t\t\t\t\t\ttopic: 'example:room:' + room.id\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tmodel.phoenix)));\n\t\t\tcase 'GotAcceptRoomInvite':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar invite = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Accepting, invite),\n\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyPushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'invite_accepted',\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encodeRoomInvite(invite)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotDeclineRoomInvite':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar invite = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Declining, invite),\n\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyPushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'invite_declined',\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encodeRoomInvite(invite)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotInviteErrorOk':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar invite = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\tA2($author$project$Type$User$deleteReceivedInvite, invite, currentUser))\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotShowRoomMembers':\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$updateRoomAction, $author$project$Type$Lobby$Inspecting, room, model.lobby)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotHideRoomMembers':\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$updateRoomAction, $author$project$Type$Lobby$NoAction, room, model.lobby)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotInviteUser':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\tvar toUser = msg.c;\n\t\t\t\tvar _v3 = function () {\n\t\t\t\t\tvar _v4 = A3($author$project$Type$User$findInviteTo, toUser, room.id, currentUser);\n\t\t\t\t\t_v4$2:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (_v4.$ === 'Just') {\n\t\t\t\t\t\t\tswitch (_v4.a.a.$) {\n\t\t\t\t\t\t\t\tcase 'Invited':\n\t\t\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\t\t\tvar _v6 = _v5.a;\n\t\t\t\t\t\t\t\t\tvar invite_ = _v5.b;\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Revoking, invite_),\n\t\t\t\t\t\t\t\t\t\t\tcurrentUser),\n\t\t\t\t\t\t\t\t\t\t'revoke_invite',\n\t\t\t\t\t\t\t\t\t\tinvite_);\n\t\t\t\t\t\t\t\tcase 'Inviting':\n\t\t\t\t\t\t\t\t\tvar _v7 = _v4.a;\n\t\t\t\t\t\t\t\t\tvar _v8 = _v7.a;\n\t\t\t\t\t\t\t\t\tvar invite_ = _v7.b;\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Revoking, invite_),\n\t\t\t\t\t\t\t\t\t\t\tcurrentUser),\n\t\t\t\t\t\t\t\t\t\t'revoke_invite',\n\t\t\t\t\t\t\t\t\t\tinvite_);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak _v4$2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak _v4$2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar invite_ = A3($author$project$Type$User$createInvite, toUser, room.id, currentUser);\n\t\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Inviting, invite_),\n\t\t\t\t\t\t\tcurrentUser),\n\t\t\t\t\t\t'room_invite',\n\t\t\t\t\t\tinvite_);\n\t\t\t\t}();\n\t\t\t\tvar user = _v3.a;\n\t\t\t\tvar event = _v3.b;\n\t\t\t\tvar invite = _v3.c;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: A2($author$project$Example$MultiRoomChat$InRoom, room, user)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$lobbyPushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: event,\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encodeRoomInvite(invite)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotMessageChange':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\tvar message = msg.c;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\tA2($author$project$Type$Room$updateMessage, message, room),\n\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotSendMessage':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t$author$project$Type$Room$clearMessage(room),\n\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t}),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Phoenix$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'new_message',\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$ChatMessage$encode(room.message),\n\t\t\t\t\t\t\t\ttopic: 'example:room:' + room.id\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotMemberStartedTyping':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Phoenix$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'member_started_typing',\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encode(currentUser),\n\t\t\t\t\t\t\t\ttopic: 'example:room:' + room.id\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotMemberStoppedTyping':\n\t\t\t\tvar currentUser = msg.a;\n\t\t\t\tvar room = msg.b;\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Phoenix$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'member_stopped_typing',\n\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encode(currentUser),\n\t\t\t\t\t\t\t\ttopic: 'example:room:' + room.id\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v9 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v9.a;\n\t\t\t\tvar cmd = _v9.b;\n\t\t\t\tvar phoenixMsg = _v9.c;\n\t\t\t\t_v10$16:\n\t\t\t\twhile (true) {\n\t\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\t\tcase 'ChannelEvent':\n\t\t\t\t\t\t\tswitch (phoenixMsg.b) {\n\t\t\t\t\t\t\t\tcase 'room_list':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v13 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$Room$decodeList(payload));\n\t\t\t\t\t\t\t\t\t\t_v13$2:\n\t\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\t\tif (_v13.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (_v13.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v13.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar rooms = _v13.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$roomList, currentUser, rooms, newModel.lobby)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v14 = _v13.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v14.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar rooms = _v13.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlobby: A3($author$project$Type$Lobby$roomList, currentUser, rooms, newModel.lobby)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v13$2;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak _v13$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'room_invite':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v15 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodeRoomInvite(payload));\n\t\t\t\t\t\t\t\t\t\t_v15$2:\n\t\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\t\tif (_v15.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (_v15.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v15.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v15.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Invited, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v16 = _v15.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v16.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v16.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v15.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Invited, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v15$2;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak _v15$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'invite_expired':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v17 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodeRoomInvite(payload));\n\t\t\t\t\t\t\t\t\t\tif ((_v17.a.$ === 'InLobby') && (_v17.b.$ === 'Ok')) {\n\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v17.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar invite = _v17.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Expired, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'invite_revoked':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v18 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodeRoomInvite(payload));\n\t\t\t\t\t\t\t\t\t\t_v18$2:\n\t\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\t\tif (_v18.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (_v18.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v18.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v18.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Revoked, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v19 = _v18.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v19.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v19.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v18.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Revoked, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v18$2;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak _v18$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'occupant_left_room':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v20 = newModel.state;\n\t\t\t\t\t\t\t\t\t\tif (_v20.$ === 'InLobby') {\n\t\t\t\t\t\t\t\t\t\t\tvar user = _v20.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$User$leftRoom, payload, user))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'invite_accepted':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v21 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodeRoomInvite(payload));\n\t\t\t\t\t\t\t\t\t\t_v21$2:\n\t\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\t\tif (_v21.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (_v21.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v21.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v21.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn A2($author$project$Type$User$match, currentUser, invite.to) ? A3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Accepted, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'example:room:' + invite.roomId,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$roomJoinConfig,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload: $author$project$Type$User$encode(currentUser),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttopic: 'example:room:' + invite.roomId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel.phoenix))) : _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v22 = _v21.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v22.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v22.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v21.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Accepted, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v21$2;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak _v21$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'invite_declined':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\t\tvar _v23 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodeRoomInvite(payload));\n\t\t\t\t\t\t\t\t\t\t_v23$2:\n\t\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\t\tif (_v23.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\t\tswitch (_v23.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v23.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v23.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateReceivedInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Declined, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v24 = _v23.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v24.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v24.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar invite = _v23.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$updateSentInvites,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Type$User$Declined, invite),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v23$2;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbreak _v23$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'message_list':\n\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\tvar _v29 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$ChatMessage$decodeList(payload));\n\t\t\t\t\t\t\t\t\tif ((_v29.a.$ === 'InRoom') && (_v29.b.$ === 'Ok')) {\n\t\t\t\t\t\t\t\t\t\tvar _v30 = _v29.a;\n\t\t\t\t\t\t\t\t\t\tvar room = _v30.a;\n\t\t\t\t\t\t\t\t\t\tvar currentUser = _v30.b;\n\t\t\t\t\t\t\t\t\t\tvar messages = _v29.b.a;\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$Room$updateMessages, messages, room),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$scrollToBottom('message-list')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'member_started_typing':\n\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\tvar _v31 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decode(payload));\n\t\t\t\t\t\t\t\t\tif ((_v31.a.$ === 'InRoom') && (_v31.b.$ === 'Ok')) {\n\t\t\t\t\t\t\t\t\t\tvar _v32 = _v31.a;\n\t\t\t\t\t\t\t\t\t\tvar room = _v32.a;\n\t\t\t\t\t\t\t\t\t\tvar currentUser = _v32.b;\n\t\t\t\t\t\t\t\t\t\tvar user = _v31.b.a;\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($author$project$Type$Room$addOccupantTyping, currentUser, user, room),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'member_stopped_typing':\n\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\tvar _v33 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decode(payload));\n\t\t\t\t\t\t\t\t\tif ((_v33.a.$ === 'InRoom') && (_v33.b.$ === 'Ok')) {\n\t\t\t\t\t\t\t\t\t\tvar _v34 = _v33.a;\n\t\t\t\t\t\t\t\t\t\tvar room = _v34.a;\n\t\t\t\t\t\t\t\t\t\tvar currentUser = _v34.b;\n\t\t\t\t\t\t\t\t\t\tvar user = _v33.b.a;\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$Room$dropOccupantTyping, user, room),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'room_closed':\n\t\t\t\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\t\t\t\tvar _v35 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$Room$decode(payload));\n\t\t\t\t\t\t\t\t\t_v35$2:\n\t\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\t\tif (_v35.b.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\tswitch (_v35.a.$) {\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v35.a.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v35.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$User$roomClosed, room.id, currentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v36 = _v35.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar room = _v36.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar roomClosed = _v35.b.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn _Utils_eq(room.id, roomClosed.id) ? A3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$PhoenixMsg,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:room:' + roomClosed.id, newModel.phoenix)) : _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak _v35$2;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tbreak _v35$2;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'PresenceEvent':\n\t\t\t\t\t\t\tif (phoenixMsg.a.$ === 'State') {\n\t\t\t\t\t\t\t\tif (phoenixMsg.a.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\tvar _v25 = phoenixMsg.a;\n\t\t\t\t\t\t\t\t\tvar state = _v25.b;\n\t\t\t\t\t\t\t\t\tvar _v26 = newModel.state;\n\t\t\t\t\t\t\t\t\tswitch (_v26.$) {\n\t\t\t\t\t\t\t\t\t\tcase 'InLobby':\n\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v26.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlobby: A3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$Lobby$occupantsState,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodePresenceState(state),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel.lobby)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\tcase 'InRoom':\n\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v26.b;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlobby: A3(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$Lobby$occupantsState,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodePresenceState(state),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel.lobby)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar _v37 = phoenixMsg.a;\n\t\t\t\t\t\t\t\t\tvar state = _v37.b;\n\t\t\t\t\t\t\t\t\tvar _v38 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$User$decodePresenceState(state));\n\t\t\t\t\t\t\t\t\tif (_v38.a.$ === 'InRoom') {\n\t\t\t\t\t\t\t\t\t\tvar _v39 = _v38.a;\n\t\t\t\t\t\t\t\t\t\tvar room = _v39.a;\n\t\t\t\t\t\t\t\t\t\tvar currentUser = _v39.b;\n\t\t\t\t\t\t\t\t\t\tvar users = _v38.b;\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$Room$updateMembers, users, room),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentUser)\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\t\tswitch (phoenixMsg.a.$) {\n\t\t\t\t\t\t\t\tcase 'JoinOk':\n\t\t\t\t\t\t\t\t\tif (phoenixMsg.a.a === 'example:lobby') {\n\t\t\t\t\t\t\t\t\t\tvar _v11 = phoenixMsg.a;\n\t\t\t\t\t\t\t\t\t\tvar payload = _v11.b;\n\t\t\t\t\t\t\t\t\t\tvar _v12 = $author$project$Type$User$decode(payload);\n\t\t\t\t\t\t\t\t\t\tif (_v12.$ === 'Ok') {\n\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v12.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(currentUser)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar _v27 = phoenixMsg.a;\n\t\t\t\t\t\t\t\t\t\tvar payload = _v27.b;\n\t\t\t\t\t\t\t\t\t\tvar _v28 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\tnewModel.state,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Type$Room$decode(payload));\n\t\t\t\t\t\t\t\t\t\tif ((_v28.a.$ === 'InLobby') && (_v28.b.$ === 'Ok')) {\n\t\t\t\t\t\t\t\t\t\t\tvar currentUser = _v28.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar room = _v28.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$InRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$User$dropInviteForRoom, room.id, currentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[cmd, $author$project$Example$MultiRoomChat$getLayoutHeight])));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'LeaveOk':\n\t\t\t\t\t\t\t\t\tvar _v40 = newModel.state;\n\t\t\t\t\t\t\t\t\tif (_v40.$ === 'InRoom') {\n\t\t\t\t\t\t\t\t\t\tvar room = _v40.a;\n\t\t\t\t\t\t\t\t\t\tvar currentUser = _v40.b;\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tlobby: A2($author$project$Type$Lobby$resetRoomAction, room, newModel.lobby),\n\t\t\t\t\t\t\t\t\t\t\t\t\tstate: $author$project$Example$MultiRoomChat$InLobby(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Type$User$roomClosed, room.id, currentUser))\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v10$16;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t}\n\t});\nvar $author$project$Page$ChatRooms$updateWith = F4(\n\tfunction (toExample, toMsg, model, _v0) {\n\t\tvar subModel = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: toExample(subModel),\n\t\t\t\t\tsession: A2($author$project$Session$updatePhoenix, subModel.phoenix, model.session)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, cmd));\n\t});\nvar $author$project$Page$ChatRooms$update = F2(\n\tfunction (msg, model) {\n\t\tvar _v0 = _Utils_Tuple2(msg, model.example);\n\t\tif (_v0.a.$ === 'GotBackBtnClick') {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar subModel = _v0.b.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Page$ChatRooms$updateWith,\n\t\t\t\t$author$project$Page$ChatRooms$MultiRoom,\n\t\t\t\t$author$project$Page$ChatRooms$GotMultiRoomMsg,\n\t\t\t\tmodel,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Example$MultiRoomChat$back,\n\t\t\t\t\t$author$project$Session$navKey(model.session),\n\t\t\t\t\tsubModel));\n\t\t} else {\n\t\t\tvar subMsg = _v0.a.a;\n\t\t\tvar subModel = _v0.b.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Page$ChatRooms$updateWith,\n\t\t\t\t$author$project$Page$ChatRooms$MultiRoom,\n\t\t\t\t$author$project$Page$ChatRooms$GotMultiRoomMsg,\n\t\t\t\tmodel,\n\t\t\t\tA2($author$project$Example$MultiRoomChat$update, subMsg, subModel));\n\t\t}\n\t});\nvar $author$project$Page$ControlTheSocketConnection$ConnectWithBadParams = function (a) {\n\treturn {$: 'ConnectWithBadParams', a: a};\n};\nvar $author$project$Page$ControlTheSocketConnection$ConnectWithGoodParams = function (a) {\n\treturn {$: 'ConnectWithGoodParams', a: a};\n};\nvar $author$project$Phoenix$disconnect = F2(\n\tfunction (code, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar socket = model.socket;\n\t\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\t\tswitch (_v1.$) {\n\t\t\tcase 'Disconnected':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'Disconnecting':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t$author$project$Phoenix$Model(model),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$updateSocketState,\n\t\t\t\t\t\t$author$project$Phoenix$Disconnecting,\n\t\t\t\t\t\t$author$project$Phoenix$Model(model)),\n\t\t\t\t\tA2($author$project$Internal$Socket$disconnect, code, socket));\n\t\t}\n\t});\nvar $author$project$Route$pushUrl = F2(\n\tfunction (key, route) {\n\t\treturn A2(\n\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\tkey,\n\t\t\t$author$project$Route$routeToString(route));\n\t});\nvar $author$project$View$Example$Socket = function (a) {\n\treturn {$: 'Socket', a: a};\n};\nvar $author$project$Internal$Socket$setParams = F2(\n\tfunction (maybeParams, _v0) {\n\t\tvar socket = _v0.a;\n\t\treturn $author$project$Internal$Socket$Socket(\n\t\t\t_Utils_update(\n\t\t\t\tsocket,\n\t\t\t\t{params: maybeParams}));\n\t});\nvar $author$project$Phoenix$setConnectParams = F2(\n\tfunction (params, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar socket = model.socket;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsocket: A2(\n\t\t\t\t\t\t$author$project$Internal$Socket$setParams,\n\t\t\t\t\t\t$elm$core$Maybe$Just(params),\n\t\t\t\t\t\tsocket)\n\t\t\t\t}));\n\t});\nvar $author$project$Example$ConnectWithBadParams$update = F2(\n\tfunction (msg, model) {\n\t\tif (msg.$ === 'GotConnect') {\n\t\t\treturn A3(\n\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t$author$project$Example$ConnectWithBadParams$PhoenixMsg,\n\t\t\t\tmodel,\n\t\t\t\t$author$project$Phoenix$connect(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$setConnectParams,\n\t\t\t\t\t\t$elm$json$Json$Encode$object(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t'good_params',\n\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$bool(false))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tmodel.phoenix)));\n\t\t} else {\n\t\t\tvar subMsg = msg.a;\n\t\t\tvar _v1 = A3(\n\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t$author$project$Example$ConnectWithBadParams$PhoenixMsg,\n\t\t\t\tmodel,\n\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\tvar newModel = _v1.a;\n\t\t\tvar cmd = _v1.b;\n\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t_v2$2:\n\t\t\twhile (true) {\n\t\t\t\tif (phoenixMsg.$ === 'SocketMessage') {\n\t\t\t\t\tswitch (phoenixMsg.a.$) {\n\t\t\t\t\t\tcase 'SocketError':\n\t\t\t\t\t\t\tvar error = phoenixMsg.a.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$SocketError(error)),\n\t\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\tcase 'StateChange':\n\t\t\t\t\t\t\tvar state = phoenixMsg.a.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(state)),\n\t\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v2$2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t}\n\t});\nvar $author$project$Example$ConnectWithGoodParams$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotConnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Phoenix$connect(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$setConnectParams,\n\t\t\t\t\t\t\t$elm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t'good_params',\n\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$bool(true))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tmodel.phoenix)));\n\t\t\tcase 'GotDisconnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$disconnect, $elm$core$Maybe$Nothing, model.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tif ((phoenixMsg.$ === 'SocketMessage') && (phoenixMsg.a.$ === 'StateChange')) {\n\t\t\t\t\tvar state = phoenixMsg.a.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(state)),\n\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcmd);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$SimpleConnect$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotConnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$SimpleConnect$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Phoenix$connect(model.phoenix));\n\t\t\tcase 'GotDisconnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$SimpleConnect$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$disconnect, $elm$core$Maybe$Nothing, model.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$SimpleConnect$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tif ((phoenixMsg.$ === 'SocketMessage') && (phoenixMsg.a.$ === 'StateChange')) {\n\t\t\t\t\tvar state = phoenixMsg.a.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(state)),\n\t\t\t\t\t\t\t\t\tmodel.responses)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcmd);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$ConnectWithBadParams$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Example$ConnectWithGoodParams$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Page$ControlTheSocketConnection$exampleFromString = F2(\n\tfunction (example, phoenix) {\n\t\tswitch (example) {\n\t\t\tcase 'Simple Connect':\n\t\t\t\treturn $author$project$Page$ControlTheSocketConnection$SimpleConnect(\n\t\t\t\t\t$author$project$Example$SimpleConnect$init(phoenix));\n\t\t\tcase 'Connect With Good Params':\n\t\t\t\treturn $author$project$Page$ControlTheSocketConnection$ConnectWithGoodParams(\n\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$init(phoenix));\n\t\t\tcase 'Connect With Bad Params':\n\t\t\t\treturn $author$project$Page$ControlTheSocketConnection$ConnectWithBadParams(\n\t\t\t\t\t$author$project$Example$ConnectWithBadParams$init(phoenix));\n\t\t\tdefault:\n\t\t\t\treturn $author$project$Page$ControlTheSocketConnection$SimpleConnect(\n\t\t\t\t\t$author$project$Example$SimpleConnect$init(phoenix));\n\t\t}\n\t});\nvar $author$project$Page$ControlTheSocketConnection$updateExample = F2(\n\tfunction (selectedExample, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: A2(\n\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$exampleFromString,\n\t\t\t\t\t\tselectedExample,\n\t\t\t\t\t\t$author$project$Session$phoenix(model.session))\n\t\t\t\t}),\n\t\t\tcmd);\n\t});\nvar $author$project$Page$ControlTheSocketConnection$updatePhoenix = F2(\n\tfunction (model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsession: A2($author$project$Session$updatePhoenix, phoenix, model.session)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, $author$project$Page$ControlTheSocketConnection$PhoenixMsg, phoenixCmd));\n\t});\nvar $author$project$Utils$updatePhoenixSessionWith = F3(\n\tfunction (toMsg, model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsession: A2($author$project$Session$updatePhoenix, phoenix, model.session)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, phoenixCmd));\n\t});\nvar $author$project$Page$ControlTheSocketConnection$updateWith = F4(\n\tfunction (toExample, toMsg, model, _v0) {\n\t\tvar subModel = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: toExample(subModel)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, cmd));\n\t});\nvar $author$project$Page$ControlTheSocketConnection$update = F2(\n\tfunction (msg, model) {\n\t\tvar phoenix = $author$project$Session$phoenix(model.session);\n\t\tvar _v0 = _Utils_Tuple2(msg, model.example);\n\t\t_v0$6:\n\t\twhile (true) {\n\t\t\tswitch (_v0.a.$) {\n\t\t\t\tcase 'GotHomeBtnClick':\n\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Route$pushUrl,\n\t\t\t\t\t\t\t$author$project$Session$navKey(model.session),\n\t\t\t\t\t\t\t$author$project$Route$Home));\n\t\t\t\tcase 'GotMenuItem':\n\t\t\t\t\tvar example_ = _v0.a.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$updateExample,\n\t\t\t\t\t\texample_,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$updatePhoenix,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$disconnect,\n\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(1000),\n\t\t\t\t\t\t\t\tphoenix)));\n\t\t\t\tcase 'PhoenixMsg':\n\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Utils$updatePhoenixSessionWith,\n\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$PhoenixMsg,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, phoenix));\n\t\t\t\tcase 'GotSimpleConnectMsg':\n\t\t\t\t\tif (_v0.b.$ === 'SimpleConnect') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$SimpleConnect,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotSimpleConnectMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$SimpleConnect$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$6;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotConnectWithGoodParamsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'ConnectWithGoodParams') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$ConnectWithGoodParams,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithGoodParamsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$ConnectWithGoodParams$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$6;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (_v0.b.$ === 'ConnectWithBadParams') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$ConnectWithBadParams,\n\t\t\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithBadParamsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$ConnectWithBadParams$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$6;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Page$Home$update = F2(\n\tfunction (msg, model) {\n\t\tif (msg.$ === 'PhoenixMsg') {\n\t\t\tvar phoenixMsg = msg.a;\n\t\t\tvar _v1 = A2(\n\t\t\t\t$author$project$Phoenix$update,\n\t\t\t\tphoenixMsg,\n\t\t\t\t$author$project$Session$phoenix(model));\n\t\t\tvar phx = _v1.a;\n\t\t\tvar phxCmd = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($author$project$Session$updatePhoenix, phx, model),\n\t\t\t\tA2($elm$core$Platform$Cmd$map, $author$project$Page$Home$PhoenixMsg, phxCmd));\n\t\t} else {\n\t\t\tvar route = msg.a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tmodel,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Route$pushUrl,\n\t\t\t\t\t$author$project$Session$navKey(model),\n\t\t\t\t\troute));\n\t\t}\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$JoinMultipleChannels = function (a) {\n\treturn {$: 'JoinMultipleChannels', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$JoinWithBadParams = function (a) {\n\treturn {$: 'JoinWithBadParams', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$JoinWithGoodParams = function (a) {\n\treturn {$: 'JoinWithGoodParams', a: a};\n};\nvar $author$project$View$Example$Channel = function (a) {\n\treturn {$: 'Channel', a: a};\n};\nvar $author$project$Example$JoinMultipleChannels$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotJoin':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$JoinMultipleChannels$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$batch,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Phoenix$join('example:join_channel_number_1'),\n\t\t\t\t\t\t\t\t$author$project$Phoenix$join('example:join_channel_number_2'),\n\t\t\t\t\t\t\t\t$author$project$Phoenix$join('example:join_channel_number_3')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$JoinMultipleChannels$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$batch,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Phoenix$leave('example:join_channel_number_1'),\n\t\t\t\t\t\t\t\t$author$project$Phoenix$leave('example:join_channel_number_2'),\n\t\t\t\t\t\t\t\t$author$project$Phoenix$leave('example:join_channel_number_3')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$JoinMultipleChannels$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Utils$batch = F2(\n\tfunction (cmds, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\tmodel,\n\t\t\t$elm$core$Platform$Cmd$batch(\n\t\t\t\tA2($elm$core$List$cons, cmd, cmds)));\n\t});\nvar $author$project$Example$JoinWithBadParams$update = F2(\n\tfunction (msg, model) {\n\t\tif (msg.$ === 'GotJoin') {\n\t\t\treturn A3(\n\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t$author$project$Example$JoinWithBadParams$PhoenixMsg,\n\t\t\t\tmodel,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t'example:join_and_leave_channels',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Configs$joinConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t'username',\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$string('bad')),\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t'password',\n\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$string('bad'))\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\ttopic: 'example:join_and_leave_channels'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix)));\n\t\t} else {\n\t\t\tvar subMsg = msg.a;\n\t\t\tvar _v1 = A3(\n\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t$author$project$Example$JoinWithBadParams$PhoenixMsg,\n\t\t\t\tmodel,\n\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\tvar newModel = _v1.a;\n\t\t\tvar cmd = _v1.b;\n\t\t\tvar phoenixMsg = _v1.c;\n\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\tif (response.$ === 'JoinError') {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$author$project$Utils$batch,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[cmd]),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t\t\t\t$author$project$Example$JoinWithBadParams$PhoenixMsg,\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:join_and_leave_channels', newModel.phoenix)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t}\n\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tcmd);\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$JoinWithGoodParams$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotJoin':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$JoinWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$join,\n\t\t\t\t\t\t'example:join_and_leave_channels',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t$author$project$Configs$joinConfig,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpayload: $elm$json$Json$Encode$object(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t'username',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$string('good')),\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t'password',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$json$Json$Encode$string('good'))\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\ttopic: 'example:join_and_leave_channels'\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tmodel.phoenix)));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$JoinWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:join_and_leave_channels', model.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$JoinWithGoodParams$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$SimpleJoinAndLeave$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotJoin':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$join, 'example:join_and_leave_channels', model.phoenix));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:join_and_leave_channels', model.phoenix));\n\t\t\tcase 'GotDisconnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$disconnect,\n\t\t\t\t\t\t$elm$core$Maybe$Just(1000),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar subMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\t_v2$2:\n\t\t\t\twhile (true) {\n\t\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\t\tif (phoenixMsg.a.$ === 'StateChange') {\n\t\t\t\t\t\t\t\tvar state = phoenixMsg.a.a;\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$StateChange(state)),\n\t\t\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tcmd);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v2$2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t}\n\t});\nvar $author$project$Example$JoinMultipleChannels$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Example$JoinWithBadParams$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Example$JoinWithGoodParams$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Page$JoinAndLeaveChannels$exampleFromString = F2(\n\tfunction (example, phoenix) {\n\t\tswitch (example) {\n\t\t\tcase 'Simple Join And Leave':\n\t\t\t\treturn $author$project$Page$JoinAndLeaveChannels$SimpleJoinAndLeave(\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$init(phoenix));\n\t\t\tcase 'Join With Good Params':\n\t\t\t\treturn $author$project$Page$JoinAndLeaveChannels$JoinWithGoodParams(\n\t\t\t\t\t$author$project$Example$JoinWithGoodParams$init(phoenix));\n\t\t\tcase 'Join With Bad Params':\n\t\t\t\treturn $author$project$Page$JoinAndLeaveChannels$JoinWithBadParams(\n\t\t\t\t\t$author$project$Example$JoinWithBadParams$init(phoenix));\n\t\t\tcase 'Join Multiple Channels':\n\t\t\t\treturn $author$project$Page$JoinAndLeaveChannels$JoinMultipleChannels(\n\t\t\t\t\t$author$project$Example$JoinMultipleChannels$init(phoenix));\n\t\t\tdefault:\n\t\t\t\treturn $author$project$Page$JoinAndLeaveChannels$SimpleJoinAndLeave(\n\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$init(phoenix));\n\t\t}\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$updateExample = F2(\n\tfunction (selectedExample, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: A2(\n\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$exampleFromString,\n\t\t\t\t\t\tselectedExample,\n\t\t\t\t\t\t$author$project$Session$phoenix(model.session))\n\t\t\t\t}),\n\t\t\tcmd);\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$updatePhoenix = F2(\n\tfunction (model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsession: A2($author$project$Session$updatePhoenix, phoenix, model.session)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, $author$project$Page$JoinAndLeaveChannels$PhoenixMsg, phoenixCmd));\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$updateWith = F4(\n\tfunction (toExample, toMsg, model, _v0) {\n\t\tvar subModel = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: toExample(subModel)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, cmd));\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$update = F2(\n\tfunction (msg, model) {\n\t\tvar phoenix = $author$project$Session$phoenix(model.session);\n\t\tvar _v0 = _Utils_Tuple2(msg, model.example);\n\t\t_v0$7:\n\t\twhile (true) {\n\t\t\tswitch (_v0.a.$) {\n\t\t\t\tcase 'GotHomeBtnClick':\n\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Route$pushUrl,\n\t\t\t\t\t\t\t$author$project$Session$navKey(model.session),\n\t\t\t\t\t\t\t$author$project$Route$Home));\n\t\t\t\tcase 'GotMenuItem':\n\t\t\t\t\tvar example_ = _v0.a.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updateExample,\n\t\t\t\t\t\texample_,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updatePhoenix,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Phoenix$disconnectAndReset, $elm$core$Maybe$Nothing, phoenix)));\n\t\t\t\tcase 'PhoenixMsg':\n\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Utils$updatePhoenixSessionWith,\n\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$PhoenixMsg,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, phoenix));\n\t\t\t\tcase 'GotSimpleJoinAndLeaveMsg':\n\t\t\t\t\tif (_v0.b.$ === 'SimpleJoinAndLeave') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$SimpleJoinAndLeave,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotSimpleJoinAndLeaveMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$SimpleJoinAndLeave$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotJoinWithGoodParamsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'JoinWithGoodParams') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$JoinWithGoodParams,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithGoodParamsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$JoinWithGoodParams$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotJoinWithBadParamsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'JoinWithBadParams') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$JoinWithBadParams,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithBadParamsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$JoinWithBadParams$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (_v0.b.$ === 'JoinMultipleChannels') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$JoinMultipleChannels,\n\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinMultipleChannelsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$JoinMultipleChannels$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Page$SendAndReceive$PushMultipleEvents = function (a) {\n\treturn {$: 'PushMultipleEvents', a: a};\n};\nvar $author$project$Page$SendAndReceive$PushWithTimeout = function (a) {\n\treturn {$: 'PushWithTimeout', a: a};\n};\nvar $author$project$Page$SendAndReceive$ReceiveEvents = function (a) {\n\treturn {$: 'ReceiveEvents', a: a};\n};\nvar $author$project$View$Example$Event = function (a) {\n\treturn {$: 'Event', a: a};\n};\nvar $author$project$Configs$pushConfig = {event: '', payload: $elm$json$Json$Encode$null, ref: $elm$core$Maybe$Nothing, retryStrategy: $author$project$Phoenix$Drop, timeout: $elm$core$Maybe$Nothing, topic: ''};\nvar $author$project$Example$PushMultipleEvents$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotPush':\n\t\t\t\tvar defaultConfig = _Utils_update(\n\t\t\t\t\t$author$project$Configs$pushConfig,\n\t\t\t\t\t{event: 'example_push', topic: 'example:send_and_receive'});\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushMultipleEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$batchWithParams,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tdefaultConfig,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('1')\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tdefaultConfig,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('2')\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tdefaultConfig,\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('3')\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushMultipleEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:send_and_receive', model.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar phxMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$PushMultipleEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, phxMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'ChannelEvent':\n\t\t\t\t\t\tvar topic = phoenixMsg.a;\n\t\t\t\t\t\tvar event = phoenixMsg.b;\n\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Event(\n\t\t\t\t\t\t\t\t\t\t\t{event: event, payload: payload, topic: topic}),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$PushOneEvent$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotPush':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushOneEvent$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Configs$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'example_push',\n\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('custom_ref'),\n\t\t\t\t\t\t\t\ttopic: 'example:send_and_receive'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushOneEvent$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:send_and_receive', model.phoenix));\n\t\t\tcase 'GotDisconnect':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushOneEvent$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$disconnectAndReset,\n\t\t\t\t\t\t$elm$core$Maybe$Just(1000),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar phxMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$PushOneEvent$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, phxMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'ChannelEvent':\n\t\t\t\t\t\tvar topic = phoenixMsg.a;\n\t\t\t\t\t\tvar event = phoenixMsg.b;\n\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Event(\n\t\t\t\t\t\t\t\t\t\t\t{event: event, payload: payload, topic: topic}),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Internal$Push$noMatchWith = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar pushConfig = _v0.pushConfig;\n\t\treturn !compareFunc(pushConfig);\n\t});\nvar $author$project$Internal$Push$dropTimeout = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar push = _v0.a;\n\t\treturn $author$project$Internal$Push$Push(\n\t\t\t_Utils_update(\n\t\t\t\tpush,\n\t\t\t\t{\n\t\t\t\t\ttimeouts: A2(\n\t\t\t\t\t\t$author$project$Internal$Push$filter,\n\t\t\t\t\t\t$author$project$Internal$Push$noMatchWith(compareFunc),\n\t\t\t\t\t\tpush.timeouts)\n\t\t\t\t}));\n\t});\nvar $author$project$Phoenix$dropTimeoutPush = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn $author$project$Phoenix$Model(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tpush: A2($author$project$Internal$Push$dropTimeout, compareFunc, model.push)\n\t\t\t\t}));\n\t});\nvar $author$project$Example$PushWithTimeout$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotPush':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$PushWithTimeout$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Configs$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'push_with_timeout',\n\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('timeout_push'),\n\t\t\t\t\t\t\t\tretryStrategy: model.retryStrategy,\n\t\t\t\t\t\t\t\ttopic: 'example:send_and_receive'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotCancelRetry':\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tphoenix: A2(\n\t\t\t\t\t\t\t\t$author$project$Phoenix$dropTimeoutPush,\n\t\t\t\t\t\t\t\tfunction (push_) {\n\t\t\t\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t\t\t\tpush_.ref,\n\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just('timeout_push'));\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tmodel.phoenix)\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 'GotRetryStrategy':\n\t\t\t\tvar retryStrategy = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{retryStrategy: retryStrategy}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar phxMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$PushWithTimeout$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, phxMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'ChannelEvent':\n\t\t\t\t\t\tvar topic = phoenixMsg.a;\n\t\t\t\t\t\tvar event = phoenixMsg.b;\n\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Event(\n\t\t\t\t\t\t\t\t\t\t\t{event: event, payload: payload, topic: topic}),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'SocketMessage':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Socket(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$ReceiveEvents$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 'GotPush':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$ReceiveEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$Phoenix$push,\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t$author$project$Configs$pushConfig,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tevent: 'receive_events',\n\t\t\t\t\t\t\t\tref: $elm$core$Maybe$Just('custom_ref'),\n\t\t\t\t\t\t\t\ttopic: 'example:send_and_receive'\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tmodel.phoenix));\n\t\t\tcase 'GotLeave':\n\t\t\t\treturn A3(\n\t\t\t\t\t$author$project$Utils$updatePhoenixWith,\n\t\t\t\t\t$author$project$Example$ReceiveEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$leave, 'example:send_and_receive', model.phoenix));\n\t\t\tdefault:\n\t\t\t\tvar phxMsg = msg.a;\n\t\t\t\tvar _v1 = A3(\n\t\t\t\t\t$author$project$Phoenix$updateWith,\n\t\t\t\t\t$author$project$Example$ReceiveEvents$PhoenixMsg,\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2($author$project$Phoenix$update, phxMsg, model.phoenix));\n\t\t\t\tvar newModel = _v1.a;\n\t\t\t\tvar cmd = _v1.b;\n\t\t\t\tvar phoenixMsg = _v1.c;\n\t\t\t\tswitch (phoenixMsg.$) {\n\t\t\t\t\tcase 'ChannelResponse':\n\t\t\t\t\t\tvar response = phoenixMsg.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Channel(response),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tcase 'ChannelEvent':\n\t\t\t\t\t\tvar topic = phoenixMsg.a;\n\t\t\t\t\t\tvar event = phoenixMsg.b;\n\t\t\t\t\t\tvar payload = phoenixMsg.c;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tnewModel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tresponses: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Event(\n\t\t\t\t\t\t\t\t\t\t\t{event: event, payload: payload, topic: topic}),\n\t\t\t\t\t\t\t\t\t\tnewModel.responses)\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcmd);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(newModel, cmd);\n\t\t\t\t}\n\t\t}\n\t});\nvar $author$project$Example$PushMultipleEvents$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil};\n};\nvar $author$project$Example$PushWithTimeout$init = function (phoenix) {\n\treturn {phoenix: phoenix, responses: _List_Nil, retryStrategy: $author$project$Phoenix$Drop};\n};\nvar $author$project$Example$ReceiveEvents$init = function (phoenix) {\n\treturn {\n\t\tphoenix: A2(\n\t\t\t$author$project$Phoenix$setJoinConfig,\n\t\t\t_Utils_update(\n\t\t\t\t$author$project$Configs$joinConfig,\n\t\t\t\t{\n\t\t\t\t\tevents: _List_fromArray(\n\t\t\t\t\t\t['receive_event_1', 'receive_event_2']),\n\t\t\t\t\ttopic: 'example:send_and_receive'\n\t\t\t\t}),\n\t\t\tphoenix),\n\t\tresponses: _List_Nil\n\t};\n};\nvar $author$project$Page$SendAndReceive$exampleFromString = F2(\n\tfunction (example, phoenix) {\n\t\tswitch (example) {\n\t\t\tcase 'Push One Event':\n\t\t\t\treturn $author$project$Page$SendAndReceive$PushOneEvent(\n\t\t\t\t\t$author$project$Example$PushOneEvent$init(phoenix));\n\t\t\tcase 'Push Multiple Events':\n\t\t\t\treturn $author$project$Page$SendAndReceive$PushMultipleEvents(\n\t\t\t\t\t$author$project$Example$PushMultipleEvents$init(phoenix));\n\t\t\tcase 'Receive Events':\n\t\t\t\treturn $author$project$Page$SendAndReceive$ReceiveEvents(\n\t\t\t\t\t$author$project$Example$ReceiveEvents$init(phoenix));\n\t\t\tcase 'Push With Timeout':\n\t\t\t\treturn $author$project$Page$SendAndReceive$PushWithTimeout(\n\t\t\t\t\t$author$project$Example$PushWithTimeout$init(phoenix));\n\t\t\tdefault:\n\t\t\t\treturn $author$project$Page$SendAndReceive$PushOneEvent(\n\t\t\t\t\t$author$project$Example$PushOneEvent$init(phoenix));\n\t\t}\n\t});\nvar $author$project$Page$SendAndReceive$updateExample = F2(\n\tfunction (selectedExample, _v0) {\n\t\tvar model = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: A2(\n\t\t\t\t\t\t$author$project$Page$SendAndReceive$exampleFromString,\n\t\t\t\t\t\tselectedExample,\n\t\t\t\t\t\t$author$project$Session$phoenix(model.session))\n\t\t\t\t}),\n\t\t\tcmd);\n\t});\nvar $author$project$Page$SendAndReceive$updatePhoenix = F2(\n\tfunction (model, _v0) {\n\t\tvar phoenix = _v0.a;\n\t\tvar phoenixCmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\tsession: A2($author$project$Session$updatePhoenix, phoenix, model.session)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, $author$project$Page$SendAndReceive$PhoenixMsg, phoenixCmd));\n\t});\nvar $author$project$Page$SendAndReceive$updateWith = F4(\n\tfunction (toExample, toMsg, model, _v0) {\n\t\tvar subModel = _v0.a;\n\t\tvar cmd = _v0.b;\n\t\treturn _Utils_Tuple2(\n\t\t\t_Utils_update(\n\t\t\t\tmodel,\n\t\t\t\t{\n\t\t\t\t\texample: toExample(subModel)\n\t\t\t\t}),\n\t\t\tA2($elm$core$Platform$Cmd$map, toMsg, cmd));\n\t});\nvar $author$project$Page$SendAndReceive$update = F2(\n\tfunction (msg, model) {\n\t\tvar phoenix = $author$project$Session$phoenix(model.session);\n\t\tvar _v0 = _Utils_Tuple2(msg, model.example);\n\t\t_v0$7:\n\t\twhile (true) {\n\t\t\tswitch (_v0.a.$) {\n\t\t\t\tcase 'GotHomeBtnClick':\n\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Route$pushUrl,\n\t\t\t\t\t\t\t$author$project$Session$navKey(model.session),\n\t\t\t\t\t\t\t$author$project$Route$Home));\n\t\t\t\tcase 'GotMenuItem':\n\t\t\t\t\tvar example = _v0.a.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$Page$SendAndReceive$updateExample,\n\t\t\t\t\t\texample,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$updatePhoenix,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Phoenix$disconnectAndReset, $elm$core$Maybe$Nothing, phoenix)));\n\t\t\t\tcase 'PhoenixMsg':\n\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$author$project$Utils$updatePhoenixSessionWith,\n\t\t\t\t\t\t$author$project$Page$SendAndReceive$PhoenixMsg,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\tA2($author$project$Phoenix$update, subMsg, phoenix));\n\t\t\t\tcase 'GotPushOneEventMsg':\n\t\t\t\t\tif (_v0.b.$ === 'PushOneEvent') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$PushOneEvent,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushOneEventMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$PushOneEvent$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotPushMultipleEventsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'PushMultipleEvents') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$PushMultipleEvents,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushMultipleEventsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$PushMultipleEvents$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotReceiveEventsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'ReceiveEvents') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$ReceiveEvents,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$GotReceiveEventsMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$ReceiveEvents$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (_v0.b.$ === 'PushWithTimeout') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$updateWith,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$PushWithTimeout,\n\t\t\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushWithTimeoutMsg,\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2($author$project$Example$PushWithTimeout$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$7;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Session$updateDevice = F2(\n\tfunction (device_, _v0) {\n\t\tvar session = _v0.a;\n\t\treturn $author$project$Session$Session(\n\t\t\t_Utils_update(\n\t\t\t\tsession,\n\t\t\t\t{device: device_}));\n\t});\nvar $author$project$Page$ChatRooms$updateSession = F2(\n\tfunction (session, model) {\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{session: session});\n\t});\nvar $author$project$Page$ControlTheSocketConnection$updateSession = F2(\n\tfunction (session, model) {\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{session: session});\n\t});\nvar $author$project$Page$Home$updateSession = function (session) {\n\treturn session;\n};\nvar $author$project$Page$JoinAndLeaveChannels$updateSession = F2(\n\tfunction (session, model) {\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{session: session});\n\t});\nvar $author$project$Page$SendAndReceive$updateSession = F2(\n\tfunction (session, model) {\n\t\treturn _Utils_update(\n\t\t\tmodel,\n\t\t\t{session: session});\n\t});\nvar $author$project$Main$updateSession = F2(\n\tfunction (session, model) {\n\t\tswitch (model.$) {\n\t\t\tcase 'Redirect':\n\t\t\t\treturn $author$project$Main$Redirect(session);\n\t\t\tcase 'NotFound':\n\t\t\t\treturn $author$project$Main$NotFound(session);\n\t\t\tcase 'Home':\n\t\t\t\treturn $author$project$Main$Home(\n\t\t\t\t\t$author$project$Page$Home$updateSession(session));\n\t\t\tcase 'ChatRooms':\n\t\t\t\tvar subModel = model.a;\n\t\t\t\treturn $author$project$Main$ChatRooms(\n\t\t\t\t\tA2($author$project$Page$ChatRooms$updateSession, session, subModel));\n\t\t\tcase 'ControlTheSocketConnection':\n\t\t\t\tvar subModel = model.a;\n\t\t\t\treturn $author$project$Main$ControlTheSocketConnection(\n\t\t\t\t\tA2($author$project$Page$ControlTheSocketConnection$updateSession, session, subModel));\n\t\t\tcase 'JoinAndLeaveChannels':\n\t\t\t\tvar subModel = model.a;\n\t\t\t\treturn $author$project$Main$JoinAndLeaveChannels(\n\t\t\t\t\tA2($author$project$Page$JoinAndLeaveChannels$updateSession, session, subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = model.a;\n\t\t\t\treturn $author$project$Main$SendAndReceive(\n\t\t\t\t\tA2($author$project$Page$SendAndReceive$updateSession, session, subModel));\n\t\t}\n\t});\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tvar _v0 = _Utils_Tuple2(msg, model);\n\t\t_v0$8:\n\t\twhile (true) {\n\t\t\tswitch (_v0.a.$) {\n\t\t\t\tcase 'ClickedLink':\n\t\t\t\t\tvar urlRequest = _v0.a.a;\n\t\t\t\t\tif (urlRequest.$ === 'Internal') {\n\t\t\t\t\t\tvar url = urlRequest.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$browser$Browser$Navigation$pushUrl,\n\t\t\t\t\t\t\t\t$author$project$Session$navKey(\n\t\t\t\t\t\t\t\t\t$author$project$Main$toSession(model)),\n\t\t\t\t\t\t\t\t$elm$url$Url$toString(url)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar href = urlRequest.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t$elm$browser$Browser$Navigation$load(href));\n\t\t\t\t\t}\n\t\t\t\tcase 'ChangedUrl':\n\t\t\t\t\tvar url = _v0.a.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$Main$changeRouteTo,\n\t\t\t\t\t\t$author$project$Route$fromUrl(url),\n\t\t\t\t\t\tmodel);\n\t\t\t\tcase 'WindowResized':\n\t\t\t\t\tvar _v2 = _v0.a;\n\t\t\t\t\tvar width = _v2.a;\n\t\t\t\t\tvar height = _v2.b;\n\t\t\t\t\tvar session = A2(\n\t\t\t\t\t\t$author$project$Session$updateDevice,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$classifyDevice(\n\t\t\t\t\t\t\t{height: height, width: width}),\n\t\t\t\t\t\t$author$project$Main$toSession(model));\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tA2($author$project$Main$updateSession, session, model),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\tcase 'GotHomeMsg':\n\t\t\t\t\tif (_v0.b.$ === 'Home') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t\t$author$project$Main$Home,\n\t\t\t\t\t\t\t$author$project$Main$GotHomeMsg,\n\t\t\t\t\t\t\tA2($author$project$Page$Home$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotChatRoomsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'ChatRooms') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t\t$author$project$Main$ChatRooms,\n\t\t\t\t\t\t\t$author$project$Main$GotChatRoomsMsg,\n\t\t\t\t\t\t\tA2($author$project$Page$ChatRooms$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotControlTheSocketConnectionMsg':\n\t\t\t\t\tif (_v0.b.$ === 'ControlTheSocketConnection') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t\t$author$project$Main$ControlTheSocketConnection,\n\t\t\t\t\t\t\t$author$project$Main$GotControlTheSocketConnectionMsg,\n\t\t\t\t\t\t\tA2($author$project$Page$ControlTheSocketConnection$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tcase 'GotJoinAndLeaveChannelsMsg':\n\t\t\t\t\tif (_v0.b.$ === 'JoinAndLeaveChannels') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t\t$author$project$Main$JoinAndLeaveChannels,\n\t\t\t\t\t\t\t$author$project$Main$GotJoinAndLeaveChannelsMsg,\n\t\t\t\t\t\t\tA2($author$project$Page$JoinAndLeaveChannels$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tif (_v0.b.$ === 'SendAndReceive') {\n\t\t\t\t\t\tvar subMsg = _v0.a.a;\n\t\t\t\t\t\tvar subModel = _v0.b.a;\n\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t$author$project$Main$updateWith,\n\t\t\t\t\t\t\t$author$project$Main$SendAndReceive,\n\t\t\t\t\t\t\t$author$project$Main$GotSendAndReceiveMsg,\n\t\t\t\t\t\t\tA2($author$project$Page$SendAndReceive$update, subMsg, subModel));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t});\nvar $author$project$Session$device = function (_v0) {\n\tvar session = _v0.a;\n\treturn session.device;\n};\nvar $author$project$Main$toDevice = function (model) {\n\treturn $author$project$Session$device(\n\t\t$author$project$Main$toSession(model));\n};\nvar $author$project$Session$vsn = function (_v0) {\n\tvar session = _v0.a;\n\treturn session.vsn;\n};\nvar $author$project$Main$toVersion = function (model) {\n\treturn $author$project$Session$vsn(\n\t\t$author$project$Main$toSession(model));\n};\nvar $mdgriffith$elm_ui$Internal$Model$AlignY = function (a) {\n\treturn {$: 'AlignY', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Bottom = {$: 'Bottom'};\nvar $mdgriffith$elm_ui$Element$alignBottom = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Bottom);\nvar $mdgriffith$elm_ui$Internal$Model$AlignX = function (a) {\n\treturn {$: 'AlignX', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Right = {$: 'Right'};\nvar $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Right);\nvar $mdgriffith$elm_ui$Internal$Model$Class = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Class', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$classes = {above: 'a', active: 'atv', alignBottom: 'ab', alignCenterX: 'cx', alignCenterY: 'cy', alignContainerBottom: 'acb', alignContainerCenterX: 'accx', alignContainerCenterY: 'accy', alignContainerRight: 'acr', alignLeft: 'al', alignRight: 'ar', alignTop: 'at', alignedHorizontally: 'ah', alignedVertically: 'av', any: 's', behind: 'bh', below: 'b', bold: 'w7', borderDashed: 'bd', borderDotted: 'bdt', borderNone: 'bn', borderSolid: 'bs', capturePointerEvents: 'cpe', clip: 'cp', clipX: 'cpx', clipY: 'cpy', column: 'c', container: 'ctr', contentBottom: 'cb', contentCenterX: 'ccx', contentCenterY: 'ccy', contentLeft: 'cl', contentRight: 'cr', contentTop: 'ct', cursorPointer: 'cptr', cursorText: 'ctxt', focus: 'fcs', focusedWithin: 'focus-within', fullSize: 'fs', grid: 'g', hasBehind: 'hbh', heightContent: 'hc', heightExact: 'he', heightFill: 'hf', heightFillPortion: 'hfp', hover: 'hv', imageContainer: 'ic', inFront: 'fr', inputLabel: 'lbl', inputMultiline: 'iml', inputMultilineFiller: 'imlf', inputMultilineParent: 'imlp', inputMultilineWrapper: 'implw', inputText: 'it', italic: 'i', link: 'lnk', nearby: 'nb', noTextSelection: 'notxt', onLeft: 'ol', onRight: 'or', opaque: 'oq', overflowHidden: 'oh', page: 'pg', paragraph: 'p', passPointerEvents: 'ppe', root: 'ui', row: 'r', scrollbars: 'sb', scrollbarsX: 'sbx', scrollbarsY: 'sby', seButton: 'sbt', single: 'e', sizeByCapital: 'cap', spaceEvenly: 'sev', strike: 'sk', text: 't', textCenter: 'tc', textExtraBold: 'w8', textExtraLight: 'w2', textHeavy: 'w9', textJustify: 'tj', textJustifyAll: 'tja', textLeft: 'tl', textLight: 'w3', textMedium: 'w5', textNormalWeight: 'w4', textRight: 'tr', textSemiBold: 'w6', textThin: 'w1', textUnitalicized: 'tun', transition: 'ts', transparent: 'clr', underline: 'u', widthContent: 'wc', widthExact: 'we', widthFill: 'wf', widthFillPortion: 'wfp', wrapped: 'wrp'};\nvar $mdgriffith$elm_ui$Internal$Flag$Flag = function (a) {\n\treturn {$: 'Flag', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$Second = function (a) {\n\treturn {$: 'Second', a: a};\n};\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $mdgriffith$elm_ui$Internal$Flag$flag = function (i) {\n\treturn (i > 31) ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << (i - 32)) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);\n};\nvar $mdgriffith$elm_ui$Internal$Flag$overflow = $mdgriffith$elm_ui$Internal$Flag$flag(20);\nvar $mdgriffith$elm_ui$Element$clip = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.clip);\nvar $mdgriffith$elm_ui$Internal$Model$Colored = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Colored', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'StyleClass', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);\nvar $elm$core$Basics$round = _Basics_round;\nvar $mdgriffith$elm_ui$Internal$Model$floatClass = function (x) {\n\treturn $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(x * 255));\n};\nvar $mdgriffith$elm_ui$Internal$Model$formatColorClass = function (_v0) {\n\tvar red = _v0.a;\n\tvar green = _v0.b;\n\tvar blue = _v0.c;\n\tvar alpha = _v0.d;\n\treturn $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));\n};\nvar $mdgriffith$elm_ui$Element$Background$color = function (clr) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$bgColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),\n\t\t\t'background-color',\n\t\t\tclr));\n};\nvar $mdgriffith$elm_ui$Element$rgb255 = F3(\n\tfunction (red, green, blue) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, 1);\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$skyblue = A3($mdgriffith$elm_ui$Element$rgb255, 135, 206, 235);\nvar $author$project$UI$BackgroundColor$content = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$skyblue);\nvar $phollyer$elm_ui_colors$Colors$Opaque$lightblue = A3($mdgriffith$elm_ui$Element$rgb255, 173, 216, 230);\nvar $mdgriffith$elm_ui$Internal$Model$Single = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Single', a: a, b: b, c: c};\n\t});\nvar $elm$core$String$concat = function (strings) {\n\treturn A2($elm$core$String$join, '', strings);\n};\nvar $mdgriffith$elm_ui$Internal$Model$boxShadowClass = function (shadow) {\n\treturn $elm$core$String$concat(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tshadow.inset ? 'box-inset' : 'box-',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.offset.a) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.offset.b) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.blur) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$floatClass(shadow.size) + 'px',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColorClass(shadow.color)\n\t\t\t]));\n};\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $mdgriffith$elm_ui$Internal$Model$formatColor = function (_v0) {\n\tvar red = _v0.a;\n\tvar green = _v0.b;\n\tvar blue = _v0.c;\n\tvar alpha = _v0.d;\n\treturn 'rgba(' + ($elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(red * 255)) + ((',' + $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(green * 255))) + ((',' + $elm$core$String$fromInt(\n\t\t$elm$core$Basics$round(blue * 255))) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));\n};\nvar $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function (shadow) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\tA2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\t$elm$core$Basics$identity,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tshadow.inset ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.offset.a) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.offset.b) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.blur) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$elm$core$String$fromFloat(shadow.size) + 'px'),\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(shadow.color))\n\t\t\t\t])));\n};\nvar $mdgriffith$elm_ui$Internal$Flag$shadows = $mdgriffith$elm_ui$Internal$Flag$flag(19);\nvar $mdgriffith$elm_ui$Element$Border$shadow = function (almostShade) {\n\tvar shade = {blur: almostShade.blur, color: almostShade.color, inset: false, offset: almostShade.offset, size: almostShade.size};\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$shadows,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$boxShadowClass(shade),\n\t\t\t'box-shadow',\n\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(shade)));\n};\nvar $author$project$UI$Shadow$content = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$shadow(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 5,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$lightblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 2\n\t\t\t\t\t};\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 10,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$lightblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 3\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 20,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$lightblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 5\n\t\t\t\t\t};\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Internal$Model$Unkeyed = function (a) {\n\treturn {$: 'Unkeyed', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$AsEl = {$: 'AsEl'};\nvar $mdgriffith$elm_ui$Internal$Model$asEl = $mdgriffith$elm_ui$Internal$Model$AsEl;\nvar $mdgriffith$elm_ui$Internal$Model$Generic = {$: 'Generic'};\nvar $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;\nvar $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {$: 'NoNearbyChildren'};\nvar $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.column);\nvar $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.grid);\nvar $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.page);\nvar $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph);\nvar $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.row);\nvar $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single);\nvar $mdgriffith$elm_ui$Internal$Model$contextClasses = function (context) {\n\tswitch (context.$) {\n\t\tcase 'AsRow':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$rowClass;\n\t\tcase 'AsColumn':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$columnClass;\n\t\tcase 'AsEl':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$singleClass;\n\t\tcase 'AsGrid':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$gridClass;\n\t\tcase 'AsParagraph':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$paragraphClass;\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$pageClass;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$Keyed = function (a) {\n\treturn {$: 'Keyed', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {$: 'NoStyleSheet'};\nvar $mdgriffith$elm_ui$Internal$Model$Styled = function (a) {\n\treturn {$: 'Styled', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Unstyled = function (a) {\n\treturn {$: 'Unstyled', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$addChildren = F2(\n\tfunction (existing, nearbyChildren) {\n\t\tswitch (nearbyChildren.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\treturn existing;\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(behind, existing);\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar inFront = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(existing, inFront);\n\t\t\tdefault:\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\tvar inFront = nearbyChildren.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tbehind,\n\t\t\t\t\t_Utils_ap(existing, inFront));\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(\n\tfunction (key, existing, nearbyChildren) {\n\t\tswitch (nearbyChildren.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\treturn existing;\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbehind),\n\t\t\t\t\texisting);\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar inFront = nearbyChildren.a;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinFront));\n\t\t\tdefault:\n\t\t\t\tvar behind = nearbyChildren.a;\n\t\t\t\tvar inFront = nearbyChildren.b;\n\t\t\t\treturn _Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbehind),\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\texisting,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(key, x);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tinFront)));\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$AsParagraph = {$: 'AsParagraph'};\nvar $mdgriffith$elm_ui$Internal$Model$asParagraph = $mdgriffith$elm_ui$Internal$Model$AsParagraph;\nvar $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);\nvar $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);\nvar $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);\nvar $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $mdgriffith$elm_ui$Internal$Model$lengthClassName = function (x) {\n\tswitch (x.$) {\n\t\tcase 'Px':\n\t\t\tvar px = x.a;\n\t\t\treturn $elm$core$String$fromInt(px) + 'px';\n\t\tcase 'Content':\n\t\t\treturn 'auto';\n\t\tcase 'Fill':\n\t\t\tvar i = x.a;\n\t\t\treturn $elm$core$String$fromInt(i) + 'fr';\n\t\tcase 'Min':\n\t\t\tvar min = x.a;\n\t\t\tvar len = x.b;\n\t\t\treturn 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));\n\t\tdefault:\n\t\t\tvar max = x.a;\n\t\t\tvar len = x.b;\n\t\t\treturn 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$transformClass = function (transform) {\n\tswitch (transform.$) {\n\t\tcase 'Untransformed':\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\tcase 'Moved':\n\t\t\tvar _v1 = transform.a;\n\t\t\tvar x = _v1.a;\n\t\t\tvar y = _v1.b;\n\t\t\tvar z = _v1.c;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));\n\t\tdefault:\n\t\t\tvar _v2 = transform.a;\n\t\t\tvar tx = _v2.a;\n\t\t\tvar ty = _v2.b;\n\t\t\tvar tz = _v2.c;\n\t\t\tvar _v3 = transform.b;\n\t\t\tvar sx = _v3.a;\n\t\t\tvar sy = _v3.b;\n\t\t\tvar sz = _v3.c;\n\t\t\tvar _v4 = transform.c;\n\t\t\tvar ox = _v4.a;\n\t\t\tvar oy = _v4.b;\n\t\t\tvar oz = _v4.c;\n\t\t\tvar angle = transform.d;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$getStyleName = function (style) {\n\tswitch (style.$) {\n\t\tcase 'Shadows':\n\t\t\tvar name = style.a;\n\t\t\treturn name;\n\t\tcase 'Transparency':\n\t\t\tvar name = style.a;\n\t\t\tvar o = style.b;\n\t\t\treturn name;\n\t\tcase 'Style':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'FontFamily':\n\t\t\tvar name = style.a;\n\t\t\treturn name;\n\t\tcase 'FontSize':\n\t\t\tvar i = style.a;\n\t\t\treturn 'font-size-' + $elm$core$String$fromInt(i);\n\t\tcase 'Single':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'Colored':\n\t\t\tvar _class = style.a;\n\t\t\treturn _class;\n\t\tcase 'SpacingStyle':\n\t\t\tvar cls = style.a;\n\t\t\tvar x = style.b;\n\t\t\tvar y = style.c;\n\t\t\treturn cls;\n\t\tcase 'PaddingStyle':\n\t\t\tvar cls = style.a;\n\t\t\tvar top = style.b;\n\t\t\tvar right = style.c;\n\t\t\tvar bottom = style.d;\n\t\t\tvar left = style.e;\n\t\t\treturn cls;\n\t\tcase 'BorderWidth':\n\t\t\tvar cls = style.a;\n\t\t\tvar top = style.b;\n\t\t\tvar right = style.c;\n\t\t\tvar bottom = style.d;\n\t\t\tvar left = style.e;\n\t\t\treturn cls;\n\t\tcase 'GridTemplateStyle':\n\t\t\tvar template = style.a;\n\t\t\treturn 'grid-rows-' + (A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'-',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'-',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));\n\t\tcase 'GridPosition':\n\t\t\tvar pos = style.a;\n\t\t\treturn 'gp grid-pos-' + ($elm$core$String$fromInt(pos.row) + ('-' + ($elm$core$String$fromInt(pos.col) + ('-' + ($elm$core$String$fromInt(pos.width) + ('-' + $elm$core$String$fromInt(pos.height)))))));\n\t\tcase 'PseudoSelector':\n\t\t\tvar selector = style.a;\n\t\t\tvar subStyle = style.b;\n\t\t\tvar name = function () {\n\t\t\t\tswitch (selector.$) {\n\t\t\t\t\tcase 'Focus':\n\t\t\t\t\t\treturn 'fs';\n\t\t\t\t\tcase 'Hover':\n\t\t\t\t\t\treturn 'hv';\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn 'act';\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t' ',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (sty) {\n\t\t\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);\n\t\t\t\t\t\tif (_v1 === '') {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar styleName = _v1;\n\t\t\t\t\t\t\treturn styleName + ('-' + name);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsubStyle));\n\t\tdefault:\n\t\t\tvar x = style.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t'',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$transformClass(x));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(\n\tfunction (style, nevermind) {\n\t\tvar cache = nevermind.a;\n\t\tvar existing = nevermind.b;\n\t\tvar styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);\n\t\treturn A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(\n\t\t\tA2($elm$core$Set$insert, styleName, cache),\n\t\t\tA2($elm$core$List$cons, style, existing));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Property = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Property', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Style = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Style', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$dot = function (c) {\n\treturn '.' + c;\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function (focus) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Style,\n\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin) + ':focus-within',\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'border-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.borderColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'background-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.backgroundColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (shadow) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'box-shadow',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tblur: shadow.blur,\n\t\t\t\t\t\t\t\t\t\tcolor: shadow.color,\n\t\t\t\t\t\t\t\t\t\tinset: false,\n\t\t\t\t\t\t\t\t\t\toffset: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$toFloat,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),\n\t\t\t\t\t\t\t\t\t\tsize: shadow.size\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.shadow),\n\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))\n\t\t\t\t\t]))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Style,\n\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (':focus .focusable, ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + '.focusable:focus')),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'border-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.borderColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (color) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'background-color',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.backgroundColor),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\tfunction (shadow) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t'box-shadow',\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tblur: shadow.blur,\n\t\t\t\t\t\t\t\t\t\tcolor: shadow.color,\n\t\t\t\t\t\t\t\t\t\tinset: false,\n\t\t\t\t\t\t\t\t\t\toffset: A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Tuple$mapSecond,\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$Basics$toFloat,\n\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),\n\t\t\t\t\t\t\t\t\t\tsize: shadow.size\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfocus.shadow),\n\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))\n\t\t\t\t\t])))\n\t\t]);\n};\nvar $elm$virtual_dom$VirtualDom$node = function (tag) {\n\treturn _VirtualDom_node(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$virtual_dom$VirtualDom$property = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\t_VirtualDom_noInnerHtmlOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'AllChildren', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Batch = function (a) {\n\treturn {$: 'Batch', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Child = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Child', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Class = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Class', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Descriptor', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Left = {$: 'Left'};\nvar $mdgriffith$elm_ui$Internal$Style$Prop = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Prop', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Right = {$: 'Right'};\nvar $mdgriffith$elm_ui$Internal$Style$Self = function (a) {\n\treturn {$: 'Self', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Supports = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Supports', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$Content = function (a) {\n\treturn {$: 'Content', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$Bottom = {$: 'Bottom'};\nvar $mdgriffith$elm_ui$Internal$Style$CenterX = {$: 'CenterX'};\nvar $mdgriffith$elm_ui$Internal$Style$CenterY = {$: 'CenterY'};\nvar $mdgriffith$elm_ui$Internal$Style$Top = {$: 'Top'};\nvar $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray(\n\t[$mdgriffith$elm_ui$Internal$Style$Top, $mdgriffith$elm_ui$Internal$Style$Bottom, $mdgriffith$elm_ui$Internal$Style$Right, $mdgriffith$elm_ui$Internal$Style$Left, $mdgriffith$elm_ui$Internal$Style$CenterX, $mdgriffith$elm_ui$Internal$Style$CenterY]);\nvar $mdgriffith$elm_ui$Internal$Style$contentName = function (desc) {\n\tswitch (desc.a.$) {\n\t\tcase 'Top':\n\t\t\tvar _v1 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentTop);\n\t\tcase 'Bottom':\n\t\t\tvar _v2 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentBottom);\n\t\tcase 'Right':\n\t\t\tvar _v3 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentRight);\n\t\tcase 'Left':\n\t\t\tvar _v4 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentLeft);\n\t\tcase 'CenterX':\n\t\t\tvar _v5 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX);\n\t\tdefault:\n\t\t\tvar _v6 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Style$selfName = function (desc) {\n\tswitch (desc.a.$) {\n\t\tcase 'Top':\n\t\t\tvar _v1 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignTop);\n\t\tcase 'Bottom':\n\t\t\tvar _v2 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignBottom);\n\t\tcase 'Right':\n\t\t\tvar _v3 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignRight);\n\t\tcase 'Left':\n\t\t\tvar _v4 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignLeft);\n\t\tcase 'CenterX':\n\t\t\tvar _v5 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);\n\t\tdefault:\n\t\t\tvar _v6 = desc.a;\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Style$describeAlignment = function (values) {\n\tvar createDescription = function (alignment) {\n\t\tvar _v0 = values(alignment);\n\t\tvar content = _v0.a;\n\t\tvar indiv = _v0.b;\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$contentName(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Content(alignment)),\n\t\t\t\tcontent),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self(alignment)),\n\t\t\t\t\t\tindiv)\n\t\t\t\t\t]))\n\t\t\t]);\n\t};\n\treturn $mdgriffith$elm_ui$Internal$Style$Batch(\n\t\tA2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));\n};\nvar $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray(\n\t[\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),\n\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.seButton),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightContent),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t])),\n\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\tfunction (alignment) {\n\t\t\tswitch (alignment.$) {\n\t\t\t\tcase 'Top':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Bottom':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Right':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'Left':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t]));\n\t\t\t\tcase 'CenterX':\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t]));\n\t\t\t\tdefault:\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t]));\n\t\t\t}\n\t\t})\n\t]);\nvar $mdgriffith$elm_ui$Internal$Style$gridAlignments = function (values) {\n\tvar createDescription = function (alignment) {\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self(alignment)),\n\t\t\t\t\t\tvalues(alignment))\n\t\t\t\t\t]))\n\t\t\t]);\n\t};\n\treturn $mdgriffith$elm_ui$Internal$Style$Batch(\n\t\tA2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));\n};\nvar $mdgriffith$elm_ui$Internal$Style$Above = {$: 'Above'};\nvar $mdgriffith$elm_ui$Internal$Style$Behind = {$: 'Behind'};\nvar $mdgriffith$elm_ui$Internal$Style$Below = {$: 'Below'};\nvar $mdgriffith$elm_ui$Internal$Style$OnLeft = {$: 'OnLeft'};\nvar $mdgriffith$elm_ui$Internal$Style$OnRight = {$: 'OnRight'};\nvar $mdgriffith$elm_ui$Internal$Style$Within = {$: 'Within'};\nvar $mdgriffith$elm_ui$Internal$Style$locations = function () {\n\tvar loc = $mdgriffith$elm_ui$Internal$Style$Above;\n\tvar _v0 = function () {\n\t\tswitch (loc.$) {\n\t\t\tcase 'Above':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'Below':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'OnRight':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'OnLeft':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tcase 'Within':\n\t\t\t\treturn _Utils_Tuple0;\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple0;\n\t\t}\n\t}();\n\treturn _List_fromArray(\n\t\t[$mdgriffith$elm_ui$Internal$Style$Above, $mdgriffith$elm_ui$Internal$Style$Below, $mdgriffith$elm_ui$Internal$Style$OnRight, $mdgriffith$elm_ui$Internal$Style$OnLeft, $mdgriffith$elm_ui$Internal$Style$Within, $mdgriffith$elm_ui$Internal$Style$Behind]);\n}();\nvar $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray(\n\t[\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t'html,body',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t_Utils_ap(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t_Utils_ap(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.imageContainer))),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'img',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'img',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus',\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.root),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$elDescription),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Batch(\n\t\t\t\tfunction (fn) {\n\t\t\t\t\treturn A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);\n\t\t\t\t}(\n\t\t\t\t\tfunction (loc) {\n\t\t\t\t\t\tswitch (loc.$) {\n\t\t\t\t\t\t\tcase 'Above':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'Below':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'OnRight':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'OnLeft':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tcase 'Within':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t\t\t\t'*',\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}))\n\t\t\t])),\n\t\tA2(\n\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.wrapped),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorPointer),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorText),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.capturePointerEvents),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transparent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.opaque),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':hover',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':hover',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':focus',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':focus',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':active',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':active',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transition),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t'transition',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t', ',\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tfunction (x) {\n\t\t\t\t\t\t\t\t\treturn x + ' 160ms';\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t['transform', 'opacity', 'filter', 'background-color', 'color', 'font-size']))))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbars),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clip),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipX),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipY),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderNone),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDashed),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDotted),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderSolid),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputText),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$elDescription),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.link),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX + ' ~ u'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX)),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY + ' ~ u'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY)),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t'.gp',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Supports,\n\t\t\t\t\t\t_Utils_Tuple2('display', 'grid'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2('display', 'grid')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$gridAlignments(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')\n\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.page),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ':first-child'),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Left)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Right)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\\\"\\\"'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\\\"\\\"'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t'::after',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t'::before',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$AllChildren,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Child,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$describeAlignment(\n\t\t\t\t\t\tfunction (alignment) {\n\t\t\t\t\t\t\tswitch (alignment.$) {\n\t\t\t\t\t\t\t\tcase 'Top':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'Left':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')\n\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn _Utils_Tuple2(_List_Nil, _List_Nil);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t'.hidden',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textThin),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraLight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textNormalWeight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textMedium),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textSemiBold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraBold),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textHeavy),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.italic),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textUnitalicized),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustify),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustifyAll),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textCenter),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textRight),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLeft),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Descriptor,\n\t\t\t\t'.modal',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')\n\t\t\t\t\t]))\n\t\t\t]))\n\t]);\nvar $mdgriffith$elm_ui$Internal$Style$fontVariant = function (_var) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t'.v-' + _var,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\\\"' + (_var + '\\\"'))\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t'.v-' + (_var + '-off'),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\\\"' + (_var + '\\\" 0'))\n\t\t\t\t]))\n\t\t]);\n};\nvar $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (x) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.border-' + $elm$core$String$fromInt(x),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'border-width',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(x) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 0, 6)),\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (i) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.font-size-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'font-size',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 8, 32)),\n\t\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (i) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t\t'.p-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Prop,\n\t\t\t\t\t\t\t'padding',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 0, 24)),\n\t\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t'.v-smcp',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Class,\n\t\t\t\t'.v-smcp-off',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')\n\t\t\t\t\t]))\n\t\t\t]),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),\n\t\t\t$mdgriffith$elm_ui$Internal$Style$fontVariant('frac')\n\t\t]));\nvar $mdgriffith$elm_ui$Internal$Style$explainer = '\\n.explain {\\n    border: 6px solid rgb(174, 121, 15) !important;\\n}\\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (' {\\n    border: 4px dashed rgb(0, 151, 167) !important;\\n}\\n\\n.ctr {\\n    border: none !important;\\n}\\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + ' {\\n    border: 4px dashed rgb(0, 151, 167) !important;\\n}\\n\\n')));\nvar $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\\ninput[type=\"search\"],\\ninput[type=\"search\"]::-webkit-search-decoration,\\ninput[type=\"search\"]::-webkit-search-cancel-button,\\ninput[type=\"search\"]::-webkit-search-results-button,\\ninput[type=\"search\"]::-webkit-search-results-decoration {\\n  -webkit-appearance:none;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$sliderReset = '\\ninput[type=range] {\\n  -webkit-appearance: none; \\n  background: transparent;\\n  position:absolute;\\n  left:0;\\n  top:0;\\n  z-index:10;\\n  width: 100%;\\n  outline: dashed 1px;\\n  height: 100%;\\n  opacity: 0;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$thumbReset = '\\ninput[type=range]::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range]::-moz-range-thumb {\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range]::-ms-thumb {\\n    opacity: 0.5;\\n    width: 80px;\\n    height: 80px;\\n    background-color: black;\\n    border:none;\\n    border-radius: 5px;\\n}\\ninput[type=range][orient=vertical]{\\n    writing-mode: bt-lr; /* IE */\\n    -webkit-appearance: slider-vertical;  /* WebKit */\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$trackReset = '\\ninput[type=range]::-moz-range-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\ninput[type=range]::-ms-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\ninput[type=range]::-webkit-slider-runnable-track {\\n    background: transparent;\\n    cursor: pointer;\\n}\\n';\nvar $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));\nvar $mdgriffith$elm_ui$Internal$Style$Intermediate = function (a) {\n\treturn {$: 'Intermediate', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(\n\tfunction (selector, closing) {\n\t\treturn $mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\t{closing: closing, others: _List_Nil, props: _List_Nil, selector: selector});\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$renderRules = F2(\n\tfunction (_v0, rulesToRender) {\n\t\tvar parent = _v0.a;\n\t\tvar generateIntermediates = F2(\n\t\t\tfunction (rule, rendered) {\n\t\t\t\tswitch (rule.$) {\n\t\t\t\t\tcase 'Prop':\n\t\t\t\t\t\tvar name = rule.a;\n\t\t\t\t\t\tvar val = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tprops: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t_Utils_Tuple2(name, val),\n\t\t\t\t\t\t\t\t\trendered.props)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Supports':\n\t\t\t\t\t\tvar _v2 = rule.a;\n\t\t\t\t\t\tvar prop = _v2.a;\n\t\t\t\t\t\tvar value = _v2.b;\n\t\t\t\t\t\tvar props = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\t\t\t\t\t\t\t\t{closing: '\\n}', others: _List_Nil, props: props, selector: '@supports (' + (prop + (':' + (value + (') {' + parent.selector))))}),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Adjacent':\n\t\t\t\t\t\tvar selector = rule.a;\n\t\t\t\t\t\tvar adjRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' + ' + selector), ''),\n\t\t\t\t\t\t\t\t\t\tadjRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Child':\n\t\t\t\t\t\tvar child = rule.a;\n\t\t\t\t\t\tvar childRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' > ' + child), ''),\n\t\t\t\t\t\t\t\t\t\tchildRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'AllChildren':\n\t\t\t\t\t\tvar child = rule.a;\n\t\t\t\t\t\tvar childRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' ' + child), ''),\n\t\t\t\t\t\t\t\t\t\tchildRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Descriptor':\n\t\t\t\t\t\tvar descriptor = rule.a;\n\t\t\t\t\t\tvar descriptorRules = rule.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$emptyIntermediate,\n\t\t\t\t\t\t\t\t\t\t\t_Utils_ap(parent.selector, descriptor),\n\t\t\t\t\t\t\t\t\t\t\t''),\n\t\t\t\t\t\t\t\t\t\tdescriptorRules),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar batched = rule.a;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trendered,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tothers: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector, ''),\n\t\t\t\t\t\t\t\t\t\tbatched),\n\t\t\t\t\t\t\t\t\trendered.others)\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\treturn $mdgriffith$elm_ui$Internal$Style$Intermediate(\n\t\t\tA3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender));\n\t});\nvar $mdgriffith$elm_ui$Internal$Style$renderCompact = function (styleClasses) {\n\tvar renderValues = function (values) {\n\t\treturn $elm$core$String$concat(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (_v3) {\n\t\t\t\t\tvar x = _v3.a;\n\t\t\t\t\tvar y = _v3.b;\n\t\t\t\t\treturn x + (':' + (y + ';'));\n\t\t\t\t},\n\t\t\t\tvalues));\n\t};\n\tvar renderClass = function (rule) {\n\t\tvar _v2 = rule.props;\n\t\tif (!_v2.b) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\treturn rule.selector + ('{' + (renderValues(rule.props) + (rule.closing + '}')));\n\t\t}\n\t};\n\tvar renderIntermediate = function (_v0) {\n\t\tvar rule = _v0.a;\n\t\treturn _Utils_ap(\n\t\t\trenderClass(rule),\n\t\t\t$elm$core$String$concat(\n\t\t\t\tA2($elm$core$List$map, renderIntermediate, rule.others)));\n\t};\n\treturn $elm$core$String$concat(\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\trenderIntermediate,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_v1, existing) {\n\t\t\t\t\t\tvar name = _v1.a;\n\t\t\t\t\t\tvar styleRules = _v1.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$renderRules,\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''),\n\t\t\t\t\t\t\t\tstyleRules),\n\t\t\t\t\t\t\texisting);\n\t\t\t\t\t}),\n\t\t\t\t_List_Nil,\n\t\t\t\tstyleClasses)));\n};\nvar $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap(\n\t$mdgriffith$elm_ui$Internal$Style$overrides,\n\t$mdgriffith$elm_ui$Internal$Style$renderCompact(\n\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $mdgriffith$elm_ui$Internal$Model$staticRoot = function (opts) {\n\tvar _v0 = opts.mode;\n\tswitch (_v0.$) {\n\t\tcase 'Layout':\n\t\t\treturn A3(\n\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t'div',\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t'style',\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\tcase 'NoStaticStyleSheet':\n\t\t\treturn $elm$virtual_dom$VirtualDom$text('');\n\t\tdefault:\n\t\t\treturn A3(\n\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t'elm-ui-static-rules',\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t\t'rules',\n\t\t\t\t\t\t$elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil);\n\t}\n};\nvar $elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$fontName = function (font) {\n\tswitch (font.$) {\n\t\tcase 'Serif':\n\t\t\treturn 'serif';\n\t\tcase 'SansSerif':\n\t\t\treturn 'sans-serif';\n\t\tcase 'Monospace':\n\t\t\treturn 'monospace';\n\t\tcase 'Typeface':\n\t\t\tvar name = font.a;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tcase 'ImportFont':\n\t\t\tvar name = font.a;\n\t\t\tvar url = font.b;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tdefault:\n\t\t\tvar name = font.a.name;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function (_var) {\n\tswitch (_var.$) {\n\t\tcase 'VariantActive':\n\t\t\tvar name = _var.a;\n\t\t\treturn name === 'smcp';\n\t\tcase 'VariantOff':\n\t\t\tvar name = _var.a;\n\t\t\treturn false;\n\t\tdefault:\n\t\t\tvar name = _var.a;\n\t\t\tvar index = _var.b;\n\t\t\treturn (name === 'smcp') && (index === 1);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function (typeface) {\n\tif (typeface.$ === 'FontWith') {\n\t\tvar font = typeface.a;\n\t\treturn A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.variants);\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderProps = F3(\n\tfunction (force, _v0, existing) {\n\t\tvar key = _v0.a;\n\t\tvar val = _v0.b;\n\t\treturn force ? (existing + ('\\n  ' + (key + (': ' + (val + ' !important;'))))) : (existing + ('\\n  ' + (key + (': ' + (val + ';')))));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(\n\tfunction (options, maybePseudo, selector, props) {\n\t\tif (maybePseudo.$ === 'Nothing') {\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tselector + ('{' + (A3(\n\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t'',\n\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t]);\n\t\t} else {\n\t\t\tvar pseudo = maybePseudo.a;\n\t\t\tswitch (pseudo.$) {\n\t\t\t\tcase 'Hover':\n\t\t\t\t\tvar _v2 = options.hover;\n\t\t\t\t\tswitch (_v2.$) {\n\t\t\t\t\t\tcase 'NoHover':\n\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\tcase 'ForceHover':\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tselector + ('-hv {' + (A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(true),\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tselector + ('-hv:hover {' + (A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\tcase 'Focus':\n\t\t\t\t\tvar renderedProps = A3(\n\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tprops);\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[selector + ('-fs:focus {' + (renderedProps + '\\n}')), ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (':focus ' + (selector + '-fs  {')))) + (renderedProps + '\\n}'), (selector + '-fs:focus-within {') + (renderedProps + '\\n}'), ('.focusable-parent:focus ~ ' + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + (selector + '-fs {'))))) + (renderedProps + '\\n}')]);\n\t\t\t\tdefault:\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tselector + ('-act:active {' + (A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderProps(false),\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\tprops) + '\\n}'))\n\t\t\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderVariant = function (_var) {\n\tswitch (_var.$) {\n\t\tcase 'VariantActive':\n\t\t\tvar name = _var.a;\n\t\t\treturn '\\\"' + (name + '\\\"');\n\t\tcase 'VariantOff':\n\t\t\tvar name = _var.a;\n\t\t\treturn '\\\"' + (name + '\\\" 0');\n\t\tdefault:\n\t\t\tvar name = _var.a;\n\t\t\tvar index = _var.b;\n\t\t\treturn '\\\"' + (name + ('\\\" ' + $elm$core$String$fromInt(index)));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderVariants = function (typeface) {\n\tif (typeface.$ === 'FontWith') {\n\t\tvar font = typeface.a;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t', ',\n\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.variants)));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$transformValue = function (transform) {\n\tswitch (transform.$) {\n\t\tcase 'Untransformed':\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\tcase 'Moved':\n\t\t\tvar _v1 = transform.a;\n\t\t\tvar x = _v1.a;\n\t\t\tvar y = _v1.b;\n\t\t\tvar z = _v1.c;\n\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t'translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));\n\t\tdefault:\n\t\t\tvar _v2 = transform.a;\n\t\t\tvar tx = _v2.a;\n\t\t\tvar ty = _v2.b;\n\t\t\tvar tz = _v2.c;\n\t\t\tvar _v3 = transform.b;\n\t\t\tvar sx = _v3.a;\n\t\t\tvar sy = _v3.b;\n\t\t\tvar sz = _v3.c;\n\t\t\tvar _v4 = transform.c;\n\t\t\tvar ox = _v4.a;\n\t\t\tvar oy = _v4.b;\n\t\t\tvar oz = _v4.c;\n\t\t\tvar angle = transform.d;\n\t\t\tvar translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));\n\t\t\tvar scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));\n\t\t\tvar rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));\n\t\t\treturn $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(\n\tfunction (options, rule, maybePseudo) {\n\t\tswitch (rule.$) {\n\t\t\tcase 'Style':\n\t\t\t\tvar selector = rule.a;\n\t\t\t\tvar props = rule.b;\n\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);\n\t\t\tcase 'Shadows':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + name,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)\n\t\t\t\t\t\t]));\n\t\t\tcase 'Transparency':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar transparency = rule.b;\n\t\t\t\tvar opacity = A2(\n\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t0,\n\t\t\t\t\tA2($elm$core$Basics$min, 1, 1 - transparency));\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + name,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'opacity',\n\t\t\t\t\t\t\t$elm$core$String$fromFloat(opacity))\n\t\t\t\t\t\t]));\n\t\t\tcase 'FontSize':\n\t\t\t\tvar i = rule.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.font-size-' + $elm$core$String$fromInt(i),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'font-size',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'px')\n\t\t\t\t\t\t]));\n\t\t\tcase 'FontFamily':\n\t\t\t\tvar name = rule.a;\n\t\t\t\tvar typefaces = rule.b;\n\t\t\t\tvar features = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t', ',\n\t\t\t\t\tA2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));\n\t\t\t\tvar families = _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t'font-family',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t', ',\n\t\t\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t'font-variant',\n\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')\n\t\t\t\t\t]);\n\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);\n\t\t\tcase 'Single':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\tvar val = rule.c;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + _class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)\n\t\t\t\t\t\t]));\n\t\t\tcase 'Colored':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar prop = rule.b;\n\t\t\t\tvar color = rule.c;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t'.' + _class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\tprop,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$formatColor(color))\n\t\t\t\t\t\t]));\n\t\t\tcase 'SpacingStyle':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar x = rule.b;\n\t\t\t\tvar y = rule.c;\n\t\t\t\tvar yPx = $elm$core$String$fromInt(y) + 'px';\n\t\t\t\tvar xPx = $elm$core$String$fromInt(x) + 'px';\n\t\t\t\tvar single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.single;\n\t\t\t\tvar row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.row;\n\t\t\t\tvar wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.wrapped + row);\n\t\t\t\tvar right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight;\n\t\t\t\tvar paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph;\n\t\t\t\tvar page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.page;\n\t\t\t\tvar left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft;\n\t\t\t\tvar halfY = $elm$core$String$fromFloat(y / 2) + 'px';\n\t\t\t\tvar halfX = $elm$core$String$fromFloat(x / 2) + 'px';\n\t\t\t\tvar column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.column;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\tvar any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.any;\n\t\t\t\treturn $elm$core$List$concat(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (row + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (wrappedRow + (' > ' + any)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (column + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + (any + (' + ' + any)))),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + left)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (page + (' > ' + right)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_Utils_ap(_class, paragraph),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t'textarea' + (any + _class),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + (' > ' + left)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + (' > ' + right)),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + '::after'),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\\'\\''),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'margin-top',\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t\t_class + (paragraph + '::before'),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\\'\\''),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t\t\t'margin-bottom',\n\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tcase 'PaddingStyle':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar top = rule.b;\n\t\t\t\tvar right = rule.c;\n\t\t\t\tvar bottom = rule.d;\n\t\t\t\tvar left = rule.e;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t_class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'padding',\n\t\t\t\t\t\t\t$elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))\n\t\t\t\t\t\t]));\n\t\t\tcase 'BorderWidth':\n\t\t\t\tvar cls = rule.a;\n\t\t\t\tvar top = rule.b;\n\t\t\t\tvar right = rule.c;\n\t\t\t\tvar bottom = rule.d;\n\t\t\t\tvar left = rule.e;\n\t\t\t\tvar _class = '.' + cls;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\toptions,\n\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t_class,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Property,\n\t\t\t\t\t\t\t'border-width',\n\t\t\t\t\t\t\t$elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))\n\t\t\t\t\t\t]));\n\t\t\tcase 'GridTemplateStyle':\n\t\t\t\tvar template = rule.a;\n\t\t\t\tvar toGridLengthHelper = F3(\n\t\t\t\t\tfunction (minimum, maximum, x) {\n\t\t\t\t\t\ttoGridLengthHelper:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tswitch (x.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = x.a;\n\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromInt(px) + 'px';\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar _v2 = _Utils_Tuple2(minimum, maximum);\n\t\t\t\t\t\t\t\t\tif (_v2.a.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\tif (_v2.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v4 = _v2.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'max-content';\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar _v6 = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v2.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_v2.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v2.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v5 = _v2.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + 'max-content)'));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v2.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v2.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar i = x.a;\n\t\t\t\t\t\t\t\t\tvar _v7 = _Utils_Tuple2(minimum, maximum);\n\t\t\t\t\t\t\t\t\tif (_v7.a.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\tif (_v7.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v9 = _v7.b;\n\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromInt(i) + 'fr';\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar _v11 = _v7.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v7.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tif (_v7.b.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v7.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar _v10 = _v7.b;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + ('fr' + 'fr)'))));\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar minSize = _v7.a.a;\n\t\t\t\t\t\t\t\t\t\t\tvar maxSize = _v7.b.a;\n\t\t\t\t\t\t\t\t\t\t\treturn 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase 'Min':\n\t\t\t\t\t\t\t\t\tvar m = x.a;\n\t\t\t\t\t\t\t\t\tvar len = x.b;\n\t\t\t\t\t\t\t\t\tvar $temp$minimum = $elm$core$Maybe$Just(m),\n\t\t\t\t\t\t\t\t\t\t$temp$maximum = maximum,\n\t\t\t\t\t\t\t\t\t\t$temp$x = len;\n\t\t\t\t\t\t\t\t\tminimum = $temp$minimum;\n\t\t\t\t\t\t\t\t\tmaximum = $temp$maximum;\n\t\t\t\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\t\t\t\tcontinue toGridLengthHelper;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar m = x.a;\n\t\t\t\t\t\t\t\t\tvar len = x.b;\n\t\t\t\t\t\t\t\t\tvar $temp$minimum = minimum,\n\t\t\t\t\t\t\t\t\t\t$temp$maximum = $elm$core$Maybe$Just(m),\n\t\t\t\t\t\t\t\t\t\t$temp$x = len;\n\t\t\t\t\t\t\t\t\tminimum = $temp$minimum;\n\t\t\t\t\t\t\t\t\tmaximum = $temp$maximum;\n\t\t\t\t\t\t\t\t\tx = $temp$x;\n\t\t\t\t\t\t\t\t\tcontinue toGridLengthHelper;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar toGridLength = function (x) {\n\t\t\t\t\treturn A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);\n\t\t\t\t};\n\t\t\t\tvar xSpacing = toGridLength(template.spacing.a);\n\t\t\t\tvar ySpacing = toGridLength(template.spacing.b);\n\t\t\t\tvar rows = function (x) {\n\t\t\t\t\treturn 'grid-template-rows: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.rows)));\n\t\t\t\tvar msRows = function (x) {\n\t\t\t\t\treturn '-ms-grid-rows: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\tySpacing,\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar msColumns = function (x) {\n\t\t\t\t\treturn '-ms-grid-columns: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\tySpacing,\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar gapY = 'grid-row-gap:' + (toGridLength(template.spacing.b) + ';');\n\t\t\t\tvar gapX = 'grid-column-gap:' + (toGridLength(template.spacing.a) + ';');\n\t\t\t\tvar columns = function (x) {\n\t\t\t\t\treturn 'grid-template-columns: ' + (x + ';');\n\t\t\t\t}(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\tA2($elm$core$List$map, toGridLength, template.columns)));\n\t\t\t\tvar _class = '.grid-rows-' + (A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t'-',\n\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t'-',\n\t\t\t\t\tA2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));\n\t\t\t\tvar modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));\n\t\t\t\tvar supports = '@supports (display:grid) {' + (modernGrid + '}');\n\t\t\t\tvar base = _class + ('{' + (msColumns + (msRows + '}')));\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[base, supports]);\n\t\t\tcase 'GridPosition':\n\t\t\t\tvar position = rule.a;\n\t\t\t\tvar msPosition = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'-ms-grid-row: ' + ($elm$core$String$fromInt(position.row) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.height) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-column: ' + ($elm$core$String$fromInt(position.col) + ';'),\n\t\t\t\t\t\t\t'-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.width) + ';')\n\t\t\t\t\t\t]));\n\t\t\t\tvar modernPosition = A2(\n\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t' ',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'grid-row: ' + ($elm$core$String$fromInt(position.row) + (' / ' + ($elm$core$String$fromInt(position.row + position.height) + ';'))),\n\t\t\t\t\t\t\t'grid-column: ' + ($elm$core$String$fromInt(position.col) + (' / ' + ($elm$core$String$fromInt(position.col + position.width) + ';')))\n\t\t\t\t\t\t]));\n\t\t\t\tvar _class = '.grid-pos-' + ($elm$core$String$fromInt(position.row) + ('-' + ($elm$core$String$fromInt(position.col) + ('-' + ($elm$core$String$fromInt(position.width) + ('-' + $elm$core$String$fromInt(position.height)))))));\n\t\t\t\tvar modernGrid = _class + ('{' + (modernPosition + '}'));\n\t\t\t\tvar supports = '@supports (display:grid) {' + (modernGrid + '}');\n\t\t\t\tvar base = _class + ('{' + (msPosition + '}'));\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[base, supports]);\n\t\t\tcase 'PseudoSelector':\n\t\t\t\tvar _class = rule.a;\n\t\t\t\tvar styles = rule.b;\n\t\t\t\tvar renderPseudoRule = function (style) {\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyleRule,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t$elm$core$Maybe$Just(_class));\n\t\t\t\t};\n\t\t\t\treturn A2($elm$core$List$concatMap, renderPseudoRule, styles);\n\t\t\tdefault:\n\t\t\t\tvar transform = rule.a;\n\t\t\t\tvar val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);\n\t\t\t\tvar _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);\n\t\t\t\tvar _v12 = _Utils_Tuple2(_class, val);\n\t\t\t\tif ((_v12.a.$ === 'Just') && (_v12.b.$ === 'Just')) {\n\t\t\t\t\tvar cls = _v12.a.a;\n\t\t\t\t\tvar v = _v12.b.a;\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderStyle,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmaybePseudo,\n\t\t\t\t\t\t'.' + cls,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)\n\t\t\t\t\t\t\t]));\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(\n\tfunction (options, stylesheet) {\n\t\treturn $elm$json$Json$Encode$object(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (style) {\n\t\t\t\t\tvar styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$getStyleName(style),\n\t\t\t\t\t\tA2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));\n\t\t\t\t},\n\t\t\t\tstylesheet));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$bracket = F2(\n\tfunction (selector, rules) {\n\t\tvar renderPair = function (_v0) {\n\t\t\tvar name = _v0.a;\n\t\t\tvar val = _v0.b;\n\t\t\treturn name + (': ' + (val + ';'));\n\t\t};\n\t\treturn selector + (' {' + (A2(\n\t\t\t$elm$core$String$join,\n\t\t\t'',\n\t\t\tA2($elm$core$List$map, renderPair, rules)) + '}'));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$fontRule = F3(\n\tfunction (name, modifier, _v0) {\n\t\tvar parentAdj = _v0.a;\n\t\tvar textAdjustment = _v0.b;\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))), textAdjustment)\n\t\t\t]);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(\n\tfunction (fontToAdjust, _v0, otherFontName) {\n\t\tvar full = _v0.a;\n\t\tvar capital = _v0.b;\n\t\tvar name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\t_Utils_ap(\n\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital, capital),\n\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.fullSize, full)));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(\n\tfunction (fontToAdjust, otherFontName) {\n\t\tvar name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));\n\t\treturn A2(\n\t\t\t$elm$core$String$join,\n\t\t\t' ',\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$bracket,\n\t\t\t\t\t'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital))))))),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('line-height', '1')\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$bracket,\n\t\t\t\t\t'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2('vertical-align', '0'),\n\t\t\t\t\t\t\t_Utils_Tuple2('line-height', '1')\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$adjust = F3(\n\tfunction (size, height, vertical) {\n\t\treturn {height: height / size, size: size, vertical: vertical};\n\t});\nvar $elm$core$List$maximum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$List$minimum = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function (adjustment) {\n\tvar lines = _List_fromArray(\n\t\t[adjustment.capital, adjustment.baseline, adjustment.descender, adjustment.lowercase]);\n\tvar lineHeight = 1.5;\n\tvar normalDescender = (lineHeight - 1) / 2;\n\tvar oldMiddle = lineHeight / 2;\n\tvar descender = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.descender,\n\t\t$elm$core$List$minimum(lines));\n\tvar newBaseline = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.baseline,\n\t\t$elm$core$List$minimum(\n\t\t\tA2(\n\t\t\t\t$elm$core$List$filter,\n\t\t\t\tfunction (x) {\n\t\t\t\t\treturn !_Utils_eq(x, descender);\n\t\t\t\t},\n\t\t\t\tlines)));\n\tvar base = lineHeight;\n\tvar ascender = A2(\n\t\t$elm$core$Maybe$withDefault,\n\t\tadjustment.capital,\n\t\t$elm$core$List$maximum(lines));\n\tvar capitalSize = 1 / (ascender - newBaseline);\n\tvar capitalVertical = 1 - ascender;\n\tvar fullSize = 1 / (ascender - descender);\n\tvar fullVertical = 1 - ascender;\n\tvar newCapitalMiddle = ((ascender - newBaseline) / 2) + newBaseline;\n\tvar newFullMiddle = ((ascender - descender) / 2) + descender;\n\treturn {\n\t\tcapital: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),\n\t\tfull: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)\n\t};\n};\nvar $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function (converted) {\n\treturn _Utils_Tuple2(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2('display', 'block')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t_Utils_Tuple2('display', 'inline-block'),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'line-height',\n\t\t\t\t$elm$core$String$fromFloat(converted.height)),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'vertical-align',\n\t\t\t\t$elm$core$String$fromFloat(converted.vertical) + 'em'),\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t'font-size',\n\t\t\t\t$elm$core$String$fromFloat(converted.size) + 'em')\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function (typefaces) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (face, found) {\n\t\t\t\tif (found.$ === 'Nothing') {\n\t\t\t\t\tif (face.$ === 'FontWith') {\n\t\t\t\t\t\tvar _with = face.a;\n\t\t\t\t\t\tvar _v2 = _with.adjustment;\n\t\t\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn found;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar adjustment = _v2.a;\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(\n\t\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\t\treturn $.full;\n\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(\n\t\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\t\treturn $.capital;\n\t\t\t\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn found;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t}),\n\t\t$elm$core$Maybe$Nothing,\n\t\ttypefaces);\n};\nvar $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function (rules) {\n\tvar withImport = function (font) {\n\t\tif (font.$ === 'ImportFont') {\n\t\t\tvar url = font.b;\n\t\t\treturn $elm$core$Maybe$Just('@import url(\\'' + (url + '\\');'));\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t};\n\tvar fontImports = function (_v2) {\n\t\tvar name = _v2.a;\n\t\tvar typefaces = _v2.b;\n\t\tvar imports = A2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$filterMap, withImport, typefaces));\n\t\treturn imports;\n\t};\n\tvar allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);\n\tvar fontAdjustments = function (_v1) {\n\t\tvar name = _v1.a;\n\t\tvar typefaces = _v1.b;\n\t\tvar _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name),\n\t\t\t\t\tallNames));\n\t\t} else {\n\t\t\tvar adjustment = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$String$join,\n\t\t\t\t'',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment),\n\t\t\t\t\tallNames));\n\t\t}\n\t};\n\treturn _Utils_ap(\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$map, fontImports, rules)),\n\t\tA2(\n\t\t\t$elm$core$String$join,\n\t\t\t'\\n',\n\t\t\tA2($elm$core$List$map, fontAdjustments, rules)));\n};\nvar $mdgriffith$elm_ui$Internal$Model$topLevelValue = function (rule) {\n\tif (rule.$ === 'FontFamily') {\n\t\tvar name = rule.a;\n\t\tvar typefaces = rule.b;\n\t\treturn $elm$core$Maybe$Just(\n\t\t\t_Utils_Tuple2(name, typefaces));\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(\n\tfunction (options, stylesheet) {\n\t\tvar combine = F2(\n\t\t\tfunction (style, rendered) {\n\t\t\t\treturn {\n\t\t\t\t\trules: _Utils_ap(\n\t\t\t\t\t\trendered.rules,\n\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),\n\t\t\t\t\ttopLevel: function () {\n\t\t\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);\n\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\treturn rendered.topLevel;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar topLevel = _v1.a;\n\t\t\t\t\t\t\treturn A2($elm$core$List$cons, topLevel, rendered.topLevel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}()\n\t\t\t\t};\n\t\t\t});\n\t\tvar _v0 = A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tcombine,\n\t\t\t{rules: _List_Nil, topLevel: _List_Nil},\n\t\t\tstylesheet);\n\t\tvar topLevel = _v0.topLevel;\n\t\tvar rules = _v0.rules;\n\t\treturn _Utils_ap(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel),\n\t\t\t$elm$core$String$concat(rules));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(\n\tfunction (options, styleSheet) {\n\t\tvar _v0 = options.mode;\n\t\tswitch (_v0.$) {\n\t\t\tcase 'Layout':\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'div',\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t\t'style',\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text(\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tcase 'NoStaticStyleSheet':\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'div',\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\t\t'style',\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$text(\n\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t'elm-ui-rules',\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$property,\n\t\t\t\t\t\t\t'rules',\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_Nil);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(\n\tfunction (_static, opts, styles, children) {\n\t\tvar dynamicStyleSheet = A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toStyleSheet,\n\t\t\topts,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$reduceStyles,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),\n\t\t\t\tstyles).b);\n\t\treturn _static ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t'static-stylesheet',\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$staticRoot(opts)),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),\n\t\t\t\tchildren)) : A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),\n\t\t\tchildren);\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$embedWith = F4(\n\tfunction (_static, opts, styles, children) {\n\t\tvar dynamicStyleSheet = A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toStyleSheet,\n\t\t\topts,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$reduceStyles,\n\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t$elm$core$Set$empty,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),\n\t\t\t\tstyles).b);\n\t\treturn _static ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$staticRoot(opts),\n\t\t\tA2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);\nvar $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);\nvar $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {\n\treturn _VirtualDom_keyedNode(\n\t\t_VirtualDom_noScript(tag));\n};\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $mdgriffith$elm_ui$Internal$Flag$present = F2(\n\tfunction (myFlag, _v0) {\n\t\tvar fieldOne = _v0.a;\n\t\tvar fieldTwo = _v0.b;\n\t\tif (myFlag.$ === 'Flag') {\n\t\t\tvar first = myFlag.a;\n\t\t\treturn _Utils_eq(first & fieldOne, first);\n\t\t} else {\n\t\t\tvar second = myFlag.a;\n\t\t\treturn _Utils_eq(second & fieldTwo, second);\n\t\t}\n\t});\nvar $elm$html$Html$s = _VirtualDom_node('s');\nvar $elm$html$Html$u = _VirtualDom_node('u');\nvar $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);\nvar $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);\nvar $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(\n\tfunction (has, node, attributes, children, embedMode, parentContext) {\n\t\tvar createNode = F2(\n\t\t\tfunction (nodeName, attrs) {\n\t\t\t\tif (children.$ === 'Keyed') {\n\t\t\t\t\tvar keyed = children.a;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$keyedNode,\n\t\t\t\t\t\tnodeName,\n\t\t\t\t\t\tattrs,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (embedMode.$) {\n\t\t\t\t\t\t\t\tcase 'NoStyleSheet':\n\t\t\t\t\t\t\t\t\treturn keyed;\n\t\t\t\t\t\t\t\tcase 'OnlyDynamic':\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}());\n\t\t\t\t} else {\n\t\t\t\t\tvar unkeyed = children.a;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (nodeName) {\n\t\t\t\t\t\t\t\tcase 'div':\n\t\t\t\t\t\t\t\t\treturn $elm$html$Html$div;\n\t\t\t\t\t\t\t\tcase 'p':\n\t\t\t\t\t\t\t\t\treturn $elm$html$Html$p;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn $elm$virtual_dom$VirtualDom$node(nodeName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\tattrs,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (embedMode.$) {\n\t\t\t\t\t\t\t\tcase 'NoStyleSheet':\n\t\t\t\t\t\t\t\t\treturn unkeyed;\n\t\t\t\t\t\t\t\tcase 'OnlyDynamic':\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar opts = embedMode.a;\n\t\t\t\t\t\t\t\t\tvar styles = embedMode.b;\n\t\t\t\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}());\n\t\t\t\t}\n\t\t\t});\n\t\tvar html = function () {\n\t\t\tswitch (node.$) {\n\t\t\t\tcase 'Generic':\n\t\t\t\t\treturn A2(createNode, 'div', attributes);\n\t\t\t\tcase 'NodeName':\n\t\t\t\t\tvar nodeName = node.a;\n\t\t\t\t\treturn A2(createNode, nodeName, attributes);\n\t\t\t\tdefault:\n\t\t\t\t\tvar nodeName = node.a;\n\t\t\t\t\tvar internal = node.b;\n\t\t\t\t\treturn A3(\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$node,\n\t\t\t\t\t\tnodeName,\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tcreateNode,\n\t\t\t\t\t\t\t\tinternal,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]));\n\t\t\t}\n\t\t}();\n\t\tswitch (parentContext.$) {\n\t\t\tcase 'AsRow':\n\t\t\t\treturn (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2(\n\t\t\t\t\t$elm$html$Html$u,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2(\n\t\t\t\t\t$elm$html$Html$s,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : html));\n\t\t\tcase 'AsColumn':\n\t\t\t\treturn (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2(\n\t\t\t\t\t$elm$html$Html$s,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2(\n\t\t\t\t\t$elm$html$Html$u,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom])))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[html])) : html));\n\t\t\tdefault:\n\t\t\t\treturn html;\n\t\t}\n\t});\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthContent + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightContent)))));\nvar $mdgriffith$elm_ui$Internal$Model$textElement = function (str) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(str)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFill + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightFill)))));\nvar $mdgriffith$elm_ui$Internal$Model$textElementFill = function (str) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(str)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Internal$Model$createElement = F3(\n\tfunction (context, children, rendered) {\n\t\tvar gatherKeyed = F2(\n\t\t\tfunction (_v8, _v9) {\n\t\t\t\tvar key = _v8.a;\n\t\t\t\tvar child = _v8.b;\n\t\t\t\tvar htmls = _v9.a;\n\t\t\t\tvar existingStyles = _v9.b;\n\t\t\t\tswitch (child.$) {\n\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\tvar html = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\thtml(context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\thtml(context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tcase 'Styled':\n\t\t\t\t\t\tvar styled = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));\n\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\tvar str = child.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(htmls, existingStyles);\n\t\t\t\t}\n\t\t\t});\n\t\tvar gather = F2(\n\t\t\tfunction (child, _v6) {\n\t\t\t\tvar htmls = _v6.a;\n\t\t\t\tvar existingStyles = _v6.b;\n\t\t\t\tswitch (child.$) {\n\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\tvar html = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\thtml(context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\thtml(context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tcase 'Styled':\n\t\t\t\t\t\tvar styled = child.a;\n\t\t\t\t\t\treturn _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\tA2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\t$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));\n\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\tvar str = child.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str),\n\t\t\t\t\t\t\t\thtmls),\n\t\t\t\t\t\t\texistingStyles);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple2(htmls, existingStyles);\n\t\t\t\t}\n\t\t\t});\n\t\tif (children.$ === 'Keyed') {\n\t\t\tvar keyedChildren = children.a;\n\t\t\tvar _v1 = A3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tgatherKeyed,\n\t\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\t\tkeyedChildren);\n\t\t\tvar keyed = _v1.a;\n\t\t\tvar styles = _v1.b;\n\t\t\tvar newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);\n\t\t\tif (!newStyles.b) {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA5(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Keyed(\n\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));\n\t\t\t} else {\n\t\t\t\tvar allStyles = newStyles;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Keyed(\n\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children))),\n\t\t\t\t\t\tstyles: allStyles\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tvar unkeyedChildren = children.a;\n\t\t\tvar _v3 = A3(\n\t\t\t\t$elm$core$List$foldr,\n\t\t\t\tgather,\n\t\t\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\t\t\tunkeyedChildren);\n\t\t\tvar unkeyed = _v3.a;\n\t\t\tvar styles = _v3.b;\n\t\t\tvar newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);\n\t\t\tif (!newStyles.b) {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA5(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));\n\t\t\t} else {\n\t\t\t\tvar allStyles = newStyles;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$finalizeNode,\n\t\t\t\t\t\t\trendered.has,\n\t\t\t\t\t\t\trendered.node,\n\t\t\t\t\t\t\trendered.attributes,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children))),\n\t\t\t\t\t\tstyles: allStyles\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Transform = function (a) {\n\treturn {$: 'Transform', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Field', a: a, b: b};\n\t});\nvar $elm$core$Bitwise$or = _Bitwise_or;\nvar $mdgriffith$elm_ui$Internal$Flag$add = F2(\n\tfunction (myFlag, _v0) {\n\t\tvar one = _v0.a;\n\t\tvar two = _v0.b;\n\t\tif (myFlag.$ === 'Flag') {\n\t\t\tvar first = myFlag.a;\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);\n\t\t} else {\n\t\t\tvar second = myFlag.a;\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function (a) {\n\treturn {$: 'ChildrenBehind', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'ChildrenBehindAndInFront', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function (a) {\n\treturn {$: 'ChildrenInFront', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(\n\tfunction (location, elem) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tswitch (location.$) {\n\t\t\t\t\t\t\tcase 'Above':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.above]));\n\t\t\t\t\t\t\tcase 'Below':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.below]));\n\t\t\t\t\t\t\tcase 'OnRight':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onRight]));\n\t\t\t\t\t\t\tcase 'OnLeft':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onLeft]));\n\t\t\t\t\t\t\tcase 'InFront':\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.inFront]));\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.behind]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}())\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tfunction () {\n\t\t\t\t\tswitch (elem.$) {\n\t\t\t\t\t\tcase 'Empty':\n\t\t\t\t\t\t\treturn $elm$virtual_dom$VirtualDom$text('');\n\t\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\t\tvar str = elem.a;\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement(str);\n\t\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\t\tvar html = elem.a;\n\t\t\t\t\t\t\treturn html($mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar styled = elem.a;\n\t\t\t\t\t\t\treturn A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(\n\tfunction (location, elem, existing) {\n\t\tvar nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);\n\t\tswitch (existing.$) {\n\t\t\tcase 'NoNearbyChildren':\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t}\n\t\t\tcase 'ChildrenBehind':\n\t\t\t\tvar existingBehind = existing.a;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingBehind));\n\t\t\t\t} else {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\texistingBehind,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]));\n\t\t\t\t}\n\t\t\tcase 'ChildrenInFront':\n\t\t\t\tvar existingInFront = existing.a;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[nearby]),\n\t\t\t\t\t\texistingInFront);\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingInFront));\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar existingBehind = existing.a;\n\t\t\t\tvar existingInFront = existing.b;\n\t\t\t\tif (location.$ === 'Behind') {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingBehind),\n\t\t\t\t\t\texistingInFront);\n\t\t\t\t} else {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,\n\t\t\t\t\t\texistingBehind,\n\t\t\t\t\t\tA2($elm$core$List$cons, nearby, existingInFront));\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Embedded = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Embedded', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$NodeName = function (a) {\n\treturn {$: 'NodeName', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(\n\tfunction (newNode, old) {\n\t\tswitch (old.$) {\n\t\t\tcase 'Generic':\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);\n\t\t\tcase 'NodeName':\n\t\t\t\tvar name = old.a;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);\n\t\t\tdefault:\n\t\t\t\tvar x = old.a;\n\t\t\t\tvar y = old.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$alignXName = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Left':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft);\n\t\tcase 'Right':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight);\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$alignYName = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Top':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignTop);\n\t\tcase 'Bottom':\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignBottom);\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);\n\t}\n};\nvar $elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 'FullTransform', a: a, b: b, c: c, d: d};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Moved = function (a) {\n\treturn {$: 'Moved', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(\n\tfunction (transform, component) {\n\t\tswitch (transform.$) {\n\t\t\tcase 'Untransformed':\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar x = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, 0, 0));\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar y = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(0, y, 0));\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar z = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, z));\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(xyz);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\tvar angle = component.b;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 0),\n\t\t\t\t\t\t\t_Utils_Tuple3(1, 1, 1),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 0),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 1),\n\t\t\t\t\t\t\t0);\n\t\t\t\t}\n\t\t\tcase 'Moved':\n\t\t\t\tvar moved = transform.a;\n\t\t\t\tvar x = moved.a;\n\t\t\t\tvar y = moved.b;\n\t\t\t\tvar z = moved.c;\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar newX = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(newX, y, z));\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar newY = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, newY, z));\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar newZ = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(\n\t\t\t\t\t\t\t_Utils_Tuple3(x, y, newZ));\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Moved(xyz);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar xyz = component.a;\n\t\t\t\t\t\tvar angle = component.b;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\tmoved,\n\t\t\t\t\t\t\t_Utils_Tuple3(1, 1, 1),\n\t\t\t\t\t\t\txyz,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar scale = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\tmoved,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\t_Utils_Tuple3(0, 0, 1),\n\t\t\t\t\t\t\t0);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar moved = transform.a;\n\t\t\t\tvar x = moved.a;\n\t\t\t\tvar y = moved.b;\n\t\t\t\tvar z = moved.c;\n\t\t\t\tvar scaled = transform.b;\n\t\t\t\tvar origin = transform.c;\n\t\t\t\tvar angle = transform.d;\n\t\t\t\tswitch (component.$) {\n\t\t\t\t\tcase 'MoveX':\n\t\t\t\t\t\tvar newX = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(newX, y, z),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveY':\n\t\t\t\t\t\tvar newY = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(x, newY, z),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveZ':\n\t\t\t\t\t\tvar newZ = component.a;\n\t\t\t\t\t\treturn A4(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FullTransform,\n\t\t\t\t\t\t\t_Utils_Tuple3(x, y, newZ),\n\t\t\t\t\t\t\tscaled,\n\t\t\t\t\t\t\torigin,\n\t\t\t\t\t\t\tangle);\n\t\t\t\t\tcase 'MoveXYZ':\n\t\t\t\t\t\tvar newMove = component.a;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);\n\t\t\t\t\tcase 'Rotate':\n\t\t\t\t\t\tvar newOrigin = component.a;\n\t\t\t\t\t\tvar newAngle = component.b;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar newScale = component.a;\n\t\t\t\t\t\treturn A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);\n\t\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);\nvar $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);\nvar $mdgriffith$elm_ui$Internal$Flag$merge = F2(\n\tfunction (_v0, _v1) {\n\t\tvar one = _v0.a;\n\t\tvar two = _v0.b;\n\t\tvar three = _v1.a;\n\t\tvar four = _v1.b;\n\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);\nvar $mdgriffith$elm_ui$Internal$Model$renderHeight = function (h) {\n\tswitch (h.$) {\n\t\tcase 'Px':\n\t\t\tvar px = h.a;\n\t\t\tvar val = $elm$core$String$fromInt(px);\n\t\t\tvar name = 'height-px-' + val;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + name),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')\n\t\t\t\t\t]));\n\t\tcase 'Content':\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightContent,\n\t\t\t\t_List_Nil);\n\t\tcase 'Fill':\n\t\t\tvar portion = h.a;\n\t\t\treturn (portion === 1) ? _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightFill,\n\t\t\t\t_List_Nil) : _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t'height-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000))\n\t\t\t\t\t]));\n\t\tcase 'Min':\n\t\t\tvar minSize = h.a;\n\t\t\tvar len = h.b;\n\t\t\tvar cls = 'min-height-' + $elm$core$String$fromInt(minSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'min-height',\n\t\t\t\t$elm$core$String$fromInt(minSize) + 'px');\n\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);\n\t\t\tvar newFlag = _v1.a;\n\t\t\tvar newAttrs = _v1.b;\n\t\t\tvar newStyle = _v1.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t\tdefault:\n\t\t\tvar maxSize = h.a;\n\t\t\tvar len = h.b;\n\t\t\tvar cls = 'max-height-' + $elm$core$String$fromInt(maxSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'max-height',\n\t\t\t\t$elm$core$String$fromInt(maxSize) + 'px');\n\t\t\tvar _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);\n\t\t\tvar newFlag = _v2.a;\n\t\t\tvar newAttrs = _v2.b;\n\t\t\tvar newStyle = _v2.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);\nvar $mdgriffith$elm_ui$Internal$Model$renderWidth = function (w) {\n\tswitch (w.$) {\n\t\tcase 'Px':\n\t\t\tvar px = w.a;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t'width-px-' + $elm$core$String$fromInt(px),\n\t\t\t\t\t\t'width',\n\t\t\t\t\t\t$elm$core$String$fromInt(px) + 'px')\n\t\t\t\t\t]));\n\t\tcase 'Content':\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthContent,\n\t\t\t\t_List_Nil);\n\t\tcase 'Fill':\n\t\t\tvar portion = w.a;\n\t\t\treturn (portion === 1) ? _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthFill,\n\t\t\t\t_List_Nil) : _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t'width-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000))\n\t\t\t\t\t]));\n\t\tcase 'Min':\n\t\t\tvar minSize = w.a;\n\t\t\tvar len = w.b;\n\t\t\tvar cls = 'min-width-' + $elm$core$String$fromInt(minSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'min-width',\n\t\t\t\t$elm$core$String$fromInt(minSize) + 'px');\n\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);\n\t\t\tvar newFlag = _v1.a;\n\t\t\tvar newAttrs = _v1.b;\n\t\t\tvar newStyle = _v1.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t\tdefault:\n\t\t\tvar maxSize = w.a;\n\t\t\tvar len = w.b;\n\t\t\tvar cls = 'max-width-' + $elm$core$String$fromInt(maxSize);\n\t\t\tvar style = A3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\tcls,\n\t\t\t\t'max-width',\n\t\t\t\t$elm$core$String$fromInt(maxSize) + 'px');\n\t\t\tvar _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);\n\t\t\tvar newFlag = _v2.a;\n\t\t\tvar newAttrs = _v2.b;\n\t\t\tvar newStyle = _v2.c;\n\t\t\treturn _Utils_Tuple3(\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),\n\t\t\t\tcls + (' ' + newAttrs),\n\t\t\t\tA2($elm$core$List$cons, style, newStyle));\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $mdgriffith$elm_ui$Internal$Model$skippable = F2(\n\tfunction (flag, style) {\n\t\tif (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {\n\t\t\tif (style.$ === 'Single') {\n\t\t\t\tvar val = style.c;\n\t\t\t\tswitch (val) {\n\t\t\t\t\tcase '0px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '1px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '2px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '3px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '4px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '5px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tcase '6px':\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (style.$) {\n\t\t\t\tcase 'FontSize':\n\t\t\t\t\tvar i = style.a;\n\t\t\t\t\treturn (i >= 8) && (i <= 32);\n\t\t\t\tcase 'PaddingStyle':\n\t\t\t\t\tvar name = style.a;\n\t\t\t\t\tvar t = style.b;\n\t\t\t\t\tvar r = style.c;\n\t\t\t\t\tvar b = style.d;\n\t\t\t\t\tvar l = style.e;\n\t\t\t\t\treturn _Utils_eq(t, b) && (_Utils_eq(t, r) && (_Utils_eq(t, l) && ((t >= 0) && (t <= 24))));\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);\nvar $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);\nvar $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);\nvar $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(\n\tfunction (classes, node, has, transform, styles, attrs, children, elementAttrs) {\n\t\tgatherAttrRecursive:\n\t\twhile (true) {\n\t\t\tif (!elementAttrs.b) {\n\t\t\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);\n\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tattributes: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(classes),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\thas: has,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tstyles: styles\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tvar _class = _v1.a;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tattributes: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class(classes + (' ' + _class)),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\thas: has,\n\t\t\t\t\t\tnode: node,\n\t\t\t\t\t\tstyles: A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Transform(transform),\n\t\t\t\t\t\t\tstyles)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar attribute = elementAttrs.a;\n\t\t\t\tvar remaining = elementAttrs.b;\n\t\t\t\tswitch (attribute.$) {\n\t\t\t\t\tcase 'NoAttribute':\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'Class':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar exactClassName = attribute.b;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = exactClassName + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Attr':\n\t\t\t\t\t\tvar actualAttribute = attribute.a;\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs),\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'StyleClass':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar style = attribute.b;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {\n\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = A2($elm$core$List$cons, style, styles),\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'TransformComponent':\n\t\t\t\t\t\tvar flag = attribute.a;\n\t\t\t\t\t\tvar component = attribute.b;\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),\n\t\t\t\t\t\t\t$temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component),\n\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'Width':\n\t\t\t\t\t\tvar width = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (width.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = width.a;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = ($mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px))) + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t'width-px-' + $elm$core$String$fromInt(px),\n\t\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(px) + 'px'),\n\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthContent),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthContent,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar portion = width.a;\n\t\t\t\t\t\t\t\t\tif (portion === 1) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthFill),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)))),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$widthFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'width-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000)),\n\t\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);\n\t\t\t\t\t\t\t\t\tvar addToFlags = _v4.a;\n\t\t\t\t\t\t\t\t\tvar newClass = _v4.b;\n\t\t\t\t\t\t\t\t\tvar newStyles = _v4.c;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + newClass),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$merge,\n\t\t\t\t\t\t\t\t\t\taddToFlags,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = _Utils_ap(newStyles, styles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Height':\n\t\t\t\t\t\tvar height = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tswitch (height.$) {\n\t\t\t\t\t\t\t\tcase 'Px':\n\t\t\t\t\t\t\t\t\tvar px = height.a;\n\t\t\t\t\t\t\t\t\tvar val = $elm$core$String$fromInt(px) + 'px';\n\t\t\t\t\t\t\t\t\tvar name = 'height-px-' + val;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + (name + (' ' + classes))),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val),\n\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Content':\n\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightContent + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightContent,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\tcase 'Fill':\n\t\t\t\t\t\t\t\t\tvar portion = height.a;\n\t\t\t\t\t\t\t\t\tif (portion === 1) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightFill + (' ' + classes),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)))),\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$add,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$heightFill,\n\t\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'height-fill-' + $elm$core$String$fromInt(portion))))),\n\t\t\t\t\t\t\t\t\t\t\t\t'flex-grow',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(portion * 100000)),\n\t\t\t\t\t\t\t\t\t\t\tstyles),\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);\n\t\t\t\t\t\t\t\t\tvar addToFlags = _v6.a;\n\t\t\t\t\t\t\t\t\tvar newClass = _v6.b;\n\t\t\t\t\t\t\t\t\tvar newStyles = _v6.c;\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes + (' ' + newClass),\n\t\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t\t$temp$has = A2(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$merge,\n\t\t\t\t\t\t\t\t\t\taddToFlags,\n\t\t\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = _Utils_ap(newStyles, styles),\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Describe':\n\t\t\t\t\t\tvar description = attribute.a;\n\t\t\t\t\t\tswitch (description.$) {\n\t\t\t\t\t\t\tcase 'Main':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Navigation':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'ContentInfo':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Complementary':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node),\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Heading':\n\t\t\t\t\t\t\t\tvar i = description.a;\n\t\t\t\t\t\t\t\tif (i <= 1) {\n\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node),\n\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (i < 7) {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = A2(\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$addNodeName,\n\t\t\t\t\t\t\t\t\t\t\t'h' + $elm$core$String$fromInt(i),\n\t\t\t\t\t\t\t\t\t\t\tnode),\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t\t\t$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node),\n\t\t\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase 'Paragraph':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Button':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'Label':\n\t\t\t\t\t\t\t\tvar label = description.a;\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tcase 'LivePolite':\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t\t$temp$attrs = A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'),\n\t\t\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'Nearby':\n\t\t\t\t\t\tvar location = attribute.a;\n\t\t\t\t\t\tvar elem = attribute.b;\n\t\t\t\t\t\tvar newStyles = function () {\n\t\t\t\t\t\t\tswitch (elem.$) {\n\t\t\t\t\t\t\t\tcase 'Empty':\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tcase 'Text':\n\t\t\t\t\t\t\t\t\tvar str = elem.a;\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tcase 'Unstyled':\n\t\t\t\t\t\t\t\t\tvar html = elem.a;\n\t\t\t\t\t\t\t\t\treturn styles;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tvar styled = elem.a;\n\t\t\t\t\t\t\t\t\treturn _Utils_ap(styles, styled.styles);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t$temp$styles = newStyles,\n\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t$temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children),\n\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\tcase 'AlignX':\n\t\t\t\t\t\tvar x = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = function (flags) {\n\t\t\t\t\t\t\t\tswitch (x.$) {\n\t\t\t\t\t\t\t\t\tcase 'CenterX':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);\n\t\t\t\t\t\t\t\t\tcase 'Right':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn flags;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar y = attribute.a;\n\t\t\t\t\t\tif (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {\n\t\t\t\t\t\t\tvar $temp$classes = classes,\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = has,\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes),\n\t\t\t\t\t\t\t\t$temp$node = node,\n\t\t\t\t\t\t\t\t$temp$has = function (flags) {\n\t\t\t\t\t\t\t\tswitch (y.$) {\n\t\t\t\t\t\t\t\t\tcase 'CenterY':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);\n\t\t\t\t\t\t\t\t\tcase 'Bottom':\n\t\t\t\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn flags;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(\n\t\t\t\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)),\n\t\t\t\t\t\t\t\t$temp$transform = transform,\n\t\t\t\t\t\t\t\t$temp$styles = styles,\n\t\t\t\t\t\t\t\t$temp$attrs = attrs,\n\t\t\t\t\t\t\t\t$temp$children = children,\n\t\t\t\t\t\t\t\t$temp$elementAttrs = remaining;\n\t\t\t\t\t\t\tclasses = $temp$classes;\n\t\t\t\t\t\t\tnode = $temp$node;\n\t\t\t\t\t\t\thas = $temp$has;\n\t\t\t\t\t\t\ttransform = $temp$transform;\n\t\t\t\t\t\t\tstyles = $temp$styles;\n\t\t\t\t\t\t\tattrs = $temp$attrs;\n\t\t\t\t\t\t\tchildren = $temp$children;\n\t\t\t\t\t\t\telementAttrs = $temp$elementAttrs;\n\t\t\t\t\t\t\tcontinue gatherAttrRecursive;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Untransformed = {$: 'Untransformed'};\nvar $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;\nvar $mdgriffith$elm_ui$Internal$Model$element = F4(\n\tfunction (context, node, attributes, children) {\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$createElement,\n\t\t\tcontext,\n\t\t\tchildren,\n\t\t\tA8(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$contextClasses(context),\n\t\t\t\tnode,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$none,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$untransformed,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_Nil,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoNearbyChildren,\n\t\t\t\t$elm$core$List$reverse(attributes)));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Height = function (a) {\n\treturn {$: 'Height', a: a};\n};\nvar $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;\nvar $mdgriffith$elm_ui$Internal$Model$Content = {$: 'Content'};\nvar $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;\nvar $mdgriffith$elm_ui$Internal$Model$Width = function (a) {\n\treturn {$: 'Width', a: a};\n};\nvar $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;\nvar $mdgriffith$elm_ui$Element$el = F2(\n\tfunction (attrs, child) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tattrs)),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[child])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Fill = function (a) {\n\treturn {$: 'Fill', a: a};\n};\nvar $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);\nvar $mdgriffith$elm_ui$Internal$Model$InFront = {$: 'InFront'};\nvar $mdgriffith$elm_ui$Internal$Model$Nearby = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Nearby', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$NoAttribute = {$: 'NoAttribute'};\nvar $mdgriffith$elm_ui$Element$createNearby = F2(\n\tfunction (loc, element) {\n\t\tif (element.$ === 'Empty') {\n\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t\t} else {\n\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Nearby, loc, element);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$inFront = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$InFront, element);\n};\nvar $mdgriffith$elm_ui$Internal$Model$Attr = function (a) {\n\treturn {$: 'Attr', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$htmlClass = function (cls) {\n\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t$elm$html$Html$Attributes$class(cls));\n};\nvar $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'OnlyDynamic', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'StaticRootAndDynamic', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$AllowHover = {$: 'AllowHover'};\nvar $mdgriffith$elm_ui$Internal$Model$Layout = {$: 'Layout'};\nvar $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {\n\tbackgroundColor: $elm$core$Maybe$Nothing,\n\tborderColor: $elm$core$Maybe$Nothing,\n\tshadow: $elm$core$Maybe$Just(\n\t\t{\n\t\t\tblur: 0,\n\t\t\tcolor: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),\n\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\tsize: 3\n\t\t})\n};\nvar $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function (options) {\n\tvar combine = F2(\n\t\tfunction (opt, record) {\n\t\t\tswitch (opt.$) {\n\t\t\t\tcase 'HoverOption':\n\t\t\t\t\tvar hoverable = opt.a;\n\t\t\t\t\tvar _v4 = record.hover;\n\t\t\t\t\tif (_v4.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\thover: $elm$core$Maybe$Just(hoverable)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t\tcase 'FocusStyleOption':\n\t\t\t\t\tvar focusStyle = opt.a;\n\t\t\t\t\tvar _v5 = record.focus;\n\t\t\t\t\tif (_v5.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfocus: $elm$core$Maybe$Just(focusStyle)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar renderMode = opt.a;\n\t\t\t\t\tvar _v6 = record.mode;\n\t\t\t\t\tif (_v6.$ === 'Nothing') {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\trecord,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmode: $elm$core$Maybe$Just(renderMode)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn record;\n\t\t\t\t\t}\n\t\t\t}\n\t\t});\n\tvar andFinally = function (record) {\n\t\treturn {\n\t\t\tfocus: function () {\n\t\t\t\tvar _v0 = record.focus;\n\t\t\t\tif (_v0.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;\n\t\t\t\t} else {\n\t\t\t\t\tvar focusable = _v0.a;\n\t\t\t\t\treturn focusable;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\thover: function () {\n\t\t\t\tvar _v1 = record.hover;\n\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AllowHover;\n\t\t\t\t} else {\n\t\t\t\t\tvar hoverable = _v1.a;\n\t\t\t\t\treturn hoverable;\n\t\t\t\t}\n\t\t\t}(),\n\t\t\tmode: function () {\n\t\t\t\tvar _v2 = record.mode;\n\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Layout;\n\t\t\t\t} else {\n\t\t\t\t\tvar actualMode = _v2.a;\n\t\t\t\t\treturn actualMode;\n\t\t\t\t}\n\t\t\t}()\n\t\t};\n\t};\n\treturn andFinally(\n\t\tA3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tcombine,\n\t\t\t{focus: $elm$core$Maybe$Nothing, hover: $elm$core$Maybe$Nothing, mode: $elm$core$Maybe$Nothing},\n\t\t\toptions));\n};\nvar $mdgriffith$elm_ui$Internal$Model$toHtml = F2(\n\tfunction (mode, el) {\n\t\tswitch (el.$) {\n\t\t\tcase 'Unstyled':\n\t\t\t\tvar html = el.a;\n\t\t\t\treturn html($mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\tcase 'Styled':\n\t\t\t\tvar styles = el.a.styles;\n\t\t\t\tvar html = el.a.html;\n\t\t\t\treturn A2(\n\t\t\t\t\thtml,\n\t\t\t\t\tmode(styles),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl);\n\t\t\tcase 'Text':\n\t\t\t\tvar text = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement(text);\n\t\t\tdefault:\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$textElement('');\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(\n\tfunction (optionList, attributes, child) {\n\t\tvar options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);\n\t\tvar embedStyle = function () {\n\t\t\tvar _v0 = options.mode;\n\t\t\tif (_v0.$ === 'NoStaticStyleSheet') {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);\n\t\t\t} else {\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$toHtml,\n\t\t\tembedStyle,\n\t\t\tA4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\tattributes,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[child]))));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'FontFamily', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$FontSize = function (a) {\n\treturn {$: 'FontSize', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$SansSerif = {$: 'SansSerif'};\nvar $mdgriffith$elm_ui$Internal$Model$Typeface = function (a) {\n\treturn {$: 'Typeface', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);\nvar $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);\nvar $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);\nvar $elm$core$String$toLower = _String_toLower;\nvar $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(\n\tfunction (font, current) {\n\t\treturn _Utils_ap(\n\t\t\tcurrent,\n\t\t\tfunction () {\n\t\t\t\tswitch (font.$) {\n\t\t\t\t\tcase 'Serif':\n\t\t\t\t\t\treturn 'serif';\n\t\t\t\t\tcase 'SansSerif':\n\t\t\t\t\t\treturn 'sans-serif';\n\t\t\t\t\tcase 'Monospace':\n\t\t\t\t\t\treturn 'monospace';\n\t\t\t\t\tcase 'Typeface':\n\t\t\t\t\t\tvar name = font.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t\tcase 'ImportFont':\n\t\t\t\t\t\tvar name = font.a;\n\t\t\t\t\t\tvar url = font.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar name = font.a.name;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t'-',\n\t\t\t\t\t\t\t$elm$core$String$words(\n\t\t\t\t\t\t\t\t$elm$core$String$toLower(name)));\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$rootStyle = function () {\n\tvar families = _List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$SansSerif\n\t\t]);\n\treturn _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$bgColor,\n\t\t\tA3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t\t'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)),\n\t\t\t\t'background-color',\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontColor,\n\t\t\tA3(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t\t'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(\n\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)),\n\t\t\t\t'color',\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontSize,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$FontSize(20)),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$fontFamily,\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$FontFamily,\n\t\t\t\tA3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families),\n\t\t\t\tfamilies))\n\t\t]);\n}();\nvar $mdgriffith$elm_ui$Element$layoutWith = F3(\n\tfunction (_v0, attrs, child) {\n\t\tvar options = _v0.options;\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$renderRoot,\n\t\t\toptions,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t' ',\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Internal$Style$classes.root, $mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single]))),\n\t\t\t\t_Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)),\n\t\t\tchild);\n\t});\nvar $mdgriffith$elm_ui$Element$layout = $mdgriffith$elm_ui$Element$layoutWith(\n\t{options: _List_Nil});\nvar $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'PaddingStyle', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);\nvar $mdgriffith$elm_ui$Element$padding = function (x) {\n\tvar f = x;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t'p-' + $elm$core$String$fromInt(x),\n\t\t\tf,\n\t\t\tf,\n\t\t\tf,\n\t\t\tf));\n};\nvar $author$project$Page$padding = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$padding(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 20;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 30;\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Element$paddingXY = F2(\n\tfunction (x, y) {\n\t\tif (_Utils_eq(x, y)) {\n\t\t\tvar f = x;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\tA5(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t'p-' + $elm$core$String$fromInt(x),\n\t\t\t\t\tf,\n\t\t\t\t\tf,\n\t\t\t\t\tf,\n\t\t\t\t\tf));\n\t\t} else {\n\t\t\tvar yFloat = y;\n\t\t\tvar xFloat = x;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\tA5(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),\n\t\t\t\t\tyFloat,\n\t\t\t\t\txFloat,\n\t\t\t\t\tyFloat,\n\t\t\t\t\txFloat));\n\t\t}\n\t});\nvar $author$project$UI$Padding$x = function (amount) {\n\treturn A2($mdgriffith$elm_ui$Element$paddingXY, amount, 0);\n};\nvar $author$project$Page$paddingX = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $author$project$UI$Padding$x(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 20;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 30;\n\t\t\t}\n\t\t}());\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$aliceblue = A3($mdgriffith$elm_ui$Element$rgb255, 240, 248, 255);\nvar $author$project$UI$BackgroundColor$page = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$aliceblue);\nvar $mdgriffith$elm_ui$Internal$Flag$borderRound = $mdgriffith$elm_ui$Internal$Flag$flag(17);\nvar $mdgriffith$elm_ui$Element$Border$rounded = function (radius) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderRound,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Single,\n\t\t\t'br-' + $elm$core$String$fromInt(radius),\n\t\t\t'border-radius',\n\t\t\t$elm$core$String$fromInt(radius) + 'px'));\n};\nvar $author$project$Page$roundedBorder = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 20;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 30;\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Internal$Model$Text = function (a) {\n\treturn {$: 'Text', a: a};\n};\nvar $mdgriffith$elm_ui$Element$text = function (content) {\n\treturn $mdgriffith$elm_ui$Internal$Model$Text(content);\n};\nvar $mdgriffith$elm_ui$Element$Font$color = function (fontColor) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor),\n\t\t\t'color',\n\t\t\tfontColor));\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$deepskyblue = A3($mdgriffith$elm_ui$Element$rgb255, 0, 191, 255);\nvar $author$project$UI$FontColor$vsn = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$deepskyblue);\nvar $mdgriffith$elm_ui$Element$Font$size = function (i) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontSize,\n\t\t$mdgriffith$elm_ui$Internal$Model$FontSize(i));\n};\nvar $author$project$UI$FontSize$vsn = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 8;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 10;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 12;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$Page$view = F3(\n\tfunction (vsn, device, _v0) {\n\t\tvar title = _v0.title;\n\t\tvar content = _v0.content;\n\t\treturn {\n\t\t\tbody: _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$layout,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$Page$padding(device),\n\t\t\t\t\t\t\t$author$project$UI$BackgroundColor$page,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignBottom,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$vsn,\n\t\t\t\t\t\t\t\t\t\t$author$project$UI$FontSize$vsn(device)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('v' + vsn)))\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Page$paddingX(device),\n\t\t\t\t\t\t\t\t$author$project$Page$roundedBorder(device),\n\t\t\t\t\t\t\t\t$author$project$UI$BackgroundColor$content,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$author$project$UI$Shadow$content(device)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\tcontent))\n\t\t\t\t]),\n\t\t\ttitle: title + ' - Elm Phoenix Websocket Example'\n\t\t};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Empty = {$: 'Empty'};\nvar $mdgriffith$elm_ui$Element$none = $mdgriffith$elm_ui$Internal$Model$Empty;\nvar $author$project$Page$Blank$view = {content: $mdgriffith$elm_ui$Element$none, title: ''};\nvar $author$project$Page$ChatRooms$GotBackBtnClick = {$: 'GotBackBtnClick'};\nvar $author$project$View$Layout$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Layout$body = F2(\n\tfunction (body_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Layout$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{body: body_}));\n\t});\nvar $author$project$View$Example$Page$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Example$Page$example = F2(\n\tfunction (example_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Page$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{example: example_}));\n\t});\nvar $author$project$View$Layout$homeMsg = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Layout$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{homeMsg: msg}));\n\t});\nvar $author$project$View$Example$Page$init = $author$project$View$Example$Page$Config(\n\t{example: $mdgriffith$elm_ui$Element$none, introduction: _List_Nil, menu: $mdgriffith$elm_ui$Element$none});\nvar $author$project$View$Layout$init = $author$project$View$Layout$Config(\n\t{body: $mdgriffith$elm_ui$Element$none, homeMsg: $elm$core$Maybe$Nothing, title: ''});\nvar $author$project$View$Layout$title = F2(\n\tfunction (text, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Layout$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{title: text}));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$paddingName = F4(\n\tfunction (top, right, bottom, left) {\n\t\treturn 'pad-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left)))))));\n\t});\nvar $mdgriffith$elm_ui$Element$paddingEach = function (_v0) {\n\tvar top = _v0.top;\n\tvar right = _v0.right;\n\tvar bottom = _v0.bottom;\n\tvar left = _v0.left;\n\tif (_Utils_eq(top, right) && (_Utils_eq(top, bottom) && _Utils_eq(top, left))) {\n\t\tvar topFloat = top;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t'p-' + $elm$core$String$fromInt(top),\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat,\n\t\t\t\ttopFloat));\n\t} else {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$paddingName, top, right, bottom, left),\n\t\t\t\ttop,\n\t\t\t\tright,\n\t\t\t\tbottom,\n\t\t\t\tleft));\n\t}\n};\nvar $author$project$UI$Padding$paddingEach = {bottom: 0, left: 0, right: 0, top: 0};\nvar $author$project$UI$Padding$bottom = function (amount) {\n\treturn $mdgriffith$elm_ui$Element$paddingEach(\n\t\t_Utils_update(\n\t\t\t$author$project$UI$Padding$paddingEach,\n\t\t\t{bottom: amount}));\n};\nvar $mdgriffith$elm_ui$Internal$Model$AsColumn = {$: 'AsColumn'};\nvar $mdgriffith$elm_ui$Internal$Model$asColumn = $mdgriffith$elm_ui$Internal$Model$AsColumn;\nvar $mdgriffith$elm_ui$Element$column = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentTop + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentLeft)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$darkslateblue = A3($mdgriffith$elm_ui$Element$rgb255, 72, 61, 139);\nvar $author$project$UI$FontColor$default = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue);\nvar $author$project$UI$FontSize$default = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 12;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 18;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 24;\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Element$Font$family = function (families) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$fontFamily,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$FontFamily,\n\t\t\tA3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'ff-', families),\n\t\t\tfamilies));\n};\nvar $mdgriffith$elm_ui$Element$Font$typeface = $mdgriffith$elm_ui$Internal$Model$Typeface;\nvar $author$project$UI$FontFamily$exampleIntro = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('Piedra')\n\t\t]));\nvar $mdgriffith$elm_ui$Internal$Flag$fontAlignment = $mdgriffith$elm_ui$Internal$Flag$flag(12);\nvar $mdgriffith$elm_ui$Element$Font$justify = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.textJustify);\nvar $mdgriffith$elm_ui$Internal$Model$Describe = function (a) {\n\treturn {$: 'Describe', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Model$Paragraph = {$: 'Paragraph'};\nvar $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'SpacingStyle', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);\nvar $mdgriffith$elm_ui$Internal$Model$spacingName = F2(\n\tfunction (x, y) {\n\t\treturn 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));\n\t});\nvar $mdgriffith$elm_ui$Element$spacing = function (x) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$spacing,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$SpacingStyle,\n\t\t\tA2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x),\n\t\t\tx,\n\t\t\tx));\n};\nvar $mdgriffith$elm_ui$Element$paragraph = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asParagraph,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $author$project$View$Example$Page$spacing = function (_v0) {\n\tvar _class = _v0._class;\n\tif (_class.$ === 'Phone') {\n\t\treturn $mdgriffith$elm_ui$Element$spacing(18);\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$spacing(22);\n\t}\n};\nvar $author$project$View$Example$Page$introductionView = F2(\n\tfunction (device, intro) {\n\t\tif (!intro.b) {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$Example$Page$spacing(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$justify,\n\t\t\t\t\t\t$author$project$UI$FontFamily$exampleIntro\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tfunction (paragraph) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tparagraph);\n\t\t\t\t\t},\n\t\t\t\t\tintro));\n\t\t}\n\t});\nvar $author$project$View$Example$Page$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$author$project$UI$FontColor$default,\n\t\t\t\t\t$author$project$UI$FontSize$default(device),\n\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Example$Page$introductionView, device, config.introduction),\n\t\t\t\t\tconfig.menu,\n\t\t\t\t\tconfig.example\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Element$clipY = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.clipY);\nvar $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);\nvar $mdgriffith$elm_ui$Element$Font$bold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.bold);\nvar $mdgriffith$elm_ui$Element$Font$center = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.textCenter);\nvar $mdgriffith$elm_ui$Element$htmlAttribute = $mdgriffith$elm_ui$Internal$Model$Attr;\nvar $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');\nvar $author$project$UI$Padding$y = function (amount) {\n\treturn A2($mdgriffith$elm_ui$Element$paddingXY, 0, amount);\n};\nvar $author$project$View$Layout$paddingY = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $author$project$UI$Padding$y(\n\t\tfunction () {\n\t\t\tif (_class.$ === 'Phone') {\n\t\t\t\treturn 5;\n\t\t\t} else {\n\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Internal$Model$AsRow = {$: 'AsRow'};\nvar $mdgriffith$elm_ui$Internal$Model$asRow = $mdgriffith$elm_ui$Internal$Model$AsRow;\nvar $mdgriffith$elm_ui$Element$row = F2(\n\tfunction (attrs, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tattrs))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $mdgriffith$elm_ui$Element$Font$underline = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.underline);\nvar $author$project$View$Layout$header = F2(\n\tfunction (device, text) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t$elm$html$Html$Attributes$id('header')),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$underline,\n\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Layout$paddingY(device),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$UI$FontColor$heading = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue);\nvar $author$project$UI$FontFamily$heading = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('Oswald')\n\t\t]));\nvar $author$project$UI$FontSize$heading = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\t\tif (_v1.a.$ === 'Phone') {\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\t\treturn 20;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\tvar _v5 = _v1.b;\n\t\t\t\t\treturn 24;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn 40;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$UI$FontFamily$backButton = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('Piedra')\n\t\t]));\nvar $mdgriffith$elm_ui$Internal$Model$Button = {$: 'Button'};\nvar $elm$html$Html$Attributes$boolProperty = F2(\n\tfunction (key, bool) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$bool(bool));\n\t});\nvar $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');\nvar $mdgriffith$elm_ui$Element$Input$hasFocusStyle = function (attr) {\n\tif (((attr.$ === 'StyleClass') && (attr.b.$ === 'PseudoSelector')) && (attr.b.a.$ === 'Focus')) {\n\t\tvar _v1 = attr.b;\n\t\tvar _v2 = _v1.a;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$focusDefault = function (attrs) {\n\treturn A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, attrs) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');\n};\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 'Normal', a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onClick = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onClick);\nvar $mdgriffith$elm_ui$Element$Input$enter = 'Enter';\nvar $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {\n\treturn {$: 'MayPreventDefault', a: a};\n};\nvar $elm$html$Html$Events$preventDefaultOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$onKey = F2(\n\tfunction (desiredCode, msg) {\n\t\tvar decode = function (code) {\n\t\t\treturn _Utils_eq(code, desiredCode) ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Not the enter key');\n\t\t};\n\t\tvar isKey = A2(\n\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\tdecode,\n\t\t\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\n\t\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\tA2(\n\t\t\t\t$elm$html$Html$Events$preventDefaultOn,\n\t\t\t\t'keyup',\n\t\t\t\tA2(\n\t\t\t\t\t$elm$json$Json$Decode$map,\n\t\t\t\t\tfunction (fired) {\n\t\t\t\t\t\treturn _Utils_Tuple2(fired, true);\n\t\t\t\t\t},\n\t\t\t\t\tisKey)));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$onEnter = function (msg) {\n\treturn A2($mdgriffith$elm_ui$Element$Input$onKey, $mdgriffith$elm_ui$Element$Input$enter, msg);\n};\nvar $mdgriffith$elm_ui$Internal$Flag$cursor = $mdgriffith$elm_ui$Internal$Flag$flag(21);\nvar $mdgriffith$elm_ui$Element$pointer = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorPointer);\nvar $elm$html$Html$Attributes$tabindex = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'tabIndex',\n\t\t$elm$core$String$fromInt(n));\n};\nvar $mdgriffith$elm_ui$Element$Input$button = F2(\n\tfunction (attrs, _v0) {\n\t\tvar onPress = _v0.onPress;\n\t\tvar label = _v0.label;\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.seButton + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.noTextSelection)))))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$focusDefault(attrs),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Button),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$tabindex(0)),\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\t\tif (onPress.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$disabled(true)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tattrs);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvar msg = onPress.a;\n\t\t\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(msg),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$onEnter(msg),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tattrs));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}()))))))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[label])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Hover = {$: 'Hover'};\nvar $mdgriffith$elm_ui$Internal$Model$PseudoSelector = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'PseudoSelector', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$hover = $mdgriffith$elm_ui$Internal$Flag$flag(33);\nvar $mdgriffith$elm_ui$Internal$Model$TransformComponent = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'TransformComponent', a: a, b: b};\n\t});\nvar $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;\nvar $mdgriffith$elm_ui$Internal$Model$map = F2(\n\tfunction (fn, el) {\n\t\tswitch (el.$) {\n\t\t\tcase 'Styled':\n\t\t\t\tvar styled = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Styled(\n\t\t\t\t\t{\n\t\t\t\t\t\thtml: F2(\n\t\t\t\t\t\t\tfunction (add, context) {\n\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$map,\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tA2(styled.html, add, context));\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tstyles: styled.styles\n\t\t\t\t\t});\n\t\t\tcase 'Unstyled':\n\t\t\t\tvar html = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Unstyled(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$composeL,\n\t\t\t\t\t\t$elm$virtual_dom$VirtualDom$map(fn),\n\t\t\t\t\t\thtml));\n\t\t\tcase 'Text':\n\t\t\t\tvar str = el.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Text(str);\n\t\t\tdefault:\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Empty;\n\t\t}\n\t});\nvar $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;\nvar $mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle = F2(\n\tfunction (fn, attr) {\n\t\tswitch (attr.$) {\n\t\t\tcase 'NoAttribute':\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t\t\tcase 'Describe':\n\t\t\t\tvar description = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Describe(description);\n\t\t\tcase 'AlignX':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AlignX(x);\n\t\t\tcase 'AlignY':\n\t\t\t\tvar y = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$AlignY(y);\n\t\t\tcase 'Width':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Width(x);\n\t\t\tcase 'Height':\n\t\t\t\tvar x = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Height(x);\n\t\t\tcase 'Class':\n\t\t\t\tvar x = attr.a;\n\t\t\t\tvar y = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);\n\t\t\tcase 'StyleClass':\n\t\t\t\tvar flag = attr.a;\n\t\t\t\tvar style = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);\n\t\t\tcase 'Nearby':\n\t\t\t\tvar location = attr.a;\n\t\t\t\tvar elem = attr.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Nearby,\n\t\t\t\t\tlocation,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));\n\t\t\tcase 'Attr':\n\t\t\t\tvar htmlAttr = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\tA2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));\n\t\t\tdefault:\n\t\t\t\tvar fl = attr.a;\n\t\t\t\tvar trans = attr.b;\n\t\t\t\treturn A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$removeNever = function (style) {\n\treturn A2($mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle, $elm$core$Basics$never, style);\n};\nvar $mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper = F2(\n\tfunction (attr, _v0) {\n\t\tvar styles = _v0.a;\n\t\tvar trans = _v0.b;\n\t\tvar _v1 = $mdgriffith$elm_ui$Internal$Model$removeNever(attr);\n\t\tswitch (_v1.$) {\n\t\t\tcase 'StyleClass':\n\t\t\t\tvar style = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tA2($elm$core$List$cons, style, styles),\n\t\t\t\t\ttrans);\n\t\t\tcase 'TransformComponent':\n\t\t\t\tvar flag = _v1.a;\n\t\t\t\tvar component = _v1.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tstyles,\n\t\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$composeTransformation, trans, component));\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(styles, trans);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$unwrapDecorations = function (attrs) {\n\tvar _v0 = A3(\n\t\t$elm$core$List$foldl,\n\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper,\n\t\t_Utils_Tuple2(_List_Nil, $mdgriffith$elm_ui$Internal$Model$Untransformed),\n\t\tattrs);\n\tvar styles = _v0.a;\n\tvar transform = _v0.b;\n\treturn A2(\n\t\t$elm$core$List$cons,\n\t\t$mdgriffith$elm_ui$Internal$Model$Transform(transform),\n\t\tstyles);\n};\nvar $mdgriffith$elm_ui$Element$mouseOver = function (decs) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$hover,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PseudoSelector,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Hover,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));\n};\nvar $author$project$UI$FontColor$mouseOverBackButton = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$aliceblue);\nvar $author$project$View$Layout$homeButton = F2(\n\tfunction (device, maybeMsg) {\n\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\tvar msg = maybeMsg.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$Layout$paddingY(device),\n\t\t\t\t\t\t$author$project$UI$FontFamily$backButton\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$author$project$UI$FontColor$mouseOverBackButton]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text('<='),\n\t\t\t\t\t\tonPress: $elm$core$Maybe$Just(msg)\n\t\t\t\t\t}));\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$scrollbarY = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY);\nvar $author$project$View$Layout$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t$elm$html$Html$Attributes$id('layout')),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$clipY,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\tA2($author$project$View$Layout$homeButton, device, config.homeMsg)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$FontColor$heading,\n\t\t\t\t\t$author$project$UI$FontFamily$heading,\n\t\t\t\t\t$author$project$UI$FontSize$heading(device)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Layout$header, device, config.title),\n\t\t\t\t\tconfig.body\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Element$map = $mdgriffith$elm_ui$Internal$Model$map;\nvar $author$project$Example$MultiRoomChat$GotAcceptRoomInvite = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotAcceptRoomInvite', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotBackgroundColorSelection = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotBackgroundColorSelection', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotDeclineRoomInvite = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotDeclineRoomInvite', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotDeleteRoom = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotDeleteRoom', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotEnterRoom = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotEnterRoom', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotForegroundColorSelection = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotForegroundColorSelection', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotHideRoomMembers = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotHideRoomMembers', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotInviteErrorOk = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotInviteErrorOk', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotInviteUser = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'GotInviteUser', a: a, b: b, c: c};\n\t});\nvar $author$project$Example$MultiRoomChat$GotJoinLobby = function (a) {\n\treturn {$: 'GotJoinLobby', a: a};\n};\nvar $author$project$Example$MultiRoomChat$GotMemberStartedTyping = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotMemberStartedTyping', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotMemberStoppedTyping = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotMemberStoppedTyping', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotMessageChange = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'GotMessageChange', a: a, b: b, c: c};\n\t});\nvar $author$project$Example$MultiRoomChat$GotShowRoomMembers = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotShowRoomMembers', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$GotUsernameChange = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotUsernameChange', a: a, b: b};\n\t});\nvar $author$project$Phoenix$channelQueued = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a.channel;\n\t\treturn A2($author$project$Internal$Channel$joinIsQueued, topic, channel);\n\t});\nvar $author$project$Example$MultiRoomChat$chatMaxHeight = function (layoutHeight) {\n\treturn $elm$core$Basics$floor(layoutHeight - 20);\n};\nvar $author$project$View$MultiRoomChat$Room$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$MultiRoomChat$Room$chatMaxHeight = F2(\n\tfunction (height, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{chatMaxHeight: height}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$MultiRoomChat$Lobby$init = F2(\n\tfunction (user, lobby) {\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t{lobby: lobby, onAcceptRoomInvite: $elm$core$Maybe$Nothing, onCreateRoom: $elm$core$Maybe$Nothing, onDeclineRoomInvite: $elm$core$Maybe$Nothing, onDeleteRoom: $elm$core$Maybe$Nothing, onEnterRoom: $elm$core$Maybe$Nothing, onInviteErrorOk: $elm$core$Maybe$Nothing, onMouseEnterRoom: $elm$core$Maybe$Nothing, onMouseLeaveRoom: $elm$core$Maybe$Nothing, user: user});\n\t});\nvar $author$project$View$MultiRoomChat$Registration$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$MultiRoomChat$Registration$init = function (user) {\n\treturn $author$project$View$MultiRoomChat$Registration$Config(\n\t\t{currentUser: user, onBackgroundColorChange: $elm$core$Maybe$Nothing, onChange: $elm$core$Maybe$Nothing, onForegroundColorChange: $elm$core$Maybe$Nothing, onSubmit: $elm$core$Maybe$Nothing});\n};\nvar $author$project$View$MultiRoomChat$Room$init = F2(\n\tfunction (room, currentUser) {\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t{chatMaxHeight: 0, currentUser: currentUser, inviteableUsers: _List_Nil, maybeOnChange: $elm$core$Maybe$Nothing, maybeOnClick: $elm$core$Maybe$Nothing, maybeOnFocus: $elm$core$Maybe$Nothing, maybeOnLoseFocus: $elm$core$Maybe$Nothing, maybeOnSubmit: $elm$core$Maybe$Nothing, room: room});\n\t});\nvar $author$project$View$MultiRoomChat$Room$inviteableUsers = F2(\n\tfunction (users, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{inviteableUsers: users}));\n\t});\nvar $author$project$Example$MultiRoomChat$GotCreateRoom = function (a) {\n\treturn {$: 'GotCreateRoom', a: a};\n};\nvar $author$project$Internal$Push$matchFound = A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $author$project$Internal$Config$exists);\nvar $author$project$Internal$Push$compareWith = F2(\n\tfunction (compareFunc, config) {\n\t\treturn $author$project$Internal$Push$matchFound(\n\t\t\tA2(\n\t\t\t\t$author$project$Internal$Push$partition,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (_v0, _v1) {\n\t\t\t\t\t\tvar pushConfig = _v1.pushConfig;\n\t\t\t\t\t\treturn compareFunc(pushConfig);\n\t\t\t\t\t}),\n\t\t\t\tconfig));\n\t});\nvar $author$project$Internal$Push$inFlight = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar sent = _v0.a.sent;\n\t\treturn A2($author$project$Internal$Push$compareWith, compareFunc, sent);\n\t});\nvar $author$project$Phoenix$pushInFlight = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn A2($author$project$Internal$Push$inFlight, compareFunc, model.push);\n\t});\nvar $author$project$Internal$Push$isQueued = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar queue = _v0.a.queue;\n\t\treturn A2($author$project$Internal$Push$compareWith, compareFunc, queue);\n\t});\nvar $author$project$Phoenix$pushQueued = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn A2($author$project$Internal$Push$isQueued, compareFunc, model.push);\n\t});\nvar $author$project$Internal$Push$hasTimedOut = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar timeouts = _v0.a.timeouts;\n\t\treturn A2($author$project$Internal$Push$compareWith, compareFunc, timeouts);\n\t});\nvar $author$project$Phoenix$pushTimedOut = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn A2($author$project$Internal$Push$hasTimedOut, compareFunc, model.push);\n\t});\nvar $author$project$Phoenix$pushWaiting = F2(\n\tfunction (compareFunc, model) {\n\t\treturn A2($author$project$Phoenix$pushQueued, compareFunc, model) || (A2($author$project$Phoenix$pushInFlight, compareFunc, model) || A2($author$project$Phoenix$pushTimedOut, compareFunc, model));\n\t});\nvar $author$project$Example$MultiRoomChat$maybeOnCreateRoom = F2(\n\tfunction (phoenix, user) {\n\t\treturn A2(\n\t\t\t$author$project$Phoenix$pushWaiting,\n\t\t\tfunction (push) {\n\t\t\t\treturn push.event === 'create_room';\n\t\t\t},\n\t\t\tphoenix) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(\n\t\t\t$author$project$Example$MultiRoomChat$GotCreateRoom(user));\n\t});\nvar $author$project$Example$MultiRoomChat$GotSendMessage = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'GotSendMessage', a: a, b: b};\n\t});\nvar $author$project$Example$MultiRoomChat$maybeOnSubmitMessage = F3(\n\tfunction (phoenix, user, room) {\n\t\treturn A2(\n\t\t\t$author$project$Phoenix$pushWaiting,\n\t\t\tfunction (push) {\n\t\t\t\treturn push.event === 'new_message';\n\t\t\t},\n\t\t\tphoenix) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(\n\t\t\tA2($author$project$Example$MultiRoomChat$GotSendMessage, user, room));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onAcceptRoomInvite = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonAcceptRoomInvite: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Registration$onBackgroundColorChange = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Registration$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonBackgroundColorChange: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Registration$onChange = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Registration$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonChange: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$onChangeMessage = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tmaybeOnChange: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$onClickUser = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tmaybeOnClick: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onCreateRoom = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onCreateRoom: msg}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onDeclineRoomInvite = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonDeclineRoomInvite: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onDeleteRoom = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonDeleteRoom: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onEnterRoom = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonEnterRoom: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$onFocusMessage = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tmaybeOnFocus: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Registration$onForegroundColorChange = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Registration$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonForegroundColorChange: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onInviteErrorOk = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonInviteErrorOk: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$onLoseFocusMessage = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tmaybeOnLoseFocus: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onMouseEnterRoom = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonMouseEnterRoom: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$onMouseLeaveRoom = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Lobby$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonMouseLeaveRoom: $elm$core$Maybe$Just(msg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$MultiRoomChat$Registration$onSubmit = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Registration$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onSubmit: msg}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$onSubmitMessage = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$MultiRoomChat$Room$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{maybeOnSubmit: msg}));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Padding = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'Padding', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Spaced = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Spaced', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding = function (attrs) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\tF2(\n\t\t\tfunction (attr, _v0) {\n\t\t\t\tvar pad = _v0.a;\n\t\t\t\tvar spacing = _v0.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (pad.$ === 'Just') {\n\t\t\t\t\t\t\tvar x = pad.a;\n\t\t\t\t\t\t\treturn pad;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'PaddingStyle')) {\n\t\t\t\t\t\t\t\tvar _v3 = attr.b;\n\t\t\t\t\t\t\t\tvar name = _v3.a;\n\t\t\t\t\t\t\t\tvar t = _v3.b;\n\t\t\t\t\t\t\t\tvar r = _v3.c;\n\t\t\t\t\t\t\t\tvar b = _v3.d;\n\t\t\t\t\t\t\t\tvar l = _v3.e;\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tA5($mdgriffith$elm_ui$Internal$Model$Padding, name, t, r, b, l));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}(),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (spacing.$ === 'Just') {\n\t\t\t\t\t\t\tvar x = spacing.a;\n\t\t\t\t\t\t\treturn spacing;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {\n\t\t\t\t\t\t\t\tvar _v6 = attr.b;\n\t\t\t\t\t\t\t\tvar name = _v6.a;\n\t\t\t\t\t\t\t\tvar x = _v6.b;\n\t\t\t\t\t\t\t\tvar y = _v6.c;\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$Spaced, name, x, y));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}());\n\t\t\t}),\n\t\t_Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing),\n\t\tattrs);\n};\nvar $mdgriffith$elm_ui$Internal$Model$paddingNameFloat = F4(\n\tfunction (top, right, bottom, left) {\n\t\treturn 'pad-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(top) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(right) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(bottom) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(left)))))));\n\t});\nvar $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;\nvar $mdgriffith$elm_ui$Element$wrappedRow = F2(\n\tfunction (attrs, children) {\n\t\tvar _v0 = $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding(attrs);\n\t\tvar padded = _v0.a;\n\t\tvar spaced = _v0.b;\n\t\tif (spaced.$ === 'Nothing') {\n\t\t\treturn A4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\tattrs))),\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t\t} else {\n\t\t\tvar _v2 = spaced.a;\n\t\t\tvar spaceName = _v2.a;\n\t\t\tvar x = _v2.b;\n\t\t\tvar y = _v2.c;\n\t\t\tvar newPadding = function () {\n\t\t\t\tif (padded.$ === 'Just') {\n\t\t\t\t\tvar _v5 = padded.a;\n\t\t\t\t\tvar name = _v5.a;\n\t\t\t\t\tvar t = _v5.b;\n\t\t\t\t\tvar r = _v5.c;\n\t\t\t\t\tvar b = _v5.d;\n\t\t\t\t\tvar l = _v5.e;\n\t\t\t\t\tif ((_Utils_cmp(r, x / 2) > -1) && (_Utils_cmp(b, y / 2) > -1)) {\n\t\t\t\t\t\tvar newTop = t - (y / 2);\n\t\t\t\t\t\tvar newRight = r - (x / 2);\n\t\t\t\t\t\tvar newLeft = l - (x / 2);\n\t\t\t\t\t\tvar newBottom = b - (y / 2);\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, newRight, newBottom, newLeft),\n\t\t\t\t\t\t\t\t\tnewTop,\n\t\t\t\t\t\t\t\t\tnewRight,\n\t\t\t\t\t\t\t\t\tnewBottom,\n\t\t\t\t\t\t\t\t\tnewLeft)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}();\n\t\t\tif (newPadding.$ === 'Just') {\n\t\t\t\tvar pad = newPadding.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\tattrs,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[pad]))))),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t\t\t} else {\n\t\t\t\tvar halfY = -(y / 2);\n\t\t\t\tvar halfX = -(x / 2);\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\tattrs,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t\t\t\t'margin',\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(halfY) + ('px' + (' ' + ($elm$core$String$fromFloat(halfX) + 'px'))))),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t\t\t\t'calc(100% + ' + ($elm$core$String$fromInt(x) + 'px)'))),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$spacing,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Internal$Model$SpacingStyle, spaceName, x, y)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil))))),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children))\n\t\t\t\t\t\t\t])));\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$container = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\tif ((_v1.a.$ === 'Phone') && (_v1.b.$ === 'Portrait')) {\n\t\tvar _v2 = _v1.a;\n\t\tvar _v3 = _v1.b;\n\t\treturn $mdgriffith$elm_ui$Element$column;\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$wrappedRow;\n\t}\n};\nvar $author$project$UI$Align$Center = {$: 'Center'};\nvar $author$project$UI$Align$Left = {$: 'Left'};\nvar $mdgriffith$elm_ui$Internal$Model$Left = {$: 'Left'};\nvar $mdgriffith$elm_ui$Element$alignLeft = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Left);\nvar $mdgriffith$elm_ui$Internal$Model$CenterX = {$: 'CenterX'};\nvar $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$CenterX);\nvar $mdgriffith$elm_ui$Internal$Model$CenterY = {$: 'CenterY'};\nvar $mdgriffith$elm_ui$Element$centerY = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$CenterY);\nvar $author$project$View$Button$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Button$Default = {$: 'Default'};\nvar $author$project$UI$Align$Middle = {$: 'Middle'};\nvar $author$project$View$Button$init = $author$project$View$Button$Config(\n\t{alignX: $author$project$UI$Align$Center, alignY: $author$project$UI$Align$Middle, enabled: true, label: '', onPress: $elm$core$Maybe$Nothing, type_: $author$project$View$Button$Default});\nvar $mdgriffith$elm_ui$Internal$Model$Px = function (a) {\n\treturn {$: 'Px', a: a};\n};\nvar $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;\nvar $author$project$View$Button$setAlignX = F2(\n\tfunction (alignX, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Button$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{alignX: alignX}));\n\t});\nvar $author$project$View$Button$setLabel = F2(\n\tfunction (label_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Button$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{label: label_}));\n\t});\nvar $author$project$View$Button$setOnPress = F2(\n\tfunction (maybe, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Button$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onPress: maybe}));\n\t});\nvar $author$project$Type$User$bgColor = function (_v0) {\n\tvar backgroundColor = _v0.a.backgroundColor;\n\treturn backgroundColor;\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$darkseagreen = A3($mdgriffith$elm_ui$Element$rgb255, 143, 188, 143);\nvar $author$project$UI$BackgroundColor$button = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$darkseagreen);\nvar $phollyer$elm_ui_colors$Colors$Opaque$darkolivegreen = A3($mdgriffith$elm_ui$Element$rgb255, 85, 107, 47);\nvar $author$project$UI$FontColor$button = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkolivegreen);\nvar $phollyer$elm_ui_colors$Colors$Opaque$seagreen = A3($mdgriffith$elm_ui$Element$rgb255, 46, 139, 87);\nvar $author$project$UI$Shadow$button = $mdgriffith$elm_ui$Element$Border$shadow(\n\t{\n\t\tblur: 2,\n\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$seagreen,\n\t\toffset: _Utils_Tuple2(0, 0),\n\t\tsize: 1\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$gray = A3($mdgriffith$elm_ui$Element$rgb255, 128, 128, 128);\nvar $phollyer$elm_ui_colors$Colors$Opaque$grey = $phollyer$elm_ui_colors$Colors$Opaque$gray;\nvar $author$project$UI$BackgroundColor$buttonDisabled = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$grey);\nvar $phollyer$elm_ui_colors$Colors$Opaque$darkgray = A3($mdgriffith$elm_ui$Element$rgb255, 169, 169, 169);\nvar $phollyer$elm_ui_colors$Colors$Opaque$darkgrey = $phollyer$elm_ui_colors$Colors$Opaque$darkgray;\nvar $author$project$UI$FontColor$buttonDisabled = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkgrey);\nvar $mdgriffith$elm_ui$Internal$Flag$borderColor = $mdgriffith$elm_ui$Internal$Flag$flag(28);\nvar $mdgriffith$elm_ui$Element$Border$color = function (clr) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderColor,\n\t\tA3(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Colored,\n\t\t\t'bc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),\n\t\t\t'border-color',\n\t\t\tclr));\n};\nvar $author$project$Type$User$fgColor = function (_v0) {\n\tvar foregroundColor = _v0.a.foregroundColor;\n\treturn foregroundColor;\n};\nvar $mdgriffith$elm_ui$Internal$Model$BorderWidth = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: 'BorderWidth', a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $mdgriffith$elm_ui$Element$Border$width = function (v) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t'b-' + $elm$core$String$fromInt(v),\n\t\t\tv,\n\t\t\tv,\n\t\t\tv,\n\t\t\tv));\n};\nvar $author$project$View$Button$attrs = F2(\n\tfunction (type_, enabled) {\n\t\tif (type_.$ === 'Default') {\n\t\t\treturn enabled ? _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BackgroundColor$button,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$author$project$UI$Shadow$button])),\n\t\t\t\t\t$author$project$UI$FontColor$button\n\t\t\t\t]) : _List_fromArray(\n\t\t\t\t[$author$project$UI$BackgroundColor$buttonDisabled, $author$project$UI$FontColor$buttonDisabled]);\n\t\t} else {\n\t\t\tvar user = type_.a;\n\t\t\treturn enabled ? _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t$author$project$Type$User$bgColor(user)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(user)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$shadow(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tblur: 3,\n\t\t\t\t\t\t\t\tcolor: $author$project$Type$User$fgColor(user),\n\t\t\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\t\t\tsize: 1\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(user))\n\t\t\t\t]) : _List_fromArray(\n\t\t\t\t[$author$project$UI$BackgroundColor$buttonDisabled, $author$project$UI$FontColor$buttonDisabled]);\n\t\t}\n\t});\nvar $author$project$UI$Align$x = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Center':\n\t\t\treturn $mdgriffith$elm_ui$Element$centerX;\n\t\tcase 'Left':\n\t\t\treturn $mdgriffith$elm_ui$Element$alignLeft;\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Element$alignRight;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$Top = {$: 'Top'};\nvar $mdgriffith$elm_ui$Element$alignTop = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Top);\nvar $author$project$UI$Align$y = function (align) {\n\tswitch (align.$) {\n\t\tcase 'Middle':\n\t\t\treturn $mdgriffith$elm_ui$Element$centerY;\n\t\tcase 'Top':\n\t\t\treturn $mdgriffith$elm_ui$Element$alignTop;\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Element$alignBottom;\n\t}\n};\nvar $author$project$View$Button$view = F2(\n\tfunction (_v0, _v1) {\n\t\tvar config = _v1.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$button,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA2($author$project$View$Button$attrs, config.type_, config.enabled),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$UI$Align$x(config.alignX),\n\t\t\t\t\t\t$author$project$UI$Align$y(config.alignY),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10)\n\t\t\t\t\t])),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$text(config.label),\n\t\t\t\tonPress: config.enabled ? config.onPress : $elm$core$Maybe$Nothing\n\t\t\t});\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$createRoomBtn = F2(\n\tfunction (device, maybeMsg) {\n\t\tvar _class = device._class;\n\t\tvar orientation = device.orientation;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$px(\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tswitch (_class.$) {\n\t\t\t\t\t\t\t\tcase 'Phone':\n\t\t\t\t\t\t\t\t\treturn 20;\n\t\t\t\t\t\t\t\tcase 'Tablet':\n\t\t\t\t\t\t\t\t\treturn 30;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn 40;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}())),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\tfunction () {\n\t\t\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tvar _v2 = _Utils_Tuple2(_class, orientation);\n\t\t\t\t\t\t\t\tif ((_v2.a.$ === 'Phone') && (_v2.b.$ === 'Landscape')) {\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v4 = _v2.b;\n\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$alignLeft;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$centerX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Creating Room...'));\n\t\t\t\t} else {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\t\tdevice,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setAlignX,\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tvar _v5 = _Utils_Tuple2(_class, orientation);\n\t\t\t\t\t\t\t\tif ((_v5.a.$ === 'Phone') && (_v5.b.$ === 'Landscape')) {\n\t\t\t\t\t\t\t\t\tvar _v6 = _v5.a;\n\t\t\t\t\t\t\t\t\tvar _v7 = _v5.b;\n\t\t\t\t\t\t\t\t\treturn $author$project$UI$Align$Left;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn $author$project$UI$Align$Center;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t\tmaybeMsg,\n\t\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Create A Room', $author$project$View$Button$init))));\n\t\t\t\t}\n\t\t\t}());\n\t});\nvar $author$project$Type$User$hasInvites = function (_v0) {\n\tvar user = _v0.a;\n\treturn !$elm$core$Dict$isEmpty(user.receivedInvites);\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$steelblue = A3($mdgriffith$elm_ui$Element$rgb255, 70, 130, 180);\nvar $author$project$UI$BackgroundColor$panel = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$steelblue);\nvar $author$project$UI$FontColor$panel = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$skyblue);\nvar $phollyer$elm_ui_colors$Colors$Opaque$lavender = A3($mdgriffith$elm_ui$Element$rgb255, 230, 230, 250);\nvar $author$project$UI$FontColor$subTitle = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$lavender);\nvar $author$project$View$Tag$padding = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$padding(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Tag$roundedBorders = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Tag$view = F3(\n\tfunction (device, currentUser, user) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Tag$padding(device),\n\t\t\t\t\t$author$project$View$Tag$roundedBorders(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t$author$project$Type$User$bgColor(user)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(user)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(user))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\tA2($author$project$Type$User$match, currentUser, user) ? 'You' : $author$project$Type$User$username(user))\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$occupantsView = F3(\n\tfunction (device, currentUser, occupants) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BackgroundColor$panel,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$FontColor$panel\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $author$project$UI$FontColor$subTitle]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Occupants')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$View$Tag$view, device, currentUser),\n\t\t\t\t\t\toccupants))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Button$User = function (a) {\n\treturn {$: 'User', a: a};\n};\nvar $author$project$View$MultiRoomChat$Lobby$padding = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$padding(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Lobby$roundedBorder = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Button$setType = F2(\n\tfunction (type_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Button$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{type_: type_}));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$spacing = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$spacing(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 15;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $mdgriffith$elm_ui$Element$rgba255 = F4(\n\tfunction (red, green, blue, a) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, a);\n\t});\nvar $phollyer$elm_ui_colors$Colors$Alpha$white = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 255);\nvar $author$project$View$MultiRoomChat$Lobby$inviteErrorView = F4(\n\tfunction (device, maybeMsg, invite, user) {\n\t\tif (maybeMsg.$ === 'Just') {\n\t\t\tvar toMsg = maybeMsg.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roundedBorder(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t$phollyer$elm_ui_colors$Colors$Alpha$white(0.5))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$padding(device),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$spacing(device),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roundedBorder(device),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\t$author$project$Type$User$bgColor(user)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\t$author$project$Type$User$fgColor(user)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t$author$project$Type$User$fgColor(user))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Error')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('The invite has expired.')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Button$setType,\n\t\t\t\t\t\t\t\t$author$project$View$Button$User(user),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\tA2(toMsg, user, invite)),\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'OK', $author$project$View$Button$init))))\n\t\t\t\t\t\t])));\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$inviteView = F4(\n\tfunction (device, state, invite, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = _Utils_Tuple2(config.onAcceptRoomInvite, config.onDeclineRoomInvite);\n\t\tif ((_v1.a.$ === 'Just') && (_v1.b.$ === 'Just')) {\n\t\t\tvar onAccept = _v1.a.a;\n\t\t\tvar onDecline = _v1.b.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roundedBorder(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t$phollyer$elm_ui_colors$Colors$Alpha$white(0.5))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$padding(device),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$spacing(device),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roundedBorder(device),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\t$author$project$Type$User$bgColor(invite.from)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\t$author$project$Type$User$fgColor(invite.from)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t\t$author$project$Type$User$fgColor(invite.from))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Room Invite')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('You have received an invitation from '),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t\t$author$project$Type$User$username(invite.from)),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' to join them in their room.')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$spacing(device),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\tif (state.$ === 'Declining') {\n\t\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$text('Declining Invite...');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$setType,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$User(invite.from),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonDecline(invite)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Decline', $author$project$View$Button$init))));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\tif (state.$ === 'Accepting') {\n\t\t\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$text('Accepting Invite...');\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$setType,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$User(invite.from),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonAccept(invite)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Accept', $author$project$View$Button$init))));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])));\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $elm$core$Dict$values = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, valueList) {\n\t\t\t\treturn A2($elm$core$List$cons, value, valueList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $author$project$Type$User$invitesReceived = function (_v0) {\n\tvar receivedInvites = _v0.a.receivedInvites;\n\treturn $elm$core$Dict$values(receivedInvites);\n};\nvar $author$project$View$MultiRoomChat$Lobby$roomInvite = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = $author$project$Type$User$invitesReceived(config.user);\n\t\tif (_v1.b) {\n\t\t\tif (_v1.a.a.$ === 'Expired') {\n\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\tvar invite = _v2.b;\n\t\t\t\treturn A4($author$project$View$MultiRoomChat$Lobby$inviteErrorView, device, config.onInviteErrorOk, invite, config.user);\n\t\t\t} else {\n\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\tvar state = _v4.a;\n\t\t\t\tvar invite = _v4.b;\n\t\t\t\treturn A4(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$inviteView,\n\t\t\t\t\tdevice,\n\t\t\t\t\tstate,\n\t\t\t\t\tinvite,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$roomsContainer = function (rooms_) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BackgroundColor$panel,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$FontColor$panel\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX, $author$project$UI$FontColor$subTitle]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Room List')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\trooms_)\n\t\t\t\t])));\n};\nvar $author$project$View$MultiRoomChat$Lobby$maybeDeleteBtn = F3(\n\tfunction (device, room, _v0) {\n\t\tvar config = _v0.a;\n\t\tif (A2($author$project$Type$User$match, config.user, room.owner)) {\n\t\t\tvar _v1 = config.onDeleteRoom;\n\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t\t} else {\n\t\t\t\tvar onDelete = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setType,\n\t\t\t\t\t\t$author$project$View$Button$User(room.owner),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\tonDelete(room)),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Delete', $author$project$View$Button$init))));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\t$elm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar $author$project$Type$Room$isOpen = function (room) {\n\treturn A2($elm$core$List$member, room.owner, room.members);\n};\nvar $author$project$View$MultiRoomChat$Lobby$maybeEnterBtn = F3(\n\tfunction (device, room, _v0) {\n\t\tvar config = _v0.a;\n\t\tif (A2($author$project$Type$User$match, config.user, room.owner) || $author$project$Type$Room$isOpen(room)) {\n\t\t\tvar _v1 = config.onEnterRoom;\n\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t\t} else {\n\t\t\t\tvar onEnter = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setType,\n\t\t\t\t\t\t$author$project$View$Button$User(room.owner),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\tonEnter(room)),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Enter', $author$project$View$Button$init))));\n\t\t\t}\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $elm$html$Html$Events$onMouseEnter = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'mouseenter',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onMouseEnter = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseEnter);\nvar $elm$html$Html$Events$onMouseLeave = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'mouseleave',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onMouseLeave = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseLeave);\nvar $author$project$View$MultiRoomChat$Lobby$roomAttrs = F3(\n\tfunction (room, maybeOnMouseEnter, maybeOnMouseLeave) {\n\t\tvar _v0 = _Utils_Tuple2(maybeOnMouseEnter, maybeOnMouseLeave);\n\t\tif ((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) {\n\t\t\tvar onMouseEnter_ = _v0.a.a;\n\t\t\tvar onMouseLeave_ = _v0.b.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t$author$project$Type$User$bgColor(room.owner)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(room.owner)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\t$author$project$Type$User$bgColor(room.owner)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$shadow(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tblur: 5,\n\t\t\t\t\t\t\t\tcolor: $author$project$Type$User$bgColor(room.owner),\n\t\t\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\t\t\tsize: 1\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onMouseEnter(\n\t\t\t\t\tonMouseEnter_(room)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onMouseLeave(\n\t\t\t\t\tonMouseLeave_(room)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(room.owner))\n\t\t\t\t]);\n\t\t} else {\n\t\t\treturn _List_Nil;\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Above = {$: 'Above'};\nvar $mdgriffith$elm_ui$Element$above = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Above, element);\n};\nvar $author$project$UI$RoundedBorder$small = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Lobby$occupantsList = F3(\n\tfunction (device, currentUser, room) {\n\t\tvar _v0 = room.members;\n\t\tif (!_v0.b) {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$padding(device),\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$spacing(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t$author$project$Type$User$bgColor(room.owner)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t$author$project$Type$User$fgColor(room.owner)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t$author$project$Type$User$fgColor(room.owner)),\n\t\t\t\t\t\t$author$project$UI$RoundedBorder$small(device)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Occupants')),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Tag$view, device, currentUser),\n\t\t\t\t\t\t\t\t\t\troom.members)))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$roomOccupantsView = F4(\n\tfunction (device, currentUser, room, lobby) {\n\t\tvar _v0 = A2($author$project$Type$Lobby$roomAction, room, lobby);\n\t\tif (_v0.$ === 'Inspecting') {\n\t\t\tvar room_ = _v0.a;\n\t\t\treturn _Utils_eq(room_.id, room.id) ? _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$above(\n\t\t\t\t\t\t\t\tA3($author$project$View$MultiRoomChat$Lobby$occupantsList, device, currentUser, room))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$none))\n\t\t\t\t]) : _List_Nil;\n\t\t} else {\n\t\t\treturn _List_Nil;\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$toRoom = F3(\n\tfunction (device, _v0, room) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA4($author$project$View$MultiRoomChat$Lobby$roomOccupantsView, device, config.user, room, config.lobby),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$append,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA3($author$project$View$MultiRoomChat$Lobby$roomAttrs, room, config.onMouseEnterRoom, config.onMouseLeaveRoom))),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t'Occupants: ' + $elm$core$String$fromInt(\n\t\t\t\t\t\t$elm$core$List$length(room.members))),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignRight,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tvar _v1 = A2($author$project$Type$Lobby$roomAction, room, config.lobby);\n\t\t\t\t\t\t\tif (_v1.$ === 'Entering') {\n\t\t\t\t\t\t\t\tvar room_ = _v1.a;\n\t\t\t\t\t\t\t\treturn _Utils_eq(room_.id, room.id) ? $mdgriffith$elm_ui$Element$text('Entering...') : A3(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$maybeEnterBtn,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$maybeEnterBtn,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tvar _v2 = A2($author$project$Type$Lobby$roomAction, room, config.lobby);\n\t\t\t\t\t\t\tif (_v2.$ === 'Deleting') {\n\t\t\t\t\t\t\t\tvar room_ = _v2.a;\n\t\t\t\t\t\t\t\treturn _Utils_eq(room_.id, room.id) ? $mdgriffith$elm_ui$Element$text('Deleting...') : A3(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$maybeDeleteBtn,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$maybeDeleteBtn,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\troom,\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}()\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$toRoomList = F3(\n\tfunction (device, config, _v0) {\n\t\tvar user = config.a.user;\n\t\tvar owner = _v0.a;\n\t\tvar rooms_ = _v0.b;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\tA3($author$project$View$Tag$view, device, user, owner)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$toRoom, device, config),\n\t\t\t\t\t\trooms_))\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$roomsView = F2(\n\tfunction (device, config) {\n\t\tvar c = config.a;\n\t\tvar _v0 = c.lobby.rooms;\n\t\tif (!_v0.a.b) {\n\t\t\tif (!_v0.b.b) {\n\t\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t\t} else {\n\t\t\t\tvar othersRooms = _v0.b;\n\t\t\t\treturn $author$project$View$MultiRoomChat$Lobby$roomsContainer(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$toRoomList, device, config),\n\t\t\t\t\t\tothersRooms));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_v0.b.b) {\n\t\t\t\tvar currentUserRooms = _v0.a;\n\t\t\t\treturn $author$project$View$MultiRoomChat$Lobby$roomsContainer(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$toRoomList,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t_Utils_Tuple2(c.user, currentUserRooms))\n\t\t\t\t\t\t]));\n\t\t\t} else {\n\t\t\t\tvar currentUserRooms = _v0.a;\n\t\t\t\tvar othersRooms = _v0.b;\n\t\t\t\treturn $author$project$View$MultiRoomChat$Lobby$roomsContainer(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$toRoomList,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\tconfig,\n\t\t\t\t\t\t\t_Utils_Tuple2(c.user, currentUserRooms)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$toRoomList, device, config),\n\t\t\t\t\t\t\tothersRooms)));\n\t\t\t}\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$Font$alignLeft = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.textLeft);\nvar $author$project$View$MultiRoomChat$Lobby$alignFont = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\tif ((_v1.a.$ === 'Phone') && (_v1.b.$ === 'Portrait')) {\n\t\tvar _v2 = _v1.a;\n\t\tvar _v3 = _v1.b;\n\t\treturn $mdgriffith$elm_ui$Element$Font$center;\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$Font$alignLeft;\n\t}\n};\nvar $author$project$UI$FontColor$label = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$lavender);\nvar $author$project$View$MultiRoomChat$Lobby$paragraph = function (text) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\ttext);\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$black = A3($mdgriffith$elm_ui$Element$rgb255, 0, 0, 0);\nvar $author$project$UI$FontColor$value = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$black);\nvar $author$project$View$MultiRoomChat$Lobby$userView = F2(\n\tfunction (device, currentUser) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$alignFont(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold, $author$project$UI$FontColor$label]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Username: ')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$author$project$UI$FontColor$value]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t\t$author$project$Type$User$username(currentUser)))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$subTitle\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Rooms')),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$paragraph(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('- A Room is opened when the owner of the Room enters it.')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$paragraph(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('- A Room can only be entered by a guest after it has been opened by the owner.')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$paragraph(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('- When the owner leaves a room it will close and all occupants will return to the lobby. ')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$paragraph(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('- When a room closes, the messages will be retained until the room is deleted by the owner.')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$paragraph(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('- A room is deleted when it\\'s owner leaves this Example, or when the Delete button is clicked.')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Lobby$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(\n\t\t\t\t\t$author$project$Type$User$hasInvites(config.user) ? A2(\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roomInvite,\n\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config)) : $mdgriffith$elm_ui$Element$none)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$container,\n\t\t\t\t\tdevice,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$UI$BackgroundColor$panel,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$panel\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$userView, device, config.user),\n\t\t\t\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$createRoomBtn, device, config.onCreateRoom)\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA3($author$project$View$MultiRoomChat$Lobby$occupantsView, device, config.user, config.lobby.occupants),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$roomsView,\n\t\t\t\t\tdevice,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$Config(config))\n\t\t\t\t]));\n\t});\nvar $phollyer$elm_ui_colors$Colors$Alpha$antiquewhite = A3($mdgriffith$elm_ui$Element$rgba255, 250, 235, 215);\nvar $phollyer$elm_ui_colors$Colors$Alpha$beige = A3($mdgriffith$elm_ui$Element$rgba255, 245, 245, 220);\nvar $phollyer$elm_ui_colors$Colors$Alpha$black = A3($mdgriffith$elm_ui$Element$rgba255, 0, 0, 0);\nvar $phollyer$elm_ui_colors$Colors$Alpha$blue = A3($mdgriffith$elm_ui$Element$rgba255, 0, 0, 255);\nvar $phollyer$elm_ui_colors$Colors$Alpha$chocolate = A3($mdgriffith$elm_ui$Element$rgba255, 210, 105, 30);\nvar $phollyer$elm_ui_colors$Colors$Alpha$crimson = A3($mdgriffith$elm_ui$Element$rgba255, 220, 20, 60);\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkgreen = A3($mdgriffith$elm_ui$Element$rgba255, 0, 100, 0);\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkgray = A3($mdgriffith$elm_ui$Element$rgba255, 169, 169, 169);\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkgrey = $phollyer$elm_ui_colors$Colors$Alpha$darkgray;\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkorchid = A3($mdgriffith$elm_ui$Element$rgba255, 153, 50, 204);\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkred = A3($mdgriffith$elm_ui$Element$rgba255, 139, 0, 0);\nvar $phollyer$elm_ui_colors$Colors$Alpha$darkslateblue = A3($mdgriffith$elm_ui$Element$rgba255, 72, 61, 139);\nvar $phollyer$elm_ui_colors$Colors$Alpha$deeppink = A3($mdgriffith$elm_ui$Element$rgba255, 255, 20, 147);\nvar $phollyer$elm_ui_colors$Colors$Alpha$dimgray = A3($mdgriffith$elm_ui$Element$rgba255, 105, 105, 105);\nvar $phollyer$elm_ui_colors$Colors$Alpha$dimgrey = $phollyer$elm_ui_colors$Colors$Alpha$dimgray;\nvar $phollyer$elm_ui_colors$Colors$Alpha$dodgerblue = A3($mdgriffith$elm_ui$Element$rgba255, 30, 144, 255);\nvar $phollyer$elm_ui_colors$Colors$Alpha$firebrick = A3($mdgriffith$elm_ui$Element$rgba255, 178, 34, 34);\nvar $phollyer$elm_ui_colors$Colors$Alpha$green = A3($mdgriffith$elm_ui$Element$rgba255, 0, 128, 0);\nvar $phollyer$elm_ui_colors$Colors$Alpha$gray = A3($mdgriffith$elm_ui$Element$rgba255, 128, 128, 128);\nvar $phollyer$elm_ui_colors$Colors$Alpha$grey = $phollyer$elm_ui_colors$Colors$Alpha$gray;\nvar $phollyer$elm_ui_colors$Colors$Alpha$hotpink = A3($mdgriffith$elm_ui$Element$rgba255, 255, 105, 180);\nvar $phollyer$elm_ui_colors$Colors$Alpha$indianred = A3($mdgriffith$elm_ui$Element$rgba255, 205, 92, 92);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lavender = A3($mdgriffith$elm_ui$Element$rgba255, 230, 230, 250);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightYellow1 = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 204);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightYellow2 = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 153);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightYellow3 = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 102);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightYellow4 = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 51);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightgreen = A3($mdgriffith$elm_ui$Element$rgba255, 144, 238, 144);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightpink = A3($mdgriffith$elm_ui$Element$rgba255, 255, 182, 193);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightsalmon = A3($mdgriffith$elm_ui$Element$rgba255, 255, 160, 122);\nvar $phollyer$elm_ui_colors$Colors$Alpha$lightskyblue = A3($mdgriffith$elm_ui$Element$rgba255, 135, 206, 250);\nvar $phollyer$elm_ui_colors$Colors$Alpha$mediumseagreen = A3($mdgriffith$elm_ui$Element$rgba255, 60, 179, 113);\nvar $phollyer$elm_ui_colors$Colors$Alpha$mediumvioletred = A3($mdgriffith$elm_ui$Element$rgba255, 199, 21, 133);\nvar $phollyer$elm_ui_colors$Colors$Alpha$mistyrose = A3($mdgriffith$elm_ui$Element$rgba255, 255, 228, 255);\nvar $phollyer$elm_ui_colors$Colors$Alpha$navajowhite = A3($mdgriffith$elm_ui$Element$rgba255, 255, 222, 173);\nvar $phollyer$elm_ui_colors$Colors$Alpha$orchid = A3($mdgriffith$elm_ui$Element$rgba255, 218, 112, 214);\nvar $phollyer$elm_ui_colors$Colors$Alpha$palevioletred = A3($mdgriffith$elm_ui$Element$rgba255, 219, 112, 147);\nvar $phollyer$elm_ui_colors$Colors$Alpha$peru = A3($mdgriffith$elm_ui$Element$rgba255, 205, 133, 63);\nvar $phollyer$elm_ui_colors$Colors$Alpha$plum = A3($mdgriffith$elm_ui$Element$rgba255, 221, 160, 221);\nvar $phollyer$elm_ui_colors$Colors$Alpha$powderblue = A3($mdgriffith$elm_ui$Element$rgba255, 176, 224, 230);\nvar $phollyer$elm_ui_colors$Colors$Alpha$purple = A3($mdgriffith$elm_ui$Element$rgba255, 128, 0, 128);\nvar $phollyer$elm_ui_colors$Colors$Alpha$saddlebrown = A3($mdgriffith$elm_ui$Element$rgba255, 139, 69, 19);\nvar $phollyer$elm_ui_colors$Colors$Alpha$seagreen = A3($mdgriffith$elm_ui$Element$rgba255, 46, 139, 87);\nvar $phollyer$elm_ui_colors$Colors$Alpha$sienna = A3($mdgriffith$elm_ui$Element$rgba255, 160, 82, 45);\nvar $phollyer$elm_ui_colors$Colors$Alpha$silver = A3($mdgriffith$elm_ui$Element$rgba255, 192, 192, 192);\nvar $phollyer$elm_ui_colors$Colors$Alpha$tan = A3($mdgriffith$elm_ui$Element$rgba255, 210, 180, 140);\nvar $phollyer$elm_ui_colors$Colors$Alpha$yellow = A3($mdgriffith$elm_ui$Element$rgba255, 255, 255, 0);\nvar $author$project$View$MultiRoomChat$Registration$colors = _List_fromArray(\n\t[\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$white(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$beige(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$antiquewhite(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$mistyrose(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$navajowhite(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightsalmon(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$indianred(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$crimson(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$firebrick(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$darkred(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightgreen(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$mediumseagreen(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$seagreen(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$green(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$darkgreen(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$powderblue(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightskyblue(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$dodgerblue(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$blue(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$darkslateblue(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightYellow1(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightYellow2(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightYellow3(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightYellow4(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$yellow(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lightpink(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$palevioletred(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$hotpink(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$deeppink(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$mediumvioletred(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$lavender(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$plum(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$orchid(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$darkorchid(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$purple(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$tan(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$peru(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$chocolate(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$sienna(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$saddlebrown(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$silver(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$darkgrey(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$grey(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$dimgrey(1),\n\t\t$phollyer$elm_ui_colors$Colors$Alpha$black(1)\n\t]);\nvar $elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2($elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn $elm$core$List$reverse(\n\t\t\tA3($elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar $elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _v0 = _Utils_Tuple2(n, list);\n\t\t\t_v0$1:\n\t\t\twhile (true) {\n\t\t\t\t_v0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_v0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_v0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\t\t\tvar y = _v3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v4.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b && _v0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v7.a;\n\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v8.a;\n\t\t\t\t\t\t\t\t\t\tvar _v9 = _v8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v9.a;\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _v10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _v10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_v0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar x = _v1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar $elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3($elm$core$List$takeFast, 0, n, list);\n\t});\nvar $elm_community$list_extra$List$Extra$greedyGroupsOfWithStep = F3(\n\tfunction (size, step, xs) {\n\t\tvar xs_ = A2($elm$core$List$drop, step, xs);\n\t\tvar okayXs = $elm$core$List$length(xs) > 0;\n\t\tvar okayArgs = (size > 0) && (step > 0);\n\t\treturn (okayArgs && okayXs) ? A2(\n\t\t\t$elm$core$List$cons,\n\t\t\tA2($elm$core$List$take, size, xs),\n\t\t\tA3($elm_community$list_extra$List$Extra$greedyGroupsOfWithStep, size, step, xs_)) : _List_Nil;\n\t});\nvar $elm_community$list_extra$List$Extra$greedyGroupsOf = F2(\n\tfunction (size, xs) {\n\t\treturn A3($elm_community$list_extra$List$Extra$greedyGroupsOfWithStep, size, size, xs);\n\t});\nvar $author$project$View$MultiRoomChat$Registration$colorAttrs = F3(\n\tfunction (maybeAltColor, maybeSelected, color) {\n\t\treturn _List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(25)),\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t$mdgriffith$elm_ui$Element$px(25)),\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t$phollyer$elm_ui_colors$Colors$Alpha$black(1)),\n\t\t\t\t(_Utils_eq(\n\t\t\t\t$elm$core$Maybe$Just(color),\n\t\t\t\tmaybeAltColor) || _Utils_eq(\n\t\t\t\t$elm$core$Maybe$Just(color),\n\t\t\t\tmaybeSelected)) ? $mdgriffith$elm_ui$Element$Border$rounded(12) : $mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(\n\t\t\t\t_Utils_eq(\n\t\t\t\t\t$elm$core$Maybe$Just(color),\n\t\t\t\t\tmaybeSelected) ? 3 : 1),\n\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(color)\n\t\t\t]);\n\t});\nvar $author$project$View$MultiRoomChat$Registration$toColor = F4(\n\tfunction (toMsg, maybeAltColor, maybeSelected, color) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA3($author$project$View$MultiRoomChat$Registration$colorAttrs, maybeAltColor, maybeSelected, color),\n\t\t\t\t_Utils_eq(\n\t\t\t\t\t$elm$core$Maybe$Just(color),\n\t\t\t\t\tmaybeAltColor) ? _List_Nil : _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\ttoMsg(color))\n\t\t\t\t\t])),\n\t\t\t$mdgriffith$elm_ui$Element$none);\n\t});\nvar $author$project$View$MultiRoomChat$Registration$colorRows = F4(\n\tfunction (_v0, maybeMsg, selectedColor, altColor) {\n\t\tvar _class = _v0._class;\n\t\tvar orientation = _v0.orientation;\n\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar toMsg = maybeMsg.a;\n\t\t\tvar numPerRow = function () {\n\t\t\t\tvar _v2 = _Utils_Tuple2(_class, orientation);\n\t\t\t\tif ((_v2.a.$ === 'Phone') && (_v2.b.$ === 'Portrait')) {\n\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\tvar _v4 = _v2.b;\n\t\t\t\t\treturn 5;\n\t\t\t\t} else {\n\t\t\t\t\treturn 10;\n\t\t\t\t}\n\t\t\t}();\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (row) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\trow);\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\t$elm_community$list_extra$List$Extra$greedyGroupsOf,\n\t\t\t\t\tnumPerRow,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA3($author$project$View$MultiRoomChat$Registration$toColor, toMsg, altColor, selectedColor),\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$colors)));\n\t\t}\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$pink = A3($mdgriffith$elm_ui$Element$rgb255, 255, 192, 203);\nvar $author$project$UI$FontColor$error = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$pink);\nvar $author$project$Type$ErrorMessage$toString = function (error) {\n\tswitch (error.$) {\n\t\tcase 'UsernameCannotBeBlank':\n\t\t\treturn 'Username can not be empty';\n\t\tcase 'UsernamePartsCannotBeMoreThan12Chars':\n\t\t\treturn 'Username parts can not be longer than 12 chars';\n\t\tcase 'UsernameCannotBeMoreThan25Chars':\n\t\t\treturn 'Username can not be longer than 25 chars';\n\t\tcase 'BackgroundColorNotSelected':\n\t\t\treturn 'A Background Color must be seleceted';\n\t\tcase 'ForegroundColorNotSelected':\n\t\t\treturn 'A Foreground Color must be selected';\n\t\tdefault:\n\t\t\treturn 'That room has now closed';\n\t}\n};\nvar $author$project$View$MultiRoomChat$Registration$errorView = function (maybeError) {\n\tif (maybeError.$ === 'Nothing') {\n\t\treturn $mdgriffith$elm_ui$Element$none;\n\t} else {\n\t\tvar error = maybeError.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[$author$project$UI$FontColor$error]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t$author$project$Type$ErrorMessage$toString(error))\n\t\t\t\t]));\n\t}\n};\nvar $author$project$View$MultiRoomChat$Registration$padding = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$padding(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$UI$FontColor$panelHeader = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$aliceblue);\nvar $author$project$View$MultiRoomChat$Registration$roundedBorder = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 14;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Registration$formSpacing = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$spacing(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Registration$section = function (device) {\n\treturn $mdgriffith$elm_ui$Element$column(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$View$MultiRoomChat$Registration$formSpacing(device),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]));\n};\nvar $author$project$View$MultiRoomChat$Registration$spacing = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$spacing(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 15;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$UI$FontSize$title = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tif (_class.$ === 'Phone') {\n\t\t\t\treturn 18;\n\t\t\t} else {\n\t\t\t\treturn 30;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Registration$colorsView = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$spacing(device)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$section,\n\t\t\t\t\tdevice,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$panelHeader,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontSize$title(device)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Select a Background Color')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA4($author$project$View$MultiRoomChat$Registration$colorRows, device, config.onBackgroundColorChange, config.currentUser.backgroundColor, config.currentUser.foregroundColor)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$errorView(config.currentUser.backgroundColorError))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$section,\n\t\t\t\t\tdevice,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$panelHeader,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontSize$title(device)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Select a Foreground Color')),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA4($author$project$View$MultiRoomChat$Registration$colorRows, device, config.onForegroundColorChange, config.currentUser.foregroundColor, config.currentUser.backgroundColor)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$errorView(config.currentUser.foregroundColorError))\n\t\t\t\t\t\t])),\n\t\t\t\t\tfunction () {\n\t\t\t\t\tvar _v1 = _Utils_Tuple3(\n\t\t\t\t\t\tconfig.currentUser.foregroundColor,\n\t\t\t\t\t\tconfig.currentUser.backgroundColor,\n\t\t\t\t\t\t!$elm$core$String$isEmpty(config.currentUser.username));\n\t\t\t\t\tif (((_v1.a.$ === 'Just') && (_v1.b.$ === 'Just')) && _v1.c) {\n\t\t\t\t\t\tvar fgColor = _v1.a.a;\n\t\t\t\t\t\tvar bgColor = _v1.b.a;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$panelHeader,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$UI$FontSize$title(device)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Preview')),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$padding(device),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$roundedBorder(device),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(bgColor),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(fgColor),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(fgColor)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(config.currentUser.username)\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t\t\t\t}\n\t\t\t\t}()\n\t\t\t\t]));\n\t});\nvar $author$project$View$InputField$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$InputField$init = $author$project$View$InputField$Config(\n\t{label: '', multiline: false, onChange: $elm$core$Maybe$Nothing, onFocus: $elm$core$Maybe$Nothing, onLoseFocus: $elm$core$Maybe$Nothing, text: ''});\nvar $author$project$View$InputField$label = F2(\n\tfunction (label_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{label: label_}));\n\t});\nvar $author$project$View$InputField$onChange = F2(\n\tfunction (maybeToMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onChange: maybeToMsg}));\n\t});\nvar $author$project$View$InputField$text = F2(\n\tfunction (name, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{text: name}));\n\t});\nvar $author$project$Utils$andMaybeEventWith = F3(\n\tfunction (maybeMsg, toEvent, attrs) {\n\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\treturn attrs;\n\t\t} else {\n\t\t\tvar msg = maybeMsg.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\ttoEvent(msg),\n\t\t\t\tattrs);\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$Input$HiddenLabel = function (a) {\n\treturn {$: 'HiddenLabel', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$labelHidden = $mdgriffith$elm_ui$Element$Input$HiddenLabel;\nvar $mdgriffith$elm_ui$Element$Input$TextArea = {$: 'TextArea'};\nvar $mdgriffith$elm_ui$Internal$Model$LivePolite = {$: 'LivePolite'};\nvar $mdgriffith$elm_ui$Element$Region$announce = $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$LivePolite);\nvar $mdgriffith$elm_ui$Element$Input$applyLabel = F3(\n\tfunction (attrs, label, input) {\n\t\tif (label.$ === 'HiddenLabel') {\n\t\t\tvar labelText = label.a;\n\t\t\treturn A4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\tattrs,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[input])));\n\t\t} else {\n\t\t\tvar position = label.a;\n\t\t\tvar labelAttrs = label.b;\n\t\t\tvar labelChild = label.c;\n\t\t\tvar labelElement = A4(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\tlabelAttrs,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[labelChild])));\n\t\t\tswitch (position.$) {\n\t\t\t\tcase 'Above':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[labelElement, input])));\n\t\t\t\tcase 'Below':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[input, labelElement])));\n\t\t\t\tcase 'OnRight':\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[input, labelElement])));\n\t\t\t\tdefault:\n\t\t\t\t\treturn A4(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('label'),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),\n\t\t\t\t\t\t\tattrs),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[labelElement, input])));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;\nvar $mdgriffith$elm_ui$Element$Input$autofill = A2(\n\t$elm$core$Basics$composeL,\n\t$mdgriffith$elm_ui$Internal$Model$Attr,\n\t$elm$html$Html$Attributes$attribute('autocomplete'));\nvar $mdgriffith$elm_ui$Internal$Model$Behind = {$: 'Behind'};\nvar $mdgriffith$elm_ui$Element$behindContent = function (element) {\n\treturn A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Behind, element);\n};\nvar $mdgriffith$elm_ui$Internal$Model$MoveY = function (a) {\n\treturn {$: 'MoveY', a: a};\n};\nvar $mdgriffith$elm_ui$Internal$Flag$moveY = $mdgriffith$elm_ui$Internal$Flag$flag(26);\nvar $mdgriffith$elm_ui$Element$moveUp = function (y) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$TransformComponent,\n\t\t$mdgriffith$elm_ui$Internal$Flag$moveY,\n\t\t$mdgriffith$elm_ui$Internal$Model$MoveY(-y));\n};\nvar $mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding = function (attrs) {\n\tvar gatherSpacing = F2(\n\t\tfunction (attr, found) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {\n\t\t\t\tvar _v2 = attr.b;\n\t\t\t\tvar x = _v2.b;\n\t\t\t\tvar y = _v2.c;\n\t\t\t\tif (found.$ === 'Nothing') {\n\t\t\t\t\treturn $elm$core$Maybe$Just(y);\n\t\t\t\t} else {\n\t\t\t\t\treturn found;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn found;\n\t\t\t}\n\t\t});\n\tvar _v0 = A3($elm$core$List$foldr, gatherSpacing, $elm$core$Maybe$Nothing, attrs);\n\tif (_v0.$ === 'Nothing') {\n\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t} else {\n\t\tvar vSpace = _v0.a;\n\t\treturn $mdgriffith$elm_ui$Element$moveUp(\n\t\t\t$elm$core$Basics$floor(vSpace / 2));\n\t}\n};\nvar $mdgriffith$elm_ui$Element$rgb = F3(\n\tfunction (r, g, b) {\n\t\treturn A4($mdgriffith$elm_ui$Internal$Model$Rgba, r, g, b, 1);\n\t});\nvar $mdgriffith$elm_ui$Element$Input$darkGrey = A3($mdgriffith$elm_ui$Element$rgb, 186 / 255, 189 / 255, 182 / 255);\nvar $mdgriffith$elm_ui$Element$Input$defaultTextPadding = A2($mdgriffith$elm_ui$Element$paddingXY, 12, 12);\nvar $mdgriffith$elm_ui$Element$Input$white = A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);\nvar $mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle = _List_fromArray(\n\t[\n\t\t$mdgriffith$elm_ui$Element$Input$defaultTextPadding,\n\t\t$mdgriffith$elm_ui$Element$Border$rounded(3),\n\t\t$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$darkGrey),\n\t\t$mdgriffith$elm_ui$Element$Background$color($mdgriffith$elm_ui$Element$Input$white),\n\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)\n\t]);\nvar $mdgriffith$elm_ui$Element$Input$getHeight = function (attr) {\n\tif (attr.$ === 'Height') {\n\t\tvar h = attr.a;\n\t\treturn $elm$core$Maybe$Just(h);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $mdgriffith$elm_ui$Internal$Model$Label = function (a) {\n\treturn {$: 'Label', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute = function (label) {\n\tif (label.$ === 'HiddenLabel') {\n\t\tvar textLabel = label.a;\n\t\treturn $mdgriffith$elm_ui$Internal$Model$Describe(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Label(textLabel));\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isConstrained = function (len) {\n\tisConstrained:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn true;\n\t\t\tcase 'Fill':\n\t\t\t\treturn true;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isConstrained;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\treturn true;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isHiddenLabel = function (label) {\n\tif (label.$ === 'HiddenLabel') {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isStacked = function (label) {\n\tif (label.$ === 'Label') {\n\t\tvar loc = label.a;\n\t\tswitch (loc.$) {\n\t\t\tcase 'OnRight':\n\t\t\t\treturn false;\n\t\t\tcase 'OnLeft':\n\t\t\t\treturn false;\n\t\t\tcase 'Above':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t} else {\n\t\treturn true;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$negateBox = function (box) {\n\treturn {bottom: -box.bottom, left: -box.left, right: -box.right, top: -box.top};\n};\nvar $elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 'MayStopPropagation', a: a};\n};\nvar $elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar $elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar $elm$html$Html$Events$targetValue = A2(\n\t$elm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\t$elm$json$Json$Decode$string);\nvar $elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\t$elm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$elm$html$Html$Events$alwaysStop,\n\t\t\tA2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));\n};\nvar $mdgriffith$elm_ui$Element$Input$isFill = function (len) {\n\tisFill:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Fill':\n\t\t\t\treturn true;\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn false;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isFill;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isFill;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$isPixel = function (len) {\n\tisPixel:\n\twhile (true) {\n\t\tswitch (len.$) {\n\t\t\tcase 'Content':\n\t\t\t\treturn false;\n\t\t\tcase 'Px':\n\t\t\t\treturn true;\n\t\t\tcase 'Fill':\n\t\t\t\treturn false;\n\t\t\tcase 'Min':\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isPixel;\n\t\t\tdefault:\n\t\t\t\tvar l = len.b;\n\t\t\t\tvar $temp$len = l;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tcontinue isPixel;\n\t\t}\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$redistributeOver = F4(\n\tfunction (isMultiline, stacked, attr, els) {\n\t\tswitch (attr.$) {\n\t\t\tcase 'Nearby':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t});\n\t\t\tcase 'Width':\n\t\t\t\tvar width = attr.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Element$Input$isFill(width) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : (stacked ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t}) : _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}));\n\t\t\tcase 'Height':\n\t\t\t\tvar height = attr.a;\n\t\t\t\treturn (!stacked) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : ($mdgriffith$elm_ui$Element$Input$isFill(height) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : ($mdgriffith$elm_ui$Element$Input$isPixel(height) ? _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t}) : _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t})));\n\t\t\tcase 'AlignX':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t});\n\t\t\tcase 'AlignY':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t});\n\t\t\tcase 'StyleClass':\n\t\t\t\tswitch (attr.b.$) {\n\t\t\t\t\tcase 'SpacingStyle':\n\t\t\t\t\t\tvar _v1 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent),\n\t\t\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent),\n\t\t\t\t\t\t\t\twrapper: A2($elm$core$List$cons, attr, els.wrapper)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'PaddingStyle':\n\t\t\t\t\t\tvar cls = attr.a;\n\t\t\t\t\t\tvar _v2 = attr.b;\n\t\t\t\t\t\tvar pad = _v2.a;\n\t\t\t\t\t\tvar t = _v2.b;\n\t\t\t\t\t\tvar r = _v2.c;\n\t\t\t\t\t\tvar b = _v2.d;\n\t\t\t\t\t\tvar l = _v2.e;\n\t\t\t\t\t\tif (isMultiline) {\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar newTop = t - A2($elm$core$Basics$min, t, b);\n\t\t\t\t\t\t\tvar newLineHeight = $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'line-height',\n\t\t\t\t\t\t\t\t\t'calc(1.0em + ' + ($elm$core$String$fromFloat(\n\t\t\t\t\t\t\t\t\t\t2 * A2($elm$core$Basics$min, t, b)) + 'px)')));\n\t\t\t\t\t\t\tvar newHeight = $mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t\t'calc(1.0em + ' + ($elm$core$String$fromFloat(\n\t\t\t\t\t\t\t\t\t\t2 * A2($elm$core$Basics$min, t, b)) + 'px)')));\n\t\t\t\t\t\t\tvar newBottom = b - A2($elm$core$Basics$min, t, b);\n\t\t\t\t\t\t\tvar reducedVerticalPadding = A2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Flag$padding,\n\t\t\t\t\t\t\t\tA5(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$PaddingStyle,\n\t\t\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, r, newBottom, l),\n\t\t\t\t\t\t\t\t\tnewTop,\n\t\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\t\tnewBottom,\n\t\t\t\t\t\t\t\t\tl));\n\t\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\t\tinput: A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\tnewHeight,\n\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, newLineHeight, els.input)),\n\t\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, reducedVerticalPadding, els.parent)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'BorderWidth':\n\t\t\t\t\t\tvar _v3 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'Transform':\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcover: A2($elm$core$List$cons, attr, els.cover),\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'FontSize':\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tcase 'FontFamily':\n\t\t\t\t\t\tvar _v4 = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfullParent: A2($elm$core$List$cons, attr, els.fullParent)\n\t\t\t\t\t\t\t});\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar flag = attr.a;\n\t\t\t\t\t\tvar cls = attr.b;\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tels,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\tcase 'NoAttribute':\n\t\t\t\treturn els;\n\t\t\tcase 'Attr':\n\t\t\t\tvar a = attr.a;\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t\tcase 'Describe':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t\tcase 'Class':\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tparent: A2($elm$core$List$cons, attr, els.parent)\n\t\t\t\t\t});\n\t\t\tdefault:\n\t\t\t\treturn _Utils_update(\n\t\t\t\t\tels,\n\t\t\t\t\t{\n\t\t\t\t\t\tinput: A2($elm$core$List$cons, attr, els.input)\n\t\t\t\t\t});\n\t\t}\n\t});\nvar $mdgriffith$elm_ui$Element$Input$redistribute = F3(\n\tfunction (isMultiline, stacked, attrs) {\n\t\treturn function (redist) {\n\t\t\treturn {\n\t\t\t\tcover: $elm$core$List$reverse(redist.cover),\n\t\t\t\tfullParent: $elm$core$List$reverse(redist.fullParent),\n\t\t\t\tinput: $elm$core$List$reverse(redist.input),\n\t\t\t\tparent: $elm$core$List$reverse(redist.parent),\n\t\t\t\twrapper: $elm$core$List$reverse(redist.wrapper)\n\t\t\t};\n\t\t}(\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tA2($mdgriffith$elm_ui$Element$Input$redistributeOver, isMultiline, stacked),\n\t\t\t\t{cover: _List_Nil, fullParent: _List_Nil, input: _List_Nil, parent: _List_Nil, wrapper: _List_Nil},\n\t\t\t\tattrs));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$renderBox = function (_v0) {\n\tvar top = _v0.top;\n\tvar right = _v0.right;\n\tvar bottom = _v0.bottom;\n\tvar left = _v0.left;\n\treturn $elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px'))))));\n};\nvar $mdgriffith$elm_ui$Internal$Model$Transparency = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Transparency', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Internal$Flag$transparency = $mdgriffith$elm_ui$Internal$Flag$flag(0);\nvar $mdgriffith$elm_ui$Element$alpha = function (o) {\n\tvar transparency = function (x) {\n\t\treturn 1 - x;\n\t}(\n\t\tA2(\n\t\t\t$elm$core$Basics$min,\n\t\t\t1.0,\n\t\t\tA2($elm$core$Basics$max, 0.0, o)));\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$transparency,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Transparency,\n\t\t\t'transparency-' + $mdgriffith$elm_ui$Internal$Model$floatClass(transparency),\n\t\t\ttransparency));\n};\nvar $mdgriffith$elm_ui$Element$Input$charcoal = A3($mdgriffith$elm_ui$Element$rgb, 136 / 255, 138 / 255, 133 / 255);\nvar $mdgriffith$elm_ui$Element$rgba = $mdgriffith$elm_ui$Internal$Model$Rgba;\nvar $mdgriffith$elm_ui$Element$Input$renderPlaceholder = F3(\n\tfunction (_v0, forPlaceholder, on) {\n\t\tvar placeholderAttrs = _v0.a;\n\t\tvar placeholderEl = _v0.b;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_Utils_ap(\n\t\t\t\tforPlaceholder,\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$charcoal),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t\tA4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alpha(\n\t\t\t\t\t\t\ton ? 1 : 0)\n\t\t\t\t\t\t]),\n\t\t\t\t\tplaceholderAttrs)),\n\t\t\tplaceholderEl);\n\t});\nvar $elm$html$Html$span = _VirtualDom_node('span');\nvar $elm$html$Html$Attributes$spellcheck = $elm$html$Html$Attributes$boolProperty('spellcheck');\nvar $mdgriffith$elm_ui$Element$Input$spellcheck = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$spellcheck);\nvar $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$unstyled = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Unstyled, $elm$core$Basics$always);\nvar $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');\nvar $mdgriffith$elm_ui$Element$Input$value = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$value);\nvar $mdgriffith$elm_ui$Element$Input$textHelper = F3(\n\tfunction (textInput, attrs, textOptions) {\n\t\tvar withDefaults = _Utils_ap($mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle, attrs);\n\t\tvar redistributed = A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$redistribute,\n\t\t\t_Utils_eq(textInput.type_, $mdgriffith$elm_ui$Element$Input$TextArea),\n\t\t\t$mdgriffith$elm_ui$Element$Input$isStacked(textOptions.label),\n\t\t\twithDefaults);\n\t\tvar onlySpacing = function (attr) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {\n\t\t\t\tvar _v9 = attr.b;\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\t\tvar heightConstrained = function () {\n\t\t\tvar _v7 = textInput.type_;\n\t\t\tif (_v7.$ === 'TextInputNode') {\n\t\t\t\tvar inputType = _v7.a;\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\tfalse,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$map,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$isConstrained,\n\t\t\t\t\t\t$elm$core$List$head(\n\t\t\t\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\t\t\t\tA2($elm$core$List$filterMap, $mdgriffith$elm_ui$Element$Input$getHeight, withDefaults)))));\n\t\t\t}\n\t\t}();\n\t\tvar getPadding = function (attr) {\n\t\t\tif ((attr.$ === 'StyleClass') && (attr.b.$ === 'PaddingStyle')) {\n\t\t\t\tvar cls = attr.a;\n\t\t\t\tvar _v6 = attr.b;\n\t\t\t\tvar pad = _v6.a;\n\t\t\t\tvar t = _v6.b;\n\t\t\t\tvar r = _v6.c;\n\t\t\t\tvar b = _v6.d;\n\t\t\t\tvar l = _v6.e;\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t{\n\t\t\t\t\t\tbottom: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(b - 3)),\n\t\t\t\t\t\tleft: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(l - 3)),\n\t\t\t\t\t\tright: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(r - 3)),\n\t\t\t\t\t\ttop: A2(\n\t\t\t\t\t\t\t$elm$core$Basics$max,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t$elm$core$Basics$floor(t - 3))\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t}\n\t\t};\n\t\tvar parentPadding = A2(\n\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t{bottom: 0, left: 0, right: 0, top: 0},\n\t\t\t$elm$core$List$head(\n\t\t\t\t$elm$core$List$reverse(\n\t\t\t\t\tA2($elm$core$List$filterMap, getPadding, withDefaults))));\n\t\tvar inputElement = A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\tfunction () {\n\t\t\t\tvar _v3 = textInput.type_;\n\t\t\t\tif (_v3.$ === 'TextInputNode') {\n\t\t\t\t\tvar inputType = _v3.a;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName('input');\n\t\t\t\t} else {\n\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NodeName('textarea');\n\t\t\t\t}\n\t\t\t}(),\n\t\t\t_Utils_ap(\n\t\t\t\tfunction () {\n\t\t\t\t\tvar _v4 = textInput.type_;\n\t\t\t\t\tif (_v4.$ === 'TextInputNode') {\n\t\t\t\t\t\tvar inputType = _v4.a;\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$type_(inputType)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputText)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding(withDefaults),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paddingEach(parentPadding),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t'margin',\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$renderBox(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$negateBox(parentPadding)))),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$style, 'box-sizing', 'content-box'))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t}(),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$value(textOptions.text),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t$elm$html$Html$Events$onInput(textOptions.onChange)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(textOptions.label),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$spellcheck(textInput.spellchecked),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$NoAttribute,\n\t\t\t\t\t\t\tA2($elm$core$Maybe$map, $mdgriffith$elm_ui$Element$Input$autofill, textInput.autofill))\n\t\t\t\t\t\t]),\n\t\t\t\t\tredistributed.input)),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil));\n\t\tvar wrappedInput = function () {\n\t\t\tvar _v0 = textInput.type_;\n\t\t\tif (_v0.$ === 'TextArea') {\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t(heightConstrained ? $elm$core$List$cons($mdgriffith$elm_ui$Element$scrollbarY) : $elm$core$Basics$identity)(\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tredistributed.parent),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA4(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asParagraph,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$inFront(inputElement),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),\n\t\t\t\t\t\t\t\t\t\t\t\tredistributed.wrapper)))),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tif (textOptions.text === '') {\n\t\t\t\t\t\t\t\t\t\t\tvar _v1 = textOptions.placeholder;\n\t\t\t\t\t\t\t\t\t\t\tif (_v1.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('\\u00A0')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tvar place = _v1.a;\n\t\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, _List_Nil, textOptions.text === '')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$unstyled(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$span,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(textOptions.text + '\\u00A0')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])))\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}()))\n\t\t\t\t\t\t\t])));\n\t\t\t} else {\n\t\t\t\tvar inputType = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),\n\t\t\t\t\t\t\t$elm$core$List$concat(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tredistributed.parent,\n\t\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tvar _v2 = textOptions.placeholder;\n\t\t\t\t\t\t\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tvar place = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$behindContent(\n\t\t\t\t\t\t\t\t\t\t\t\t\tA3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, redistributed.cover, textOptions.text === ''))\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t\t\t\t])))),\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[inputElement])));\n\t\t\t}\n\t\t}();\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$applyLabel,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tA2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorText),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$isHiddenLabel(textOptions.label) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t\t\tA2($elm$core$List$cons, $mdgriffith$elm_ui$Element$Region$announce, redistributed.fullParent))),\n\t\t\ttextOptions.label,\n\t\t\twrappedInput);\n\t});\nvar $mdgriffith$elm_ui$Element$Input$multiline = F2(\n\tfunction (attrs, multi) {\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$textHelper,\n\t\t\t{autofill: $elm$core$Maybe$Nothing, spellchecked: multi.spellcheck, type_: $mdgriffith$elm_ui$Element$Input$TextArea},\n\t\t\tattrs,\n\t\t\t{label: multi.label, onChange: multi.onChange, placeholder: multi.placeholder, text: multi.text});\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Max = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Max', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$maximum = F2(\n\tfunction (i, l) {\n\t\treturn A2($mdgriffith$elm_ui$Internal$Model$Max, i, l);\n\t});\nvar $author$project$View$InputField$multilineAttrs = _List_fromArray(\n\t[\n\t\t$mdgriffith$elm_ui$Element$Border$rounded(5),\n\t\t$mdgriffith$elm_ui$Element$height(\n\t\tA2($mdgriffith$elm_ui$Element$maximum, 150, $mdgriffith$elm_ui$Element$fill)),\n\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t]);\nvar $elm$html$Html$Events$onFocus = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'focus',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onFocus = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onFocus);\nvar $elm$html$Html$Events$onBlur = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'blur',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $mdgriffith$elm_ui$Element$Events$onLoseFocus = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onBlur);\nvar $mdgriffith$elm_ui$Element$Input$Placeholder = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Placeholder', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$Input$placeholder = $mdgriffith$elm_ui$Element$Input$Placeholder;\nvar $author$project$View$InputField$placeholder = function (text_) {\n\treturn $elm$core$Maybe$Just(\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$placeholder,\n\t\t\t_List_Nil,\n\t\t\t$mdgriffith$elm_ui$Element$text(text_)));\n};\nvar $author$project$View$InputField$multi = F2(\n\tfunction (onChange_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$multiline,\n\t\t\tA3(\n\t\t\t\t$author$project$Utils$andMaybeEventWith,\n\t\t\t\tconfig.onLoseFocus,\n\t\t\t\t$mdgriffith$elm_ui$Element$Events$onLoseFocus,\n\t\t\t\tA3($author$project$Utils$andMaybeEventWith, config.onFocus, $mdgriffith$elm_ui$Element$Events$onFocus, $author$project$View$InputField$multilineAttrs)),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(config.label),\n\t\t\t\tonChange: onChange_,\n\t\t\t\tplaceholder: $author$project$View$InputField$placeholder(config.label),\n\t\t\t\tspellcheck: true,\n\t\t\t\ttext: config.text\n\t\t\t});\n\t});\nvar $author$project$View$InputField$singleLineAttrs = _List_fromArray(\n\t[\n\t\t$mdgriffith$elm_ui$Element$Border$rounded(5),\n\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t]);\nvar $mdgriffith$elm_ui$Element$Input$TextInputNode = function (a) {\n\treturn {$: 'TextInputNode', a: a};\n};\nvar $mdgriffith$elm_ui$Element$Input$text = $mdgriffith$elm_ui$Element$Input$textHelper(\n\t{\n\t\tautofill: $elm$core$Maybe$Nothing,\n\t\tspellchecked: false,\n\t\ttype_: $mdgriffith$elm_ui$Element$Input$TextInputNode('text')\n\t});\nvar $author$project$View$InputField$single = F2(\n\tfunction (onChange_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$text,\n\t\t\tA3(\n\t\t\t\t$author$project$Utils$andMaybeEventWith,\n\t\t\t\tconfig.onLoseFocus,\n\t\t\t\t$mdgriffith$elm_ui$Element$Events$onLoseFocus,\n\t\t\t\tA3($author$project$Utils$andMaybeEventWith, config.onFocus, $mdgriffith$elm_ui$Element$Events$onFocus, $author$project$View$InputField$singleLineAttrs)),\n\t\t\t{\n\t\t\t\tlabel: $mdgriffith$elm_ui$Element$Input$labelHidden(config.label),\n\t\t\t\tonChange: onChange_,\n\t\t\t\tplaceholder: $author$project$View$InputField$placeholder(config.label),\n\t\t\t\ttext: config.text\n\t\t\t});\n\t});\nvar $author$project$View$InputField$view = F2(\n\tfunction (_v0, _v1) {\n\t\tvar config = _v1.a;\n\t\tvar _v2 = config.onChange;\n\t\tif (_v2.$ === 'Nothing') {\n\t\t\treturn $mdgriffith$elm_ui$Element$text(config.text);\n\t\t} else {\n\t\t\tvar onChange_ = _v2.a;\n\t\t\treturn config.multiline ? A2(\n\t\t\t\t$author$project$View$InputField$multi,\n\t\t\t\tonChange_,\n\t\t\t\t$author$project$View$InputField$Config(config)) : A2(\n\t\t\t\t$author$project$View$InputField$single,\n\t\t\t\tonChange_,\n\t\t\t\t$author$project$View$InputField$Config(config));\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Registration$inputField = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$author$project$View$InputField$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$InputField$onChange,\n\t\t\t\tconfig.onChange,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$InputField$text,\n\t\t\t\t\tconfig.currentUser.username,\n\t\t\t\t\tA2($author$project$View$InputField$label, 'Username', $author$project$View$InputField$init))));\n\t});\nvar $author$project$View$MultiRoomChat$Registration$submitButton = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = config.onSubmit;\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('Joining Lobby...'));\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$author$project$View$Button$view,\n\t\t\t\tdevice,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\tconfig.onSubmit,\n\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Join Lobby', $author$project$View$Button$init)));\n\t\t}\n\t});\nvar $author$project$View$MultiRoomChat$Registration$form = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BackgroundColor$panel,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(20),\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$spacing(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$section,\n\t\t\t\t\tdevice,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$inputField,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$Config(config)),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$errorView(config.currentUser.usernameError)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$colorsView,\n\t\t\t\t\tdevice,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$Config(config)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$submitButton,\n\t\t\t\t\tdevice,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$Config(config))\n\t\t\t\t]));\n\t});\nvar $author$project$Type$Example$MultiRoomChat = {$: 'MultiRoomChat'};\nvar $author$project$UI$FontFamily$default = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('Varela Round')\n\t\t]));\nvar $author$project$UI$BorderWidth$borderEach = {bottom: 0, left: 0, right: 0, top: 0};\nvar $mdgriffith$elm_ui$Element$Border$widthXY = F2(\n\tfunction (x, y) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\t\tA5(\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t\t'b-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),\n\t\t\t\ty,\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tx));\n\t});\nvar $mdgriffith$elm_ui$Element$Border$widthEach = function (_v0) {\n\tvar bottom = _v0.bottom;\n\tvar top = _v0.top;\n\tvar left = _v0.left;\n\tvar right = _v0.right;\n\treturn (_Utils_eq(top, bottom) && _Utils_eq(left, right)) ? (_Utils_eq(top, right) ? $mdgriffith$elm_ui$Element$Border$width(top) : A2($mdgriffith$elm_ui$Element$Border$widthXY, left, top)) : A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$borderWidth,\n\t\tA5(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$BorderWidth,\n\t\t\t'b-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left))))))),\n\t\t\ttop,\n\t\t\tright,\n\t\t\tbottom,\n\t\t\tleft));\n};\nvar $author$project$UI$BorderWidth$bottom = function (amount) {\n\treturn $mdgriffith$elm_ui$Element$Border$widthEach(\n\t\t_Utils_update(\n\t\t\t$author$project$UI$BorderWidth$borderEach,\n\t\t\t{bottom: amount}));\n};\nvar $mdgriffith$elm_ui$Internal$Flag$borderStyle = $mdgriffith$elm_ui$Internal$Flag$flag(11);\nvar $mdgriffith$elm_ui$Element$Border$dashed = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$borderStyle, $mdgriffith$elm_ui$Internal$Style$classes.borderDashed);\nvar $author$project$UI$BorderColor$link = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$darkgray);\nvar $phollyer$elm_ui_colors$Colors$Opaque$dodgerblue = A3($mdgriffith$elm_ui$Element$rgb255, 30, 144, 255);\nvar $author$project$UI$FontColor$link = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$dodgerblue);\nvar $elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');\nvar $elm$html$Html$Attributes$target = $elm$html$Html$Attributes$stringProperty('target');\nvar $mdgriffith$elm_ui$Element$newTabLink = F2(\n\tfunction (attrs, _v0) {\n\t\tvar url = _v0.url;\n\t\tvar label = _v0.label;\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asEl,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$NodeName('a'),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t$elm$html$Html$Attributes$href(url)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t$elm$html$Html$Attributes$rel('noopener noreferrer')),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$target('_blank')),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.link)))),\n\t\t\t\t\t\t\t\t\tattrs)))))),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[label])));\n\t});\nvar $author$project$Type$Example$toString = function (example) {\n\tswitch (example.$) {\n\t\tcase 'ConnectWithBadParams':\n\t\t\treturn 'ConnectWithBadParams';\n\t\tcase 'ConnectWithGoodParams':\n\t\t\treturn 'ConnectWithGoodParams';\n\t\tcase 'JoinMultipleChannels':\n\t\t\treturn 'JoinMultipleChannels';\n\t\tcase 'JoinWithBadParams':\n\t\t\treturn 'JoinWithBadParams';\n\t\tcase 'JoinWithGoodParams':\n\t\t\treturn 'JoinWithGoodParams';\n\t\tcase 'MultiRoomChat':\n\t\t\treturn 'MultiRoomChat';\n\t\tcase 'PushMultipleEvents':\n\t\t\treturn 'PushMutipleEvents';\n\t\tcase 'PushOneEvent':\n\t\t\treturn 'PushOneEvent';\n\t\tcase 'PushWithTimeout':\n\t\t\treturn 'PushWithTimeout';\n\t\tcase 'ReceiveEvents':\n\t\t\treturn 'ReceiveEvents';\n\t\tcase 'SimpleConnect':\n\t\t\treturn 'SimpleConnect';\n\t\tdefault:\n\t\t\treturn 'SimpleJoinAndLeave';\n\t}\n};\nvar $author$project$Type$Example$toModule = function (example) {\n\treturn $author$project$Type$Example$toString(example) + '.elm';\n};\nvar $author$project$Type$Example$toSrc = function (example) {\n\treturn 'https://github.com/phollyer/elm-phoenix-websocket-example/blob/master/assets/elm/src/Example/' + $author$project$Type$Example$toModule(example);\n};\nvar $author$project$UI$Link$srcLink = function (example) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t_List_Nil,\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$dashed,\n\t\t\t\t\t\t$author$project$UI$BorderColor$link,\n\t\t\t\t\t\t$author$project$UI$BorderWidth$bottom(1),\n\t\t\t\t\t\t$author$project$UI$FontColor$link\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('here')),\n\t\t\turl: $author$project$Type$Example$toSrc(example)\n\t\t});\n};\nvar $author$project$View$MultiRoomChat$Registration$introduction = A2(\n\t$mdgriffith$elm_ui$Element$column,\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t$author$project$UI$FontFamily$default\n\t\t]),\n\t_List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Welcome,')\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('The main source code for this example can be found '),\n\t\t\t\t\t$author$project$UI$Link$srcLink($author$project$Type$Example$MultiRoomChat),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('.')\n\t\t\t\t])),\n\t\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Please enter a username, and select your identifying colors in order to join the Lobby.')\n\t\t\t\t]))\n\t\t]));\nvar $author$project$View$MultiRoomChat$Registration$width = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\treturn $mdgriffith$elm_ui$Element$width(\n\t\tfunction () {\n\t\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\t\tif (_v1.a.$ === 'Phone') {\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Element$fill;\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\tvar _v5 = _v1.b;\n\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 500, $mdgriffith$elm_ui$Element$fill);\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Registration$view = F2(\n\tfunction (device, config) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$width(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$introduction,\n\t\t\t\t\tA2($author$project$View$MultiRoomChat$Registration$form, device, config)\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Room$container = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t_v1$2:\n\twhile (true) {\n\t\tswitch (_v1.a.$) {\n\t\t\tcase 'Phone':\n\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Element$column(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]));\n\t\t\tcase 'Tablet':\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v3 = _v1.a;\n\t\t\t\t\tvar _v4 = _v1.b;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Element$column(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]));\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v1$2;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak _v1$2;\n\t\t}\n\t}\n\treturn $mdgriffith$elm_ui$Element$row(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 5, 0)\n\t\t\t]));\n};\nvar $mdgriffith$elm_ui$Element$fillPortion = $mdgriffith$elm_ui$Internal$Model$Fill;\nvar $author$project$View$InputField$multiline = F2(\n\tfunction (bool, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{multiline: bool}));\n\t});\nvar $author$project$View$InputField$onFocus = F2(\n\tfunction (maybeMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onFocus: maybeMsg}));\n\t});\nvar $author$project$View$InputField$onLoseFocus = F2(\n\tfunction (maybeMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$InputField$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onLoseFocus: maybeMsg}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$inputField = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$author$project$View$InputField$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$InputField$onLoseFocus,\n\t\t\t\tconfig.maybeOnLoseFocus,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$InputField$onFocus,\n\t\t\t\t\tconfig.maybeOnFocus,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$InputField$onChange,\n\t\t\t\t\t\tconfig.maybeOnChange,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$InputField$multiline,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$InputField$text,\n\t\t\t\t\t\t\t\tconfig.room.message,\n\t\t\t\t\t\t\t\tA2($author$project$View$InputField$label, 'New Message', $author$project$View$InputField$init)))))));\n\t});\nvar $author$project$View$Button$setEnabled = F2(\n\tfunction (enabled, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Button$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{enabled: enabled}));\n\t});\nvar $author$project$View$MultiRoomChat$Room$submitButton = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = config.maybeOnSubmit;\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn $mdgriffith$elm_ui$Element$text('Sending...');\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignBottom, $mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\t$elm$core$String$trim(config.room.message) !== '',\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\tconfig.maybeOnSubmit,\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Send Message', $author$project$View$Button$init)))));\n\t\t}\n\t});\nvar $author$project$UI$Padding$top = function (amount) {\n\treturn $mdgriffith$elm_ui$Element$paddingEach(\n\t\t_Utils_update(\n\t\t\t$author$project$UI$Padding$paddingEach,\n\t\t\t{top: amount}));\n};\nvar $author$project$View$MultiRoomChat$Room$form = F2(\n\tfunction (device, config) {\n\t\tvar _class = device._class;\n\t\tvar orientation = device.orientation;\n\t\tvar container_ = function () {\n\t\t\tvar _v0 = _Utils_Tuple2(_class, orientation);\n\t\t\tif ((_v0.a.$ === 'Phone') && (_v0.b.$ === 'Portrait')) {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\treturn $mdgriffith$elm_ui$Element$column;\n\t\t\t} else {\n\t\t\t\treturn $mdgriffith$elm_ui$Element$row;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\tcontainer_,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$Padding$top(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$MultiRoomChat$Room$inputField, device, config),\n\t\t\t\t\tA2($author$project$View$MultiRoomChat$Room$submitButton, device, config)\n\t\t\t\t]));\n\t});\nvar $author$project$View$Panel$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Panel$description = F2(\n\tfunction (desc, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Panel$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{description: desc}));\n\t});\nvar $author$project$View$Panel$element = F2(\n\tfunction (el, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Panel$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{element: el}));\n\t});\nvar $author$project$View$Panel$init = $author$project$View$Panel$Config(\n\t{description: _List_Nil, element: $mdgriffith$elm_ui$Element$none, onClick: $elm$core$Maybe$Nothing, title: ''});\nvar $author$project$View$MultiRoomChat$Room$padding = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$padding(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Room$occupantView = F3(\n\tfunction (device, _v0, user) {\n\t\tvar maybeOnClick = _v0.a.maybeOnClick;\n\t\tvar currentUser = _v0.a.currentUser;\n\t\tvar room = _v0.a.room;\n\t\tvar onClickEvent = function () {\n\t\t\tif (maybeOnClick.$ === 'Nothing') {\n\t\t\t\treturn _List_Nil;\n\t\t\t} else {\n\t\t\t\tvar onClick_ = maybeOnClick.a;\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\tonClick_(user))\n\t\t\t\t\t]);\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tonClickEvent,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$padding(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t\t$author$project$Type$User$bgColor(user)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t$author$project$Type$User$fgColor(user)),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\t\t$author$project$Type$User$bgColor(user)),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$shadow(\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tblur: 5,\n\t\t\t\t\t\t\t\t\tcolor: $author$project$Type$User$bgColor(user),\n\t\t\t\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\t\t\t\tsize: 1\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t\t$author$project$Type$User$fgColor(user)),\n\t\t\t\t\t\t$author$project$UI$RoundedBorder$small(device)\n\t\t\t\t\t])),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar _v1 = A3($author$project$Type$User$findInviteTo, user, room.id, currentUser);\n\t\t\t\t\t\t_v1$3:\n\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\tif (_v1.$ === 'Just') {\n\t\t\t\t\t\t\t\tswitch (_v1.a.a.$) {\n\t\t\t\t\t\t\t\t\tcase 'Inviting':\n\t\t\t\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\t\t\t\tvar _v3 = _v2.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Type$User$username(user) + ' (Inviting...)';\n\t\t\t\t\t\t\t\t\tcase 'Invited':\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Type$User$username(user) + ' (Invited)';\n\t\t\t\t\t\t\t\t\tcase 'Revoking':\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v1.a;\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn $author$project$Type$User$username(user) + ' (Revoking...)';\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak _v1$3;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v1$3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn $author$project$Type$User$username(user);\n\t\t\t\t\t}())\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Room$spacing = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$spacing(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 5;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 7;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Panel$title = F2(\n\tfunction (text, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Panel$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{title: text}));\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$lightskyblue = A3($mdgriffith$elm_ui$Element$rgb255, 135, 206, 250);\nvar $author$project$UI$BackgroundColor$panelContent = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$lightskyblue);\nvar $author$project$UI$FontSize$panelContent = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 12;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 16;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 18;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Panel$toParagraph = function (paragraph) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tparagraph);\n};\nvar $author$project$View$Panel$descriptionView = F2(\n\tfunction (device, paragraphs) {\n\t\tif (!paragraphs.b) {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$UI$BackgroundColor$panelContent,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$justify,\n\t\t\t\t\t\t$author$project$UI$FontFamily$default,\n\t\t\t\t\t\t$author$project$UI$FontSize$panelContent(device)\n\t\t\t\t\t]),\n\t\t\t\tA2($elm$core$List$map, $author$project$View$Panel$toParagraph, paragraphs));\n\t\t}\n\t});\nvar $author$project$UI$BorderColor$panel = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$steelblue);\nvar $author$project$UI$BorderWidth$top = function (amount) {\n\treturn $mdgriffith$elm_ui$Element$Border$widthEach(\n\t\t_Utils_update(\n\t\t\t$author$project$UI$BorderWidth$borderEach,\n\t\t\t{top: amount}));\n};\nvar $author$project$View$Panel$elementView = function (el) {\n\treturn _Utils_eq(el, $mdgriffith$elm_ui$Element$none) ? $mdgriffith$elm_ui$Element$none : A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$UI$BorderWidth$top(1),\n\t\t\t\t$author$project$UI$BorderColor$panel,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tel);\n};\nvar $author$project$UI$FontSize$panelHeader = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 16;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 20;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 22;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Panel$header = F2(\n\tfunction (device, text) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 5, 10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$FontColor$panelHeader,\n\t\t\t\t\t$author$project$UI$FontSize$panelHeader(device)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t\t])));\n\t});\nvar $mdgriffith$elm_ui$Internal$Model$Active = {$: 'Active'};\nvar $mdgriffith$elm_ui$Internal$Flag$active = $mdgriffith$elm_ui$Internal$Flag$flag(32);\nvar $mdgriffith$elm_ui$Element$mouseDown = function (decs) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Internal$Model$StyleClass,\n\t\t$mdgriffith$elm_ui$Internal$Flag$active,\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$PseudoSelector,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Active,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));\n};\nvar $author$project$UI$Shadow$panel = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$shadow(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 3,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$steelblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 1\n\t\t\t\t\t};\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 4,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$steelblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 1\n\t\t\t\t\t};\n\t\t\t\tdefault:\n\t\t\t\t\treturn {\n\t\t\t\t\t\tblur: 5,\n\t\t\t\t\t\tcolor: $phollyer$elm_ui_colors$Colors$Opaque$steelblue,\n\t\t\t\t\t\toffset: _Utils_Tuple2(0, 0),\n\t\t\t\t\t\tsize: 2\n\t\t\t\t\t};\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Panel$roundedBorder = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 14;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Panel$panelAttrs = F2(\n\tfunction (device, maybeMsg) {\n\t\treturn A2(\n\t\t\t$elm$core$List$append,\n\t\t\tfunction () {\n\t\t\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\t\t\treturn _List_Nil;\n\t\t\t\t} else {\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$pointer]);\n\t\t\t\t}\n\t\t\t}(),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Panel$roundedBorder(device),\n\t\t\t\t\t$author$project$UI$BackgroundColor$panel,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t$author$project$UI$BorderColor$panel,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$clip,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseDown(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$UI$Shadow$panel(device)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$UI$Shadow$panel(device)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]));\n\t});\nvar $author$project$View$Panel$panel = F2(\n\tfunction (device, maybeMsg) {\n\t\treturn $mdgriffith$elm_ui$Element$column(\n\t\t\tA3(\n\t\t\t\t$author$project$Utils$andMaybeEventWith,\n\t\t\t\tmaybeMsg,\n\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick,\n\t\t\t\tA2($author$project$View$Panel$panelAttrs, device, maybeMsg)));\n\t});\nvar $author$project$View$Panel$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\tA3(\n\t\t\t\t$author$project$View$Panel$panel,\n\t\t\t\tdevice,\n\t\t\t\tconfig.onClick,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($author$project$View$Panel$header, device, config.title),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$UI$BackgroundColor$panelContent,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2($author$project$View$Panel$descriptionView, device, config.description),\n\t\t\t\t\t\t\t\t$author$project$View$Panel$elementView(config.element)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])));\n\t});\nvar $author$project$View$MultiRoomChat$Room$lobbyOccupants = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Panel$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Panel$element,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$padding(device),\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$spacing(device),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$occupantView,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$Config(config)),\n\t\t\t\t\t\t\t\tconfig.inviteableUsers)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Panel$description,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Click on a user to invite them into the room. '),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Click them again to revoke the invitation.')\n\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2($author$project$View$Panel$title, 'Lobby Occupants', $author$project$View$Panel$init))))\n\t\t\t\t]));\n\t});\nvar $author$project$UI$RoundedBorder$large = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 15;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$white = A3($mdgriffith$elm_ui$Element$rgb255, 255, 255, 255);\nvar $author$project$UI$BackgroundColor$messages = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$white);\nvar $author$project$View$MultiRoomChat$Room$column = $mdgriffith$elm_ui$Element$column(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$spacing(5),\n\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t$mdgriffith$elm_ui$Element$fillPortion(5))\n\t\t]));\nvar $author$project$View$MultiRoomChat$Room$emptySpace = A2(\n\t$mdgriffith$elm_ui$Element$el,\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t$mdgriffith$elm_ui$Element$fillPortion(1))\n\t\t]),\n\t$mdgriffith$elm_ui$Element$none);\nvar $author$project$UI$RoundedBorder$medium = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Border$rounded(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 7;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 10;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 15;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$MultiRoomChat$Room$toParagraph = function (text) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tA2(\n\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t])));\n};\nvar $author$project$View$MultiRoomChat$Room$toParagraphs = function (text) {\n\treturn A2(\n\t\t$elm$core$List$map,\n\t\t$author$project$View$MultiRoomChat$Room$toParagraph,\n\t\tA2($elm$core$String$split, '\\n', text));\n};\nvar $author$project$View$MultiRoomChat$Room$messageContent = F4(\n\tfunction (device, alignment, owner, text) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\talignment,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$padding(device),\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$spacing(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color(\n\t\t\t\t\t$author$project$Type$User$bgColor(owner)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(owner)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color(\n\t\t\t\t\t$author$project$Type$User$fgColor(owner)),\n\t\t\t\t\t$author$project$UI$RoundedBorder$medium(device)\n\t\t\t\t]),\n\t\t\t$author$project$View$MultiRoomChat$Room$toParagraphs(text));\n\t});\nvar $author$project$View$MultiRoomChat$Room$row = $mdgriffith$elm_ui$Element$row(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t]));\nvar $author$project$View$MultiRoomChat$Room$othersMessage = F3(\n\tfunction (device, currentUser, _v0) {\n\t\tvar owner = _v0.owner;\n\t\tvar text = _v0.text;\n\t\treturn $author$project$View$MultiRoomChat$Room$row(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$column(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\tA3($author$project$View$Tag$view, device, currentUser, owner)),\n\t\t\t\t\t\t\tA4($author$project$View$MultiRoomChat$Room$messageContent, device, $mdgriffith$elm_ui$Element$alignLeft, owner, text)\n\t\t\t\t\t\t])),\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$emptySpace\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Room$userMessage = F3(\n\tfunction (device, currentUser, _v0) {\n\t\tvar text = _v0.text;\n\t\treturn $author$project$View$MultiRoomChat$Room$row(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$emptySpace,\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$column(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight]),\n\t\t\t\t\t\t\tA3($author$project$View$Tag$view, device, currentUser, currentUser)),\n\t\t\t\t\t\t\tA4($author$project$View$MultiRoomChat$Room$messageContent, device, $mdgriffith$elm_ui$Element$alignRight, currentUser, text)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$MultiRoomChat$Room$toMessage = F3(\n\tfunction (device, currentUser, message) {\n\t\treturn A2($author$project$Type$User$match, currentUser, message.owner) ? A3($author$project$View$MultiRoomChat$Room$userMessage, device, currentUser, message) : A3($author$project$View$MultiRoomChat$Room$othersMessage, device, currentUser, message);\n\t});\nvar $author$project$View$MultiRoomChat$Room$messagesView = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BackgroundColor$messages,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$htmlAttribute(\n\t\t\t\t\t$elm$html$Html$Attributes$id('message-list')),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$clipY,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$RoundedBorder$large(device)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$padding(device),\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$spacing(device),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2($author$project$View$MultiRoomChat$Room$toMessage, device, config.currentUser),\n\t\t\t\t\tconfig.room.messages)));\n\t});\nvar $author$project$View$MultiRoomChat$Room$occupantsContainer = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\tif (_v1.a.$ === 'Phone') {\n\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\tvar _v2 = _v1.a;\n\t\t\tvar _v3 = _v1.b;\n\t\t\treturn $mdgriffith$elm_ui$Element$column(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar _v4 = _v1.a;\n\t\t\tvar _v5 = _v1.b;\n\t\t\treturn $mdgriffith$elm_ui$Element$row(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t]));\n\t\t}\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$row(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$fillPortion(2)),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]));\n\t}\n};\nvar $author$project$View$MultiRoomChat$Room$occupantsTypingView = F2(\n\tfunction (device, _v0) {\n\t\tvar currentUser = _v0.a.currentUser;\n\t\tvar room = _v0.a.room;\n\t\treturn _Utils_eq(room.occupantsTyping, _List_Nil) ? $mdgriffith$elm_ui$Element$none : A2(\n\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$Padding$top(10)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$Font$bold, $author$project$UI$FontColor$label]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Members Typing: ')),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2($author$project$View$Tag$view, device, currentUser),\n\t\t\t\t\troom.occupantsTyping)));\n\t});\nvar $author$project$View$MultiRoomChat$Room$roomOccupants = F3(\n\tfunction (device, currentUser, occupants) {\n\t\treturn A2(\n\t\t\t$author$project$View$Panel$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Panel$element,\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$padding(device),\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$spacing(device),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$View$Tag$view, device, currentUser),\n\t\t\t\t\t\toccupants)),\n\t\t\t\tA2($author$project$View$Panel$title, 'Room Occupants', $author$project$View$Panel$init)));\n\t});\nvar $author$project$View$MultiRoomChat$Room$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$author$project$View$MultiRoomChat$Room$container,\n\t\t\tdevice,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(config.chatMaxHeight)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$fillPortion(3))\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$messagesView,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$Config(config)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$occupantsTypingView,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$Config(config)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$form,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$Config(config))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$occupantsContainer,\n\t\t\t\t\tdevice,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3($author$project$View$MultiRoomChat$Room$roomOccupants, device, config.currentUser, config.room.members),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$lobbyOccupants,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$Config(config))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$Example$MultiRoomChat$view = F2(\n\tfunction (device, _v0) {\n\t\tvar state = _v0.state;\n\t\tvar lobby = _v0.lobby;\n\t\tvar layoutHeight = _v0.layoutHeight;\n\t\tvar phoenix = _v0.phoenix;\n\t\tswitch (state.$) {\n\t\t\tcase 'Unregistered':\n\t\t\t\tvar user = state.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$onSubmit,\n\t\t\t\t\t\tA2($author$project$Phoenix$channelQueued, 'example:lobby', phoenix) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotJoinLobby(user)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$onForegroundColorChange,\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotForegroundColorSelection(user),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$onBackgroundColorChange,\n\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotBackgroundColorSelection(user),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$onChange,\n\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotUsernameChange(user),\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Registration$init(user))))));\n\t\t\tcase 'InLobby':\n\t\t\t\tvar user = state.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onInviteErrorOk,\n\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotInviteErrorOk,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onDeclineRoomInvite,\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotDeclineRoomInvite(user),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onAcceptRoomInvite,\n\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotAcceptRoomInvite(user),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onMouseLeaveRoom,\n\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotHideRoomMembers(user),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onMouseEnterRoom,\n\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotShowRoomMembers(user),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onEnterRoom,\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotEnterRoom(user),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onDeleteRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$GotDeleteRoom(user),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Lobby$onCreateRoom,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Example$MultiRoomChat$maybeOnCreateRoom, phoenix, user),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Lobby$init, user, lobby))))))))));\n\t\t\tdefault:\n\t\t\t\tvar room = state.a;\n\t\t\t\tvar user = state.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$MultiRoomChat$Room$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$inviteableUsers,\n\t\t\t\t\t\tlobby.inviteableUsers,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$chatMaxHeight,\n\t\t\t\t\t\t\t$author$project$Example$MultiRoomChat$chatMaxHeight(layoutHeight),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$onClickUser,\n\t\t\t\t\t\t\t\tA2($author$project$Example$MultiRoomChat$GotInviteUser, user, room),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$onLoseFocusMessage,\n\t\t\t\t\t\t\t\t\tA2($author$project$Example$MultiRoomChat$GotMemberStoppedTyping, user, room),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$onFocusMessage,\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Example$MultiRoomChat$GotMemberStartedTyping, user, room),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$onSubmitMessage,\n\t\t\t\t\t\t\t\t\t\t\tA3($author$project$Example$MultiRoomChat$maybeOnSubmitMessage, phoenix, user, room),\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$MultiRoomChat$Room$onChangeMessage,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Example$MultiRoomChat$GotMessageChange, user, room),\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$MultiRoomChat$Room$init, room, user)))))))));\n\t\t}\n\t});\nvar $author$project$Page$ChatRooms$viewExample = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tvar subModel = example.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t$author$project$Page$ChatRooms$GotMultiRoomMsg,\n\t\t\tA2($author$project$Example$MultiRoomChat$view, device, subModel));\n\t});\nvar $author$project$Page$ChatRooms$view = function (model) {\n\tvar device = $author$project$Session$device(model.session);\n\treturn {\n\t\tcontent: A2(\n\t\t\t$author$project$View$Layout$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Layout$body,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Page$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Page$example,\n\t\t\t\t\t\tA2($author$project$Page$ChatRooms$viewExample, device, model),\n\t\t\t\t\t\t$author$project$View$Example$Page$init)),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Layout$title,\n\t\t\t\t\t'Chat Rooms Example',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Layout$homeMsg,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$ChatRooms$GotBackBtnClick),\n\t\t\t\t\t\t$author$project$View$Layout$init)))),\n\t\ttitle: 'Chat Rooms Example'\n\t};\n};\nvar $author$project$Page$ControlTheSocketConnection$GotHomeBtnClick = {$: 'GotHomeBtnClick'};\nvar $author$project$Page$ControlTheSocketConnection$introduction = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$text('Connecting to the Socket is taken care of automatically when a request to join a Channel is made, or when a Channel is pushed to. '),\n\t\t\t$mdgriffith$elm_ui$Element$text('However, if you want to take manual control, here\\'s a few examples.')\n\t\t])\n\t]);\nvar $author$project$View$Example$Page$introduction = F2(\n\tfunction (intro, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Page$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{introduction: intro}));\n\t});\nvar $author$project$Page$ControlTheSocketConnection$GotMenuItem = function (a) {\n\treturn {$: 'GotMenuItem', a: a};\n};\nvar $author$project$View$Example$Menu$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Example$Menu$group = F2(\n\tfunction (group_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Menu$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{group: group_}));\n\t});\nvar $author$project$Type$Group$Group = function (a) {\n\treturn {$: 'Group', a: a};\n};\nvar $author$project$Type$Group$init = $author$project$Type$Group$Group(\n\t{layouts: _List_Nil, order: _List_Nil});\nvar $author$project$View$Example$Menu$init = $author$project$View$Example$Menu$Config(\n\t{group: $author$project$Type$Group$init, layout: $elm$core$Maybe$Nothing, onClick: $elm$core$Maybe$Nothing, options: _List_Nil, selected: ''});\nvar $author$project$Type$Group$layouts = F2(\n\tfunction (list, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$Type$Group$Group(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{layouts: list}));\n\t});\nvar $author$project$View$Example$Menu$onClick = F2(\n\tfunction (msg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Menu$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onClick: msg}));\n\t});\nvar $author$project$View$Example$Menu$options = F2(\n\tfunction (options_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Menu$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{options: options_}));\n\t});\nvar $author$project$View$Example$Menu$selected = F2(\n\tfunction (selected_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Menu$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{selected: selected_}));\n\t});\nvar $author$project$UI$BorderColor$seperatorLight = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$aliceblue);\nvar $author$project$View$Example$Menu$spacing = function (_v0) {\n\tvar _class = _v0._class;\n\tswitch (_class.$) {\n\t\tcase 'Phone':\n\t\t\treturn $mdgriffith$elm_ui$Element$spacing(10);\n\t\tcase 'Tablet':\n\t\t\treturn $mdgriffith$elm_ui$Element$spacing(10);\n\t\tdefault:\n\t\t\treturn $mdgriffith$elm_ui$Element$spacing(20);\n\t}\n};\nvar $author$project$View$Example$Menu$containerAttrs = function (device) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\t$author$project$View$Example$Menu$spacing(device),\n\t\t\tA2($mdgriffith$elm_ui$Element$Border$widthXY, 0, 1),\n\t\t\t$author$project$UI$BorderColor$seperatorLight,\n\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t$author$project$UI$FontColor$default,\n\t\t\t$author$project$UI$FontFamily$default\n\t\t]);\n};\nvar $elm_community$list_extra$List$Extra$splitAt = F2(\n\tfunction (n, xs) {\n\t\treturn _Utils_Tuple2(\n\t\t\tA2($elm$core$List$take, n, xs),\n\t\t\tA2($elm$core$List$drop, n, xs));\n\t});\nvar $elm_community$list_extra$List$Extra$groupsOfVarying_ = F3(\n\tfunction (listOflengths, list, accu) {\n\t\tgroupsOfVarying_:\n\t\twhile (true) {\n\t\t\tvar _v0 = _Utils_Tuple2(listOflengths, list);\n\t\t\tif (_v0.a.b && _v0.b.b) {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\tvar length = _v1.a;\n\t\t\t\tvar tailLengths = _v1.b;\n\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\tvar _v3 = A2($elm_community$list_extra$List$Extra$splitAt, length, list);\n\t\t\t\tvar head = _v3.a;\n\t\t\t\tvar tail = _v3.b;\n\t\t\t\tvar $temp$listOflengths = tailLengths,\n\t\t\t\t\t$temp$list = tail,\n\t\t\t\t\t$temp$accu = A2($elm$core$List$cons, head, accu);\n\t\t\t\tlistOflengths = $temp$listOflengths;\n\t\t\t\tlist = $temp$list;\n\t\t\t\taccu = $temp$accu;\n\t\t\t\tcontinue groupsOfVarying_;\n\t\t\t} else {\n\t\t\t\treturn $elm$core$List$reverse(accu);\n\t\t\t}\n\t\t}\n\t});\nvar $elm_community$list_extra$List$Extra$groupsOfVarying = F2(\n\tfunction (listOflengths, list) {\n\t\treturn A3($elm_community$list_extra$List$Extra$groupsOfVarying_, listOflengths, list, _List_Nil);\n\t});\nvar $elm_community$list_extra$List$Extra$find = F2(\n\tfunction (predicate, list) {\n\t\tfind:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar first = list.a;\n\t\t\t\tvar rest = list.b;\n\t\t\t\tif (predicate(first)) {\n\t\t\t\t\treturn $elm$core$Maybe$Just(first);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$predicate = predicate,\n\t\t\t\t\t\t$temp$list = rest;\n\t\t\t\t\tpredicate = $temp$predicate;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue find;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Type$Group$findForDevice = F2(\n\tfunction (_v0, list) {\n\t\tvar _class = _v0._class;\n\t\tvar orientation = _v0.orientation;\n\t\treturn A2(\n\t\t\t$elm$core$Maybe$map,\n\t\t\tfunction (_v2) {\n\t\t\t\tvar a = _v2.c;\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm_community$list_extra$List$Extra$find,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\tvar class_ = _v1.a;\n\t\t\t\t\tvar orientation_ = _v1.b;\n\t\t\t\t\treturn _Utils_eq(class_, _class) && _Utils_eq(orientation_, orientation);\n\t\t\t\t},\n\t\t\t\tlist));\n\t});\nvar $author$project$Type$Group$layoutForDevice = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2($author$project$Type$Group$findForDevice, device, config.layouts);\n\t});\nvar $elm$core$Tuple$pair = F2(\n\tfunction (a, b) {\n\t\treturn _Utils_Tuple2(a, b);\n\t});\nvar $elm$core$List$sortBy = _List_sortBy;\nvar $elm$core$List$unzip = function (pairs) {\n\tvar step = F2(\n\t\tfunction (_v0, _v1) {\n\t\t\tvar x = _v0.a;\n\t\t\tvar y = _v0.b;\n\t\t\tvar xs = _v1.a;\n\t\t\tvar ys = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2($elm$core$List$cons, x, xs),\n\t\t\t\tA2($elm$core$List$cons, y, ys));\n\t\t});\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\tstep,\n\t\t_Utils_Tuple2(_List_Nil, _List_Nil),\n\t\tpairs);\n};\nvar $author$project$Type$Group$orderForDevice = F3(\n\tfunction (device, items, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = A2($author$project$Type$Group$findForDevice, device, config.order);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn items;\n\t\t} else {\n\t\t\tvar sortOrder = _v1.a;\n\t\t\treturn $elm$core$List$unzip(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$sortBy,\n\t\t\t\t\t$elm$core$Tuple$first,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$List$map2,\n\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\tfunction (newIndex, _v2) {\n\t\t\t\t\t\t\t\tvar item = _v2.b;\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(newIndex, item);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\tsortOrder,\n\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$core$Tuple$pair, items)))).b;\n\t\t}\n\t});\nvar $author$project$View$Example$Menu$paddingEach = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t_v1$2:\n\twhile (true) {\n\t\tswitch (_v1.a.$) {\n\t\t\tcase 'Phone':\n\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\treturn $mdgriffith$elm_ui$Element$paddingEach(\n\t\t\t\t\t{bottom: 8, left: 5, right: 5, top: 16});\n\t\t\tcase 'Tablet':\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v3 = _v1.a;\n\t\t\t\t\tvar _v4 = _v1.b;\n\t\t\t\t\treturn $mdgriffith$elm_ui$Element$paddingEach(\n\t\t\t\t\t\t{bottom: 8, left: 5, right: 5, top: 16});\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v1$2;\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tbreak _v1$2;\n\t\t}\n\t}\n\treturn $mdgriffith$elm_ui$Element$paddingEach(\n\t\t{bottom: 0, left: 5, right: 5, top: 10});\n};\nvar $author$project$Utils$andMaybeEventWithArg = F4(\n\tfunction (maybeMsg, arg, toEvent, attrs) {\n\t\tif (maybeMsg.$ === 'Nothing') {\n\t\t\treturn attrs;\n\t\t} else {\n\t\t\tvar msg = maybeMsg.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\ttoEvent(\n\t\t\t\t\tmsg(arg)),\n\t\t\t\tattrs);\n\t\t}\n\t});\nvar $author$project$UI$BorderColor$mouseOverMenuItem = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$lavender);\nvar $author$project$UI$BorderColor$none = $mdgriffith$elm_ui$Element$Border$color(\n\t$phollyer$elm_ui_colors$Colors$Alpha$white(0));\nvar $author$project$View$Example$Menu$itemAttrs = F3(\n\tfunction (selected_, item, maybeOnClick) {\n\t\treturn _Utils_eq(selected_, item) ? _List_fromArray(\n\t\t\t[$author$project$UI$BorderColor$seperatorLight, $mdgriffith$elm_ui$Element$centerX]) : A4(\n\t\t\t$author$project$Utils$andMaybeEventWithArg,\n\t\t\tmaybeOnClick,\n\t\t\titem,\n\t\t\t$mdgriffith$elm_ui$Element$Events$onClick,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BorderColor$none,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$mouseOver(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$author$project$UI$BorderColor$mouseOverMenuItem]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$Menu$rowItem = F3(\n\tfunction (selected_, maybeOnClick, item) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA3($author$project$View$Example$Menu$itemAttrs, selected_, item, maybeOnClick),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$Border$widthXY, 0, 4),\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 5)\n\t\t\t\t\t])),\n\t\t\t$mdgriffith$elm_ui$Element$text(item));\n\t});\nvar $author$project$View$Example$Menu$stackItem = F3(\n\tfunction (selected_, maybeOnClick, item) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA3($author$project$View$Example$Menu$itemAttrs, selected_, item, maybeOnClick),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$UI$BorderWidth$bottom(4)\n\t\t\t\t\t])),\n\t\t\t$mdgriffith$elm_ui$Element$text(item));\n\t});\nvar $author$project$View$Example$Menu$toRow = F3(\n\tfunction (selected_, maybeOnClick, options_) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tA2($author$project$View$Example$Menu$stackItem, selected_, maybeOnClick),\n\t\t\t\toptions_));\n\t});\nvar $author$project$View$Example$Menu$toRows = F3(\n\tfunction (selected_, maybeOnClick, options_) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tA2($author$project$View$Example$Menu$toRow, selected_, maybeOnClick),\n\t\t\toptions_);\n\t});\nvar $author$project$View$Example$Menu$view = F2(\n\tfunction (device, _v0) {\n\t\tvar _class = device._class;\n\t\tvar orientation = device.orientation;\n\t\tvar config = _v0.a;\n\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\tif ((_v1.a.$ === 'Phone') && (_v1.b.$ === 'Portrait')) {\n\t\t\tvar _v2 = _v1.a;\n\t\t\tvar _v3 = _v1.b;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$author$project$View$Example$Menu$paddingEach(device),\n\t\t\t\t\t$author$project$View$Example$Menu$containerAttrs(device)),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\tA2($author$project$View$Example$Menu$stackItem, config.selected, config.onClick),\n\t\t\t\t\tconfig.options));\n\t\t} else {\n\t\t\tvar _v4 = A2($author$project$Type$Group$layoutForDevice, device, config.group);\n\t\t\tif (_v4.$ === 'Nothing') {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 5, 0),\n\t\t\t\t\t\t$author$project$View$Example$Menu$containerAttrs(device)),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tA2($author$project$View$Example$Menu$rowItem, config.selected, config.onClick),\n\t\t\t\t\t\tconfig.options));\n\t\t\t} else {\n\t\t\t\tvar layout = _v4.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$author$project$View$Example$Menu$paddingEach(device),\n\t\t\t\t\t\t$author$project$View$Example$Menu$containerAttrs(device)),\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$author$project$View$Example$Menu$toRows,\n\t\t\t\t\t\tconfig.selected,\n\t\t\t\t\t\tconfig.onClick,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm_community$list_extra$List$Extra$groupsOfVarying,\n\t\t\t\t\t\t\tlayout,\n\t\t\t\t\t\t\tA3($author$project$Type$Group$orderForDevice, device, config.options, config.group))));\n\t\t\t}\n\t\t}\n\t});\nvar $author$project$Page$ControlTheSocketConnection$menu = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tvar selected = function () {\n\t\t\tswitch (example.$) {\n\t\t\t\tcase 'SimpleConnect':\n\t\t\t\t\treturn 'Simple Connect';\n\t\t\t\tcase 'ConnectWithGoodParams':\n\t\t\t\t\treturn 'Connect With Good Params';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'Connect With Bad Params';\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$author$project$View$Example$Menu$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$Menu$group,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Type$Group$layouts,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Phone,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Landscape,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[1, 2])),\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Tablet,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Portrait,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[1, 2]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t$author$project$Type$Group$init),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Menu$onClick,\n\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$ControlTheSocketConnection$GotMenuItem),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Menu$selected,\n\t\t\t\t\t\tselected,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$options,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t['Simple Connect', 'Connect With Good Params', 'Connect With Bad Params']),\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$init)))));\n\t});\nvar $author$project$View$Example$Page$menu = F2(\n\tfunction (menu_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Page$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{menu: menu_}));\n\t});\nvar $author$project$View$Example$Connect = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Connect', a: a, b: b};\n\t});\nvar $author$project$Type$Example$ConnectWithBadParams = {$: 'ConnectWithBadParams'};\nvar $author$project$Example$ConnectWithBadParams$GotConnect = {$: 'GotConnect'};\nvar $author$project$View$Example$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$Example$applicableFunctions = F2(\n\tfunction (functions, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{applicableFunctions: functions}));\n\t});\nvar $author$project$Internal$Socket$connectionState = function (_v0) {\n\tvar info = _v0.a.info;\n\treturn info.connectionState;\n};\nvar $author$project$Phoenix$connectionState = function (_v0) {\n\tvar socket = _v0.a.socket;\n\treturn $author$project$Internal$Socket$connectionState(socket);\n};\nvar $author$project$View$Example$controls = F2(\n\tfunction (cntrls, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{controls: cntrls}));\n\t});\nvar $author$project$View$Example$description = F2(\n\tfunction (desc, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{description: desc}));\n\t});\nvar $author$project$View$Example$init = function (example) {\n\treturn $author$project$View$Example$Config(\n\t\t{applicableFunctions: _List_Nil, controls: _List_Nil, controlsGroup: $author$project$Type$Group$init, description: _List_Nil, example: example, feedback: $mdgriffith$elm_ui$Element$none, responses: _List_Nil, status: $mdgriffith$elm_ui$Element$none, subControls: $mdgriffith$elm_ui$Element$none, usefulFunctions: _List_Nil});\n};\nvar $author$project$Internal$Socket$isConnected = function (_v0) {\n\tvar info = _v0.a.info;\n\treturn info.isConnected;\n};\nvar $author$project$Phoenix$isConnected = function (_v0) {\n\tvar socket = _v0.a.socket;\n\treturn $author$project$Internal$Socket$isConnected(socket);\n};\nvar $author$project$Extra$String$printBool = function (bool) {\n\treturn bool ? 'True' : 'False';\n};\nvar $author$project$Extra$String$printQuoted = function (str) {\n\treturn '\\\"' + (str + '\\\"');\n};\nvar $author$project$View$Example$responses = F2(\n\tfunction (list, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{responses: list}));\n\t});\nvar $author$project$Phoenix$socketStateToString = function (_v0) {\n\tvar model = _v0.a;\n\tvar _v1 = $author$project$Internal$Socket$currentState(model.socket);\n\tswitch (_v1.$) {\n\t\tcase 'Connected':\n\t\t\treturn 'Connected';\n\t\tcase 'Connecting':\n\t\t\treturn 'Connecting';\n\t\tcase 'Disconnecting':\n\t\t\treturn 'Disconnecting';\n\t\tdefault:\n\t\t\treturn 'Disconnected';\n\t}\n};\nvar $author$project$View$Example$usefulFunctions = F2(\n\tfunction (functions, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{usefulFunctions: functions}));\n\t});\nvar $author$project$View$Example$column = $mdgriffith$elm_ui$Element$column(\n\t_List_fromArray(\n\t\t[\n\t\t\tA2($mdgriffith$elm_ui$Element$Border$widthXY, 0, 1),\n\t\t\t$author$project$UI$BorderColor$seperatorLight,\n\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),\n\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t]));\nvar $author$project$View$Example$toButton = F2(\n\tfunction (device, control) {\n\t\tswitch (control.$) {\n\t\t\tcase 'Connect':\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Connect', $author$project$View$Button$init))));\n\t\t\tcase 'Disconnect':\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Disconnect', $author$project$View$Button$init))));\n\t\t\tcase 'Join':\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Join', $author$project$View$Button$init))));\n\t\t\tcase 'Leave':\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Leave', $author$project$View$Button$init))));\n\t\t\tcase 'Push':\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Push', $author$project$View$Button$init))));\n\t\t\tdefault:\n\t\t\t\tvar msg = control.a;\n\t\t\t\tvar enabled = control.b;\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$View$Button$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Button$setEnabled,\n\t\t\t\t\t\tenabled,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Button$setOnPress,\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(msg),\n\t\t\t\t\t\t\tA2($author$project$View$Button$setLabel, 'Cancel Retry', $author$project$View$Button$init))));\n\t\t}\n\t});\nvar $author$project$View$Example$toRow = function (elements_) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$row,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t]),\n\t\telements_);\n};\nvar $author$project$View$Example$toRows = F2(\n\tfunction (layout, elements_) {\n\t\treturn A2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (elements__) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Example$toRow(elements__)\n\t\t\t\t\t\t]));\n\t\t\t},\n\t\t\tA2($elm_community$list_extra$List$Extra$groupsOfVarying, layout, elements_));\n\t});\nvar $author$project$View$Example$controlsView = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar elements = A2(\n\t\t\t$elm$core$List$map,\n\t\t\t$author$project$View$Example$toButton(device),\n\t\t\tconfig.controls);\n\t\tvar _v1 = A2($author$project$Type$Group$layoutForDevice, device, config.controlsGroup);\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn $author$project$View$Example$column(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tconfig.subControls,\n\t\t\t\t\t\t\t\t$author$project$View$Example$toRow(\n\t\t\t\t\t\t\t\tA3($author$project$Type$Group$orderForDevice, device, elements, config.controlsGroup))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar layout = _v1.a;\n\t\t\treturn $author$project$View$Example$column(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tconfig.subControls,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$toRows,\n\t\t\t\t\t\t\t\t\tlayout,\n\t\t\t\t\t\t\t\t\tA3($author$project$Type$Group$orderForDevice, device, elements, config.controlsGroup)))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\t}\n\t});\nvar $author$project$UI$FontSize$small = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 10;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 14;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 20;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$Example$spacing = function (_class) {\n\tif (_class.$ === 'Phone') {\n\t\treturn $mdgriffith$elm_ui$Element$spacing(5);\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$spacing(10);\n\t}\n};\nvar $author$project$View$Example$toParagraph = function (paragraph) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tparagraph);\n};\nvar $author$project$View$Example$descriptionView = F3(\n\tfunction (device, example, paragraphs) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$justify,\n\t\t\t\t\t$author$project$View$Example$spacing(device._class)\n\t\t\t\t]),\n\t\t\tA2(\n\t\t\t\t$elm$core$List$append,\n\t\t\t\tA2($elm$core$List$map, $author$project$View$Example$toParagraph, paragraphs),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$author$project$UI$FontSize$small(device)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('The main source code for this example can be found '),\n\t\t\t\t\t\t\t\t$author$project$UI$Link$srcLink(example),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('. Clicking on a function will take you to its documentation.')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])));\n\t});\nvar $author$project$UI$Link$base = 'https://package.elm-lang.org/packages/phollyer/elm-phoenix-websocket/latest/Phoenix#';\nvar $author$project$UI$FontFamily$code = $mdgriffith$elm_ui$Element$Font$family(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$Font$typeface('Roboto Mono')\n\t\t]));\nvar $phollyer$elm_ui_colors$Colors$Opaque$dimgray = A3($mdgriffith$elm_ui$Element$rgb255, 105, 105, 105);\nvar $phollyer$elm_ui_colors$Colors$Opaque$dimgrey = $phollyer$elm_ui_colors$Colors$Opaque$dimgray;\nvar $author$project$UI$FontColor$function = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$dimgrey);\nvar $phollyer$elm_ui_colors$Colors$Opaque$orange = A3($mdgriffith$elm_ui$Element$rgb255, 255, 165, 0);\nvar $author$project$UI$FontColor$moduleName = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$orange);\nvar $author$project$UI$Link$format = function (func) {\n\tvar _v0 = A2($elm$core$String$split, '.', func);\n\t_v0$2:\n\twhile (true) {\n\t\tif (_v0.b) {\n\t\t\tif (_v0.b.b) {\n\t\t\t\tif (!_v0.b.b.b) {\n\t\t\t\t\tvar phoenix = _v0.a;\n\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\tvar f = _v1.a;\n\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$author$project$UI$FontColor$moduleName]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(phoenix)),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[$author$project$UI$FontColor$function]),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('.' + f))\n\t\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tbreak _v0$2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar f = _v0.a;\n\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$author$project$UI$FontColor$function]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(f))\n\t\t\t\t\t]);\n\t\t\t}\n\t\t} else {\n\t\t\tbreak _v0$2;\n\t\t}\n\t}\n\treturn _List_Nil;\n};\nvar $author$project$UI$Link$function = function (func) {\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t_List_fromArray(\n\t\t\t[$author$project$UI$FontFamily$code]),\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_Nil,\n\t\t\t\t$author$project$UI$Link$format(func)),\n\t\t\turl: function () {\n\t\t\t\tvar _v0 = A2($elm$core$String$split, '.', func);\n\t\t\t\t_v0$2:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (_v0.b) {\n\t\t\t\t\t\tif (_v0.b.b) {\n\t\t\t\t\t\t\tif (!_v0.b.b.b) {\n\t\t\t\t\t\t\t\tvar _v1 = _v0.b;\n\t\t\t\t\t\t\t\tvar f = _v1.a;\n\t\t\t\t\t\t\t\treturn _Utils_ap($author$project$UI$Link$base, f);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar f = _v0.a;\n\t\t\t\t\t\t\treturn _Utils_ap($author$project$UI$Link$base, f);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak _v0$2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $author$project$UI$Link$base;\n\t\t\t}()\n\t\t});\n};\nvar $author$project$UI$BackgroundColor$examplePanel = $mdgriffith$elm_ui$Element$Background$color($phollyer$elm_ui_colors$Colors$Opaque$white);\nvar $author$project$UI$BorderColor$examplePanel = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$black);\nvar $author$project$View$Example$panel = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\treturn $mdgriffith$elm_ui$Element$column(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$UI$BackgroundColor$examplePanel,\n\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(1),\n\t\t\t\t$author$project$UI$BorderColor$examplePanel,\n\t\t\t\t$mdgriffith$elm_ui$Element$padding(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\tA2($mdgriffith$elm_ui$Element$maximum, 350, $mdgriffith$elm_ui$Element$fill)),\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\tfunction () {\n\t\t\t\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\t\t\t\tswitch (_v1.a.$) {\n\t\t\t\t\t\tcase 'Phone':\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 500, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t\tcase 'Tablet':\n\t\t\t\t\t\t\tvar _v3 = _v1.a;\n\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 700, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t\tcase 'Desktop':\n\t\t\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tvar _v5 = _v1.a;\n\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 700, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t}\n\t\t\t\t}())\n\t\t\t]));\n};\nvar $phollyer$elm_ui_colors$Colors$Opaque$slateblue = A3($mdgriffith$elm_ui$Element$rgb255, 106, 90, 205);\nvar $author$project$UI$FontColor$title = $mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$slateblue);\nvar $author$project$View$Example$titleView = F2(\n\tfunction (device, title_) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$BorderWidth$bottom(1),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t\t$author$project$UI$FontColor$title,\n\t\t\t\t\t$author$project$UI$FontSize$panelHeader(device)\n\t\t\t\t]),\n\t\t\t$mdgriffith$elm_ui$Element$text(title_));\n\t});\nvar $author$project$View$Example$applicableFunctionsView = F2(\n\tfunction (device, functions) {\n\t\treturn A2(\n\t\t\t$author$project$View$Example$panel,\n\t\t\tdevice,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Example$titleView, device, 'Applicable Functions'),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Example$spacing(device._class),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$UI$Padding$top(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2($elm$core$List$map, $author$project$UI$Link$function, functions))\n\t\t\t\t]));\n\t});\nvar $elm$core$List$intersperse = F2(\n\tfunction (sep, xs) {\n\t\tif (!xs.b) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar hd = xs.a;\n\t\t\tvar tl = xs.b;\n\t\t\tvar step = F2(\n\t\t\t\tfunction (x, rest) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tsep,\n\t\t\t\t\t\tA2($elm$core$List$cons, x, rest));\n\t\t\t\t});\n\t\t\tvar spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);\n\t\t\treturn A2($elm$core$List$cons, hd, spersed);\n\t\t}\n\t});\nvar $phollyer$elm_ui_colors$Colors$Opaque$lightsteelblue = A3($mdgriffith$elm_ui$Element$rgb255, 176, 196, 222);\nvar $author$project$UI$BorderColor$seperatorDark = $mdgriffith$elm_ui$Element$Border$color($phollyer$elm_ui_colors$Colors$Opaque$lightsteelblue);\nvar $author$project$View$Example$seperator = A2(\n\t$mdgriffith$elm_ui$Element$el,\n\t_List_fromArray(\n\t\t[\n\t\t\t$author$project$UI$BorderColor$seperatorDark,\n\t\t\t$author$project$UI$BorderWidth$bottom(1),\n\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t]),\n\t$mdgriffith$elm_ui$Element$none);\nvar $author$project$View$Example$field = F3(\n\tfunction (device, label, value) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$UI$FontSize$panelContent(device),\n\t\t\t\t\t$author$project$View$Example$spacing(device._class),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop, $author$project$UI$FontColor$default]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(label)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$author$project$UI$FontColor$value]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(value))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$channelEvent = F3(\n\tfunction (device, title, _v0) {\n\t\tvar topic = _v0.topic;\n\t\tvar event = _v0.event;\n\t\tvar payload = _v0.payload;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$author$project$UI$FontFamily$code\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('ChannelEvent')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(title)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignLeft,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$UI$FontFamily$code,\n\t\t\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3($author$project$View$Example$field, device, 'Topic: ', topic),\n\t\t\t\t\t\t\tA3($author$project$View$Example$field, device, 'Event: ', event),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$Example$field,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t'Payload: ',\n\t\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 2, payload))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$channelInfo = {event: $elm$core$Maybe$Nothing, joinRef: $elm$core$Maybe$Nothing, payload: $elm$json$Json$Encode$null, ref: $elm$core$Maybe$Nothing, topic: ''};\nvar $author$project$View$Example$maybe = F3(\n\tfunction (toField, label, maybeValue) {\n\t\tif (maybeValue.$ === 'Just') {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn A2(toField, label, value);\n\t\t} else {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t}\n\t});\nvar $author$project$View$Example$channelResponse = F3(\n\tfunction (device, title, info) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$author$project$UI$FontFamily$code\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('ChannelResponse')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(title)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignLeft,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$UI$FontFamily$code,\n\t\t\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3($author$project$View$Example$field, device, 'Topic: ', info.topic),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$Example$maybe,\n\t\t\t\t\t\t\t$author$project$View$Example$field(device),\n\t\t\t\t\t\t\t'Event: ',\n\t\t\t\t\t\t\tinfo.event),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$Example$field,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t'Payload: ',\n\t\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 2, info.payload)),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$Example$maybe,\n\t\t\t\t\t\t\t$author$project$View$Example$field(device),\n\t\t\t\t\t\t\t'Join Ref: ',\n\t\t\t\t\t\t\tinfo.joinRef),\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t$author$project$View$Example$maybe,\n\t\t\t\t\t\t\t$author$project$View$Example$field(device),\n\t\t\t\t\t\t\t'Ref: ',\n\t\t\t\t\t\t\tinfo.ref)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$socketResponse = F2(\n\tfunction (title, response) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$author$project$UI$FontFamily$code\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text('SocketMessage')),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$color($phollyer$elm_ui_colors$Colors$Opaque$darkslateblue),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(title)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(response))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$socketStateToString = function (state) {\n\tswitch (state.$) {\n\t\tcase 'Connecting':\n\t\t\treturn 'Connecting';\n\t\tcase 'Connected':\n\t\t\treturn 'Connected';\n\t\tcase 'Disconnecting':\n\t\t\treturn 'Disconnecting';\n\t\tdefault:\n\t\t\treturn 'Disconnected';\n\t}\n};\nvar $author$project$View$Example$toResponse = F2(\n\tfunction (device, response) {\n\t\t_v0$8:\n\t\twhile (true) {\n\t\t\tswitch (response.$) {\n\t\t\t\tcase 'Socket':\n\t\t\t\t\tswitch (response.a.$) {\n\t\t\t\t\t\tcase 'StateChange':\n\t\t\t\t\t\t\tvar state = response.a.a;\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$socketResponse,\n\t\t\t\t\t\t\t\t'StateChange',\n\t\t\t\t\t\t\t\t$author$project$View$Example$socketStateToString(state));\n\t\t\t\t\t\tcase 'SocketError':\n\t\t\t\t\t\t\tvar error = response.a.a;\n\t\t\t\t\t\t\treturn A2($author$project$View$Example$socketResponse, 'SocketError', error);\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tcase 'Channel':\n\t\t\t\t\tswitch (response.a.$) {\n\t\t\t\t\t\tcase 'JoinOk':\n\t\t\t\t\t\t\tvar _v1 = response.a;\n\t\t\t\t\t\t\tvar topic = _v1.a;\n\t\t\t\t\t\t\tvar payload = _v1.b;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$Example$channelResponse,\n\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t'JoinOk',\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$channelInfo,\n\t\t\t\t\t\t\t\t\t{payload: payload, topic: topic}));\n\t\t\t\t\t\tcase 'JoinError':\n\t\t\t\t\t\t\tvar _v2 = response.a;\n\t\t\t\t\t\t\tvar topic = _v2.a;\n\t\t\t\t\t\t\tvar payload = _v2.b;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$Example$channelResponse,\n\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t'JoinError',\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$channelInfo,\n\t\t\t\t\t\t\t\t\t{payload: payload, topic: topic}));\n\t\t\t\t\t\tcase 'LeaveOk':\n\t\t\t\t\t\t\tvar topic = response.a.a;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$Example$channelResponse,\n\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t'LeaveOk',\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$channelInfo,\n\t\t\t\t\t\t\t\t\t{topic: topic}));\n\t\t\t\t\t\tcase 'PushOk':\n\t\t\t\t\t\t\tvar _v3 = response.a;\n\t\t\t\t\t\t\tvar topic = _v3.a;\n\t\t\t\t\t\t\tvar event = _v3.b;\n\t\t\t\t\t\t\tvar ref = _v3.c;\n\t\t\t\t\t\t\tvar payload = _v3.d;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$Example$channelResponse,\n\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t'PushOk',\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$channelInfo,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tevent: $elm$core$Maybe$Just(event),\n\t\t\t\t\t\t\t\t\t\tpayload: payload,\n\t\t\t\t\t\t\t\t\t\tref: ref,\n\t\t\t\t\t\t\t\t\t\ttopic: topic\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\tcase 'PushTimeout':\n\t\t\t\t\t\t\tvar _v4 = response.a;\n\t\t\t\t\t\t\tvar topic = _v4.a;\n\t\t\t\t\t\t\tvar event = _v4.b;\n\t\t\t\t\t\t\tvar ref = _v4.c;\n\t\t\t\t\t\t\tvar payload = _v4.d;\n\t\t\t\t\t\t\treturn A3(\n\t\t\t\t\t\t\t\t$author$project$View$Example$channelResponse,\n\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t'PushTimeout',\n\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$channelInfo,\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tevent: $elm$core$Maybe$Just(event),\n\t\t\t\t\t\t\t\t\t\tpayload: payload,\n\t\t\t\t\t\t\t\t\t\tref: ref,\n\t\t\t\t\t\t\t\t\t\ttopic: topic\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v0$8;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar event = response.a;\n\t\t\t\t\treturn A3($author$project$View$Example$channelEvent, device, '', event);\n\t\t\t}\n\t\t}\n\t\treturn $mdgriffith$elm_ui$Element$none;\n\t});\nvar $author$project$View$Example$responsesView = F2(\n\tfunction (device, responseList) {\n\t\tif (!responseList.b) {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(15),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$clipY,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarY,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$intersperse,\n\t\t\t\t\t$author$project$View$Example$seperator,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\tfunction (r) {\n\t\t\t\t\t\t\treturn !_Utils_eq(r, $mdgriffith$elm_ui$Element$none);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t$author$project$View$Example$toResponse(device),\n\t\t\t\t\t\t\tresponseList))));\n\t\t}\n\t});\nvar $author$project$View$Example$statusView = function (status_) {\n\treturn _Utils_eq(status_, $mdgriffith$elm_ui$Element$none) ? $mdgriffith$elm_ui$Element$none : A2(\n\t\t$mdgriffith$elm_ui$Element$el,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$author$project$UI$BorderWidth$bottom(1),\n\t\t\t\tA2($mdgriffith$elm_ui$Element$paddingXY, 0, 5),\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t]),\n\t\tstatus_);\n};\nvar $author$project$View$Example$infoView = F3(\n\tfunction (device, status_, responseList) {\n\t\treturn A2(\n\t\t\t$author$project$View$Example$panel,\n\t\t\tdevice,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Example$titleView, device, 'Info'),\n\t\t\t\t\t$author$project$View$Example$statusView(status_),\n\t\t\t\t\tA2($author$project$View$Example$responsesView, device, responseList)\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Element$clipX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.clipX);\nvar $mdgriffith$elm_ui$Element$scrollbarX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX);\nvar $author$project$View$Example$toFunction = F2(\n\tfunction (device, _v0) {\n\t\tvar _function = _v0.a;\n\t\tvar currentValue = _v0.b;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$Example$spacing(device._class),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$clipX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$scrollbarX\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignTop]),\n\t\t\t\t\t$author$project$UI$Link$function(_function)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(currentValue))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$toFunctions = F2(\n\tfunction (device, functions) {\n\t\tvar _class = device._class;\n\t\tif (_class.$ === 'Phone') {\n\t\t\treturn A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$author$project$View$Example$toFunction(device),\n\t\t\t\tfunctions);\n\t\t} else {\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(16),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t$author$project$View$Example$toFunction(device),\n\t\t\t\t\t\tfunctions))\n\t\t\t\t]);\n\t\t}\n\t});\nvar $author$project$View$Example$usefulFunctionsView = F2(\n\tfunction (device, functions) {\n\t\treturn A2(\n\t\t\t$author$project$View$Example$panel,\n\t\t\tdevice,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2($author$project$View$Example$titleView, device, 'Useful Functions'),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$View$Example$spacing(device._class),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$author$project$UI$Padding$top(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$wrappedRow,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$bold,\n\t\t\t\t\t\t\t\t\t$author$project$UI$FontColor$default\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Function')),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[$mdgriffith$elm_ui$Element$alignRight]),\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Current Value'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2($author$project$View$Example$toFunctions, device, functions)))\n\t\t\t\t]));\n\t});\nvar $author$project$View$Example$feedbackView = F2(\n\tfunction (device, _v0) {\n\t\tvar _class = device._class;\n\t\tvar orientation = device.orientation;\n\t\tvar config = _v0.a;\n\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\tswitch (_v1.a.$) {\n\t\t\tcase 'Phone':\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA3($author$project$View$Example$infoView, device, config.status, config.responses),\n\t\t\t\t\t\t\t\tA2($author$project$View$Example$applicableFunctionsView, device, config.applicableFunctions),\n\t\t\t\t\t\t\t\tA2($author$project$View$Example$usefulFunctionsView, device, config.usefulFunctions)\n\t\t\t\t\t\t\t]));\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\tvar _v5 = _v1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA3($author$project$View$Example$infoView, device, config.status, config.responses),\n\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$applicableFunctionsView, device, config.applicableFunctions)\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2($author$project$View$Example$usefulFunctionsView, device, config.usefulFunctions)\n\t\t\t\t\t\t\t]));\n\t\t\t\t}\n\t\t\tcase 'Tablet':\n\t\t\t\tvar _v6 = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA3($author$project$View$Example$infoView, device, config.status, config.responses),\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$applicableFunctionsView, device, config.applicableFunctions)\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2($author$project$View$Example$usefulFunctionsView, device, config.usefulFunctions)\n\t\t\t\t\t\t]));\n\t\t\tdefault:\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA3($author$project$View$Example$infoView, device, config.status, config.responses),\n\t\t\t\t\t\t\tA2($author$project$View$Example$applicableFunctionsView, device, config.applicableFunctions),\n\t\t\t\t\t\t\tA2($author$project$View$Example$usefulFunctionsView, device, config.usefulFunctions)\n\t\t\t\t\t\t]));\n\t\t}\n\t});\nvar $author$project$View$Example$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t$author$project$UI$FontColor$default,\n\t\t\t\t\t$author$project$UI$FontFamily$default,\n\t\t\t\t\t$author$project$UI$FontSize$default(device),\n\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA3($author$project$View$Example$descriptionView, device, config.example, config.description),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$controlsView,\n\t\t\t\t\tdevice,\n\t\t\t\t\t$author$project$View$Example$Config(config)),\n\t\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$feedbackView,\n\t\t\t\t\tdevice,\n\t\t\t\t\t$author$project$View$Example$Config(config))\n\t\t\t\t]));\n\t});\nvar $author$project$Example$ConnectWithBadParams$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.socketState',\n\t\t\t\t\t\t$author$project$Phoenix$socketStateToString(phoenix)),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.connectionState',\n\t\t\t\t\t\t$author$project$Extra$String$printQuoted(\n\t\t\t\t\t\t\t$author$project$Phoenix$connectionState(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.setConnectParams', 'Phoenix.connect']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Connect,\n\t\t\t\t\t\t\t\t\t$author$project$Example$ConnectWithBadParams$GotConnect,\n\t\t\t\t\t\t\t\t\t!$author$project$Phoenix$isConnected(phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Try to connect to the Socket with authentication params that are not accepted, causing the connection to be denied.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$ConnectWithBadParams)))))));\n\t});\nvar $author$project$Type$Example$ConnectWithGoodParams = {$: 'ConnectWithGoodParams'};\nvar $author$project$View$Example$Disconnect = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Disconnect', a: a, b: b};\n\t});\nvar $author$project$Example$ConnectWithGoodParams$GotConnect = {$: 'GotConnect'};\nvar $author$project$Example$ConnectWithGoodParams$GotDisconnect = {$: 'GotDisconnect'};\nvar $author$project$View$Example$controlsGroup = F2(\n\tfunction (group, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{controlsGroup: group}));\n\t});\nvar $author$project$Example$ConnectWithGoodParams$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.socketState',\n\t\t\t\t\t\t$author$project$Phoenix$socketStateToString(phoenix)),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.connectionState',\n\t\t\t\t\t\t$author$project$Extra$String$printQuoted(\n\t\t\t\t\t\t\t$author$project$Phoenix$connectionState(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.setConnectParams', 'Phoenix.connect', 'Phoenix.disconnect']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controlsGroup,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$Type$Group$layouts,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Phone,\n\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Portrait,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[2]))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$Type$Group$init),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Connect,\n\t\t\t\t\t\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$GotConnect,\n\t\t\t\t\t\t\t\t\t\t!$author$project$Phoenix$isConnected(phoenix)),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Disconnect,\n\t\t\t\t\t\t\t\t\t\t$author$project$Example$ConnectWithGoodParams$GotDisconnect,\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Connect to the Socket with authentication params that are accepted.')\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$ConnectWithGoodParams))))))));\n\t});\nvar $author$project$Example$SimpleConnect$GotConnect = {$: 'GotConnect'};\nvar $author$project$Example$SimpleConnect$GotDisconnect = {$: 'GotDisconnect'};\nvar $author$project$Type$Example$SimpleConnect = {$: 'SimpleConnect'};\nvar $author$project$Example$SimpleConnect$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.socketState',\n\t\t\t\t\t\t$author$project$Phoenix$socketStateToString(phoenix)),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.connectionState',\n\t\t\t\t\t\t$author$project$Extra$String$printQuoted(\n\t\t\t\t\t\t\t$author$project$Phoenix$connectionState(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.connect', 'Phoenix.disconnect']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Connect,\n\t\t\t\t\t\t\t\t\t$author$project$Example$SimpleConnect$GotConnect,\n\t\t\t\t\t\t\t\t\t!$author$project$Phoenix$isConnected(phoenix)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Disconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Example$SimpleConnect$GotDisconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('A simple connection to the Socket without sending any params or setting any connect options.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$SimpleConnect)))))));\n\t});\nvar $author$project$Page$ControlTheSocketConnection$viewExample = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tswitch (example.$) {\n\t\t\tcase 'SimpleConnect':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotSimpleConnectMsg,\n\t\t\t\t\tA2($author$project$Example$SimpleConnect$view, device, subModel));\n\t\t\tcase 'ConnectWithGoodParams':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithGoodParamsMsg,\n\t\t\t\t\tA2($author$project$Example$ConnectWithGoodParams$view, device, subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$ControlTheSocketConnection$GotConnectWithBadParamsMsg,\n\t\t\t\t\tA2($author$project$Example$ConnectWithBadParams$view, device, subModel));\n\t\t}\n\t});\nvar $author$project$Page$ControlTheSocketConnection$view = function (model) {\n\tvar device = $author$project$Session$device(model.session);\n\treturn {\n\t\tcontent: A2(\n\t\t\t$author$project$View$Layout$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Layout$body,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Page$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Page$example,\n\t\t\t\t\t\tA2($author$project$Page$ControlTheSocketConnection$viewExample, device, model),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Page$menu,\n\t\t\t\t\t\t\tA2($author$project$Page$ControlTheSocketConnection$menu, device, model),\n\t\t\t\t\t\t\tA2($author$project$View$Example$Page$introduction, $author$project$Page$ControlTheSocketConnection$introduction, $author$project$View$Example$Page$init)))),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Layout$title,\n\t\t\t\t\t'Control The Socket Connection',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Layout$homeMsg,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$ControlTheSocketConnection$GotHomeBtnClick),\n\t\t\t\t\t\t$author$project$View$Layout$init)))),\n\t\ttitle: 'Control The Socket Connection'\n\t};\n};\nvar $author$project$Page$Home$NavigateTo = function (a) {\n\treturn {$: 'NavigateTo', a: a};\n};\nvar $author$project$Page$Home$container = $mdgriffith$elm_ui$Element$el(\n\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\tA2($mdgriffith$elm_ui$Element$maximum, 300, $mdgriffith$elm_ui$Element$fill)),\n\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\tA2($mdgriffith$elm_ui$Element$maximum, 250, $mdgriffith$elm_ui$Element$fill))\n\t\t]));\nvar $author$project$Page$Home$panelsContainer = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\tif (_v1.a.$ === 'Phone') {\n\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\tvar _v2 = _v1.a;\n\t\t\tvar _v3 = _v1.b;\n\t\t\treturn $mdgriffith$elm_ui$Element$column(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]));\n\t\t} else {\n\t\t\tvar _v4 = _v1.a;\n\t\t\tvar _v5 = _v1.b;\n\t\t\treturn $mdgriffith$elm_ui$Element$wrappedRow(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]));\n\t\t}\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$wrappedRow(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]));\n\t}\n};\nvar $author$project$Page$Home$exampleContainer = F3(\n\tfunction (device, title, panels) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignTop,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$author$project$UI$FontColor$title,\n\t\t\t\t\t\t\t$author$project$UI$FontSize$title(device)\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(title)),\n\t\t\t\t\tA2($author$project$Page$Home$panelsContainer, device, panels)\n\t\t\t\t]));\n\t});\nvar $author$project$Page$Home$examplesContainer = F2(\n\tfunction (_v0, examples) {\n\t\tvar _class = _v0._class;\n\t\tvar orientation = _v0.orientation;\n\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\tswitch (_v1.a.$) {\n\t\t\tcase 'Phone':\n\t\t\t\tif (_v1.b.$ === 'Portrait') {\n\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\texamples);\n\t\t\t\t} else {\n\t\t\t\t\tvar _v4 = _v1.a;\n\t\t\t\t\tvar _v5 = _v1.b;\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t\t\t\t$author$project$UI$Padding$bottom(10)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\texamples);\n\t\t\t\t}\n\t\t\tcase 'Tablet':\n\t\t\t\tvar _v6 = _v1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(30),\n\t\t\t\t\t\t\t$author$project$UI$Padding$bottom(20)\n\t\t\t\t\t\t]),\n\t\t\t\t\texamples);\n\t\t\tdefault:\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(40)\n\t\t\t\t\t\t]),\n\t\t\t\t\texamples);\n\t\t}\n\t});\nvar $author$project$Page$Home$introductionView = function (device) {\n\tvar _class = device._class;\n\tvar orientation = device.orientation;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$column,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\tfunction () {\n\t\t\t\t\tvar _v0 = _Utils_Tuple2(_class, orientation);\n\t\t\t\t\tif (_v0.a.$ === 'Phone') {\n\t\t\t\t\t\tif (_v0.b.$ === 'Portrait') {\n\t\t\t\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$fill;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v3 = _v0.a;\n\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 400, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn A2($mdgriffith$elm_ui$Element$maximum, 800, $mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t}\n\t\t\t\t}()),\n\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t$mdgriffith$elm_ui$Element$Font$center,\n\t\t\t\t$author$project$UI$FontFamily$default,\n\t\t\t\t$author$project$UI$FontSize$default(device)\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Welcome, please try the examples below. ')\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('The Socket and Channels examples provide details of the functions used, useful functions and links to docs.')\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$View$Panel$onClick = F2(\n\tfunction (maybeMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Panel$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{onClick: maybeMsg}));\n\t});\nvar $author$project$Page$Home$view = function (device) {\n\treturn {\n\t\tcontent: A2(\n\t\t\t$author$project$View$Layout$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Layout$body,\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$column,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$author$project$Page$Home$introductionView(device),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$Page$Home$examplesContainer,\n\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$author$project$Page$Home$exampleContainer,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t'Socket Examples',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$container(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$view,\n\t\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$onClick,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$NavigateTo($author$project$Route$ControlTheSocketConnection)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$description,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Manually connect and disconnect, receiving feedback on the current state of the Socket.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Connect with good params that are accepted, and bad params that cause the request to be denied.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Panel$title, 'Control the Connection (3)', $author$project$View$Panel$init)))))\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$author$project$Page$Home$exampleContainer,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t'Channels Examples',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$container(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$view,\n\t\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$onClick,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$NavigateTo($author$project$Route$JoinAndLeaveChannels)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$description,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Manually join and leave a Channel.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Join with good and bad params, and multiple Channels at once.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Panel$title, 'Joining and Leaving (4)', $author$project$View$Panel$init))))),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$container(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$view,\n\t\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$onClick,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$NavigateTo($author$project$Route$SendAndReceive)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$description,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Send and receive events.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Handle a Push that results in a timeout. Choose the retry strategy and see the countdown until the next attempt.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Panel$title, 'Sending and Receiving (4)', $author$project$View$Panel$init)))))\n\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t$author$project$Page$Home$exampleContainer,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t'Presence Example',\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$container(\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$view,\n\t\t\t\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$onClick,\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Page$Home$NavigateTo($author$project$Route$ChatRooms)),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Panel$description,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Create, delete and enter multiple rooms. Chat in each of them.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$Panel$title, 'Multi-Room Chat', $author$project$View$Panel$init)))))\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\tA2($author$project$View$Layout$title, 'Elm-Phoenix-WebSocket Examples', $author$project$View$Layout$init))),\n\t\ttitle: 'Home'\n\t};\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotHomeBtnClick = {$: 'GotHomeBtnClick'};\nvar $author$project$Page$JoinAndLeaveChannels$introduction = function (device) {\n\treturn _List_fromArray(\n\t\t[\n\t\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$mdgriffith$elm_ui$Element$text('Joining a Channel is handled automatically when a Channel is pushed to. '),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('However, if you want to take manual control here are a few examples.')\n\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$UI$FontSize$small(device)\n\t\t\t\t\t]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('(Connecting to the Socket is automatic if not already connected.) '))\n\t\t\t])\n\t\t]);\n};\nvar $author$project$Page$JoinAndLeaveChannels$GotMenuItem = function (a) {\n\treturn {$: 'GotMenuItem', a: a};\n};\nvar $author$project$Page$JoinAndLeaveChannels$menu = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tvar selected = function () {\n\t\t\tswitch (example.$) {\n\t\t\t\tcase 'SimpleJoinAndLeave':\n\t\t\t\t\treturn 'Simple Join And Leave';\n\t\t\t\tcase 'JoinWithGoodParams':\n\t\t\t\t\treturn 'Join With Good Params';\n\t\t\t\tcase 'JoinWithBadParams':\n\t\t\t\t\treturn 'Join With Bad Params';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'Join Multiple Channels';\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$author$project$View$Example$Menu$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$Menu$group,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Type$Group$layouts,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Phone,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Landscape,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[1, 2, 1])),\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Tablet,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Portrait,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[1, 2, 1]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t$author$project$Type$Group$init),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Menu$onClick,\n\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$JoinAndLeaveChannels$GotMenuItem),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Menu$selected,\n\t\t\t\t\t\tselected,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$options,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t['Simple Join And Leave', 'Join With Good Params', 'Join With Bad Params', 'Join Multiple Channels']),\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$init)))));\n\t});\nvar $author$project$Example$JoinMultipleChannels$GotJoin = {$: 'GotJoin'};\nvar $author$project$Example$JoinMultipleChannels$GotLeave = {$: 'GotLeave'};\nvar $author$project$View$Example$Join = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Join', a: a, b: b};\n\t});\nvar $author$project$Type$Example$JoinMultipleChannels = {$: 'JoinMultipleChannels'};\nvar $author$project$View$Example$Leave = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Leave', a: a, b: b};\n\t});\nvar $author$project$Internal$Channel$allJoined = function (_v0) {\n\tvar joined = _v0.a.joined;\n\treturn $author$project$Internal$Unique$toList(joined);\n};\nvar $author$project$Phoenix$joinedChannels = function (_v0) {\n\tvar channel = _v0.a.channel;\n\treturn $author$project$Internal$Channel$allJoined(channel);\n};\nvar $author$project$Extra$String$asList = function (string) {\n\treturn (string === '') ? '[ ]' : ('[ ' + (string + ' ]'));\n};\nvar $author$project$Extra$String$printList = function (list) {\n\treturn $author$project$Extra$String$asList(\n\t\tA2(\n\t\t\t$elm$core$String$dropLeft,\n\t\t\t3,\n\t\t\tA3(\n\t\t\t\t$elm$core$List$foldl,\n\t\t\t\tF2(\n\t\t\t\t\tfunction (str, acc) {\n\t\t\t\t\t\treturn acc + ('\\n, ' + $author$project$Extra$String$printQuoted(str));\n\t\t\t\t\t}),\n\t\t\t\t'',\n\t\t\t\tlist)));\n};\nvar $author$project$Example$JoinMultipleChannels$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.batch', 'Phoenix.join', 'Phoenix.leave']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Join,\n\t\t\t\t\t\t\t\t\t$author$project$Example$JoinMultipleChannels$GotJoin,\n\t\t\t\t\t\t\t\t\t!$elm$core$List$length(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix))),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$JoinMultipleChannels$GotLeave,\n\t\t\t\t\t\t\t\t\t$elm$core$List$length(\n\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)) === 3)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Join multiple Channels with a single command.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$JoinMultipleChannels)))))));\n\t});\nvar $author$project$Example$JoinWithBadParams$GotJoin = {$: 'GotJoin'};\nvar $author$project$Type$Example$JoinWithBadParams = {$: 'JoinWithBadParams'};\nvar $author$project$Phoenix$channelJoined = F2(\n\tfunction (topic, _v0) {\n\t\tvar channel = _v0.a.channel;\n\t\treturn A2($author$project$Internal$Channel$isJoined, topic, channel);\n\t});\nvar $author$project$UI$Link$type_ = function (_v0) {\n\tvar actual = _v0.a;\n\tvar text = _v0.b;\n\treturn A2(\n\t\t$mdgriffith$elm_ui$Element$newTabLink,\n\t\t_List_fromArray(\n\t\t\t[$author$project$UI$FontFamily$code]),\n\t\t{\n\t\t\tlabel: A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t_List_Nil,\n\t\t\t\t$author$project$UI$Link$format(text)),\n\t\t\turl: _Utils_ap($author$project$UI$Link$base, actual)\n\t\t});\n};\nvar $author$project$Example$JoinWithBadParams$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.setJoinConfig', 'Phoenix.join', 'Phoenix.leave']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$Join, $author$project$Example$JoinWithBadParams$GotJoin, true)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Join a Channel, providing auth params that are not accepted. ')\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('After we receive a '),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$UI$Link$type_(\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2('ChannelResponse', 'JoinError')),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(', we then call '),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$UI$Link$function('Phoenix.leave'),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(' to stop PhoenixJS from retrying to join with bad params.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$JoinWithBadParams)))))));\n\t});\nvar $author$project$Example$JoinWithGoodParams$GotJoin = {$: 'GotJoin'};\nvar $author$project$Example$JoinWithGoodParams$GotLeave = {$: 'GotLeave'};\nvar $author$project$Type$Example$JoinWithGoodParams = {$: 'JoinWithGoodParams'};\nvar $author$project$Example$JoinWithGoodParams$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.setJoinConfig', 'Phoenix.join', 'Phoenix.leave']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Join,\n\t\t\t\t\t\t\t\t\t$author$project$Example$JoinWithGoodParams$GotJoin,\n\t\t\t\t\t\t\t\t\t!A2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$JoinWithGoodParams$GotLeave,\n\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Join a Channel, providing auth params that are accepted.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$JoinWithGoodParams)))))));\n\t});\nvar $author$project$Example$SimpleJoinAndLeave$GotDisconnect = {$: 'GotDisconnect'};\nvar $author$project$Example$SimpleJoinAndLeave$GotJoin = {$: 'GotJoin'};\nvar $author$project$Example$SimpleJoinAndLeave$GotLeave = {$: 'GotLeave'};\nvar $author$project$Type$Example$SimpleJoinAndLeave = {$: 'SimpleJoinAndLeave'};\nvar $author$project$Example$SimpleJoinAndLeave$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.join', 'Phoenix.leave', 'Phoenix.disconnect']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Join,\n\t\t\t\t\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$GotJoin,\n\t\t\t\t\t\t\t\t\t!A2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$GotLeave,\n\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:join_and_leave_channels', phoenix)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Disconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Example$SimpleJoinAndLeave$GotDisconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('A simple Join to a Channel without sending any params. ')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$SimpleJoinAndLeave)))))));\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$viewExample = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tswitch (example.$) {\n\t\t\tcase 'SimpleJoinAndLeave':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotSimpleJoinAndLeaveMsg,\n\t\t\t\t\tA2($author$project$Example$SimpleJoinAndLeave$view, device, subModel));\n\t\t\tcase 'JoinWithGoodParams':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithGoodParamsMsg,\n\t\t\t\t\tA2($author$project$Example$JoinWithGoodParams$view, device, subModel));\n\t\t\tcase 'JoinWithBadParams':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinWithBadParamsMsg,\n\t\t\t\t\tA2($author$project$Example$JoinWithBadParams$view, device, subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$GotJoinMultipleChannelsMsg,\n\t\t\t\t\tA2($author$project$Example$JoinMultipleChannels$view, device, subModel));\n\t\t}\n\t});\nvar $author$project$Page$JoinAndLeaveChannels$view = function (model) {\n\tvar device = $author$project$Session$device(model.session);\n\treturn {\n\t\tcontent: A2(\n\t\t\t$author$project$View$Layout$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Layout$body,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Page$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Page$example,\n\t\t\t\t\t\tA2($author$project$Page$JoinAndLeaveChannels$viewExample, device, model),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Page$menu,\n\t\t\t\t\t\t\tA2($author$project$Page$JoinAndLeaveChannels$menu, device, model),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$Page$introduction,\n\t\t\t\t\t\t\t\t$author$project$Page$JoinAndLeaveChannels$introduction(device),\n\t\t\t\t\t\t\t\t$author$project$View$Example$Page$init)))),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Layout$title,\n\t\t\t\t\t'Join And Leave Channels',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Layout$homeMsg,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$JoinAndLeaveChannels$GotHomeBtnClick),\n\t\t\t\t\t\t$author$project$View$Layout$init)))),\n\t\ttitle: 'Join And Leave Channels'\n\t};\n};\nvar $author$project$UI$FontSize$pageNotFound = function (_v0) {\n\tvar _class = _v0._class;\n\treturn $mdgriffith$elm_ui$Element$Font$size(\n\t\tfunction () {\n\t\t\tswitch (_class.$) {\n\t\t\t\tcase 'Phone':\n\t\t\t\t\treturn 30;\n\t\t\t\tcase 'Tablet':\n\t\t\t\t\treturn 36;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 40;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$Page$NotFound$view = function (device) {\n\treturn {\n\t\tcontent: A2(\n\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerY,\n\t\t\t\t\t$author$project$UI$FontSize$pageNotFound(device)\n\t\t\t\t]),\n\t\t\t$mdgriffith$elm_ui$Element$text(' Page Not Found')),\n\t\ttitle: 'Not Found'\n\t};\n};\nvar $author$project$Page$SendAndReceive$GotHomeBtnClick = {$: 'GotHomeBtnClick'};\nvar $author$project$Page$SendAndReceive$introduction = _List_fromArray(\n\t[\n\t\t_List_fromArray(\n\t\t[\n\t\t\t$mdgriffith$elm_ui$Element$text('You can push to a Channel without needing to connect to the Socket or join '),\n\t\t\t$mdgriffith$elm_ui$Element$text('the Channel. These processes will be taken care of automatically when you send the push.')\n\t\t])\n\t]);\nvar $author$project$Page$SendAndReceive$GotMenuItem = function (a) {\n\treturn {$: 'GotMenuItem', a: a};\n};\nvar $author$project$Page$SendAndReceive$menu = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tvar selected = function () {\n\t\t\tswitch (example.$) {\n\t\t\t\tcase 'PushOneEvent':\n\t\t\t\t\treturn 'Push One Event';\n\t\t\t\tcase 'PushMultipleEvents':\n\t\t\t\t\treturn 'Push Multiple Events';\n\t\t\t\tcase 'ReceiveEvents':\n\t\t\t\t\treturn 'Receive Events';\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'Push With Timeout';\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\t$author$project$View$Example$Menu$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$Menu$group,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$Type$Group$layouts,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Phone,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Landscape,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[3, 1])),\n\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Tablet,\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Portrait,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[3, 1]))\n\t\t\t\t\t\t]),\n\t\t\t\t\t$author$project$Type$Group$init),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Menu$onClick,\n\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$SendAndReceive$GotMenuItem),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Menu$selected,\n\t\t\t\t\t\tselected,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$options,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t['Push One Event', 'Push Multiple Events', 'Push With Timeout', 'Receive Events']),\n\t\t\t\t\t\t\t$author$project$View$Example$Menu$init)))));\n\t});\nvar $author$project$Example$PushMultipleEvents$GotLeave = {$: 'GotLeave'};\nvar $author$project$Example$PushMultipleEvents$GotPush = {$: 'GotPush'};\nvar $author$project$View$Example$Push = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Push', a: a, b: b};\n\t});\nvar $author$project$Type$Example$PushMultipleEvents = {$: 'PushMultipleEvents'};\nvar $author$project$Example$PushMultipleEvents$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.batchParams', 'Phoenix.push', 'Phoenix.leave']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$Push, $author$project$Example$PushMultipleEvents$GotPush, true),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$PushMultipleEvents$GotLeave,\n\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Push multiple events to a Channel. '),\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('This example will make 3 simultaneous pushes.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$PushMultipleEvents)))))));\n\t});\nvar $author$project$Example$PushOneEvent$GotDisconnect = {$: 'GotDisconnect'};\nvar $author$project$Example$PushOneEvent$GotLeave = {$: 'GotLeave'};\nvar $author$project$Example$PushOneEvent$GotPush = {$: 'GotPush'};\nvar $author$project$Type$Example$PushOneEvent = {$: 'PushOneEvent'};\nvar $author$project$Example$PushOneEvent$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.isConnected',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.push', 'Phoenix.leave', 'Phoenix.disconnectAndReset']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$Push, $author$project$Example$PushOneEvent$GotPush, true),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$PushOneEvent$GotLeave,\n\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix)),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Disconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Example$PushOneEvent$GotDisconnect,\n\t\t\t\t\t\t\t\t\t$author$project$Phoenix$isConnected(phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Push an event to a Channel.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$PushOneEvent)))))));\n\t});\nvar $author$project$View$Example$CancelRetry = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'CancelRetry', a: a, b: b};\n\t});\nvar $author$project$Phoenix$Every = function (a) {\n\treturn {$: 'Every', a: a};\n};\nvar $author$project$Example$PushWithTimeout$GotCancelRetry = {$: 'GotCancelRetry'};\nvar $author$project$Example$PushWithTimeout$GotPush = {$: 'GotPush'};\nvar $author$project$Example$PushWithTimeout$GotRetryStrategy = function (a) {\n\treturn {$: 'GotRetryStrategy', a: a};\n};\nvar $author$project$Type$Example$PushWithTimeout = {$: 'PushWithTimeout'};\nvar $author$project$Example$PushWithTimeout$currentPush = function (push) {\n\treturn _Utils_eq(\n\t\tpush.ref,\n\t\t$elm$core$Maybe$Just('timeout_push'));\n};\nvar $author$project$View$RadioSelection$Config = function (a) {\n\treturn {$: 'Config', a: a};\n};\nvar $author$project$View$RadioSelection$init = $author$project$View$RadioSelection$Config(\n\t{label: '', onChange: $elm$core$Maybe$Nothing, options: _List_Nil, selected: $elm$core$Maybe$Nothing});\nvar $author$project$View$RadioSelection$label = F2(\n\tfunction (label_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$RadioSelection$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{label: label_}));\n\t});\nvar $author$project$View$RadioSelection$onChange = F2(\n\tfunction (toMsg, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$RadioSelection$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tonChange: $elm$core$Maybe$Just(toMsg)\n\t\t\t\t}));\n\t});\nvar $author$project$View$RadioSelection$options = F2(\n\tfunction (options_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$RadioSelection$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{options: options_}));\n\t});\nvar $author$project$View$RadioSelection$selected = F2(\n\tfunction (selected_, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$RadioSelection$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{\n\t\t\t\t\tselected: $elm$core$Maybe$Just(selected_)\n\t\t\t\t}));\n\t});\nvar $author$project$View$Example$status = F2(\n\tfunction (el, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{status: el}));\n\t});\nvar $author$project$View$Example$subControls = F2(\n\tfunction (subCntrls, _v0) {\n\t\tvar config = _v0.a;\n\t\treturn $author$project$View$Example$Config(\n\t\t\t_Utils_update(\n\t\t\t\tconfig,\n\t\t\t\t{subControls: subCntrls}));\n\t});\nvar $author$project$Phoenix$countdown = function (config) {\n\tvar _v0 = config.retryStrategy;\n\tswitch (_v0.$) {\n\t\tcase 'Drop':\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\tcase 'Every':\n\t\t\tvar seconds = _v0.a;\n\t\t\treturn $elm$core$Maybe$Just(seconds - config.timeoutTick);\n\t\tdefault:\n\t\t\tif (_v0.a.b) {\n\t\t\t\tvar _v1 = _v0.a;\n\t\t\t\tvar seconds = _v1.a;\n\t\t\t\treturn $elm$core$Maybe$Just(seconds - config.timeoutTick);\n\t\t\t} else {\n\t\t\t\tif (_v0.b.$ === 'Just') {\n\t\t\t\t\tvar max = _v0.b.a;\n\t\t\t\t\treturn $elm$core$Maybe$Just(max - config.timeoutTick);\n\t\t\t\t} else {\n\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t}\n};\nvar $author$project$Internal$Push$matchesWith = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar pushConfig = _v0.pushConfig;\n\t\treturn compareFunc(pushConfig);\n\t});\nvar $elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (maybeValue.$ === 'Just') {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar $author$project$Internal$Config$values = $elm$core$Dict$values;\nvar $author$project$Internal$Push$toMaybeCount = function (countdownFunc) {\n\treturn A2(\n\t\t$elm$core$Basics$composeR,\n\t\t$author$project$Internal$Config$values,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$core$List$head,\n\t\t\t$elm$core$Maybe$andThen(countdownFunc)));\n};\nvar $author$project$Internal$Push$timeoutCountdown = F3(\n\tfunction (compareFunc, countdownFunc, _v0) {\n\t\tvar timeouts = _v0.a.timeouts;\n\t\treturn A2(\n\t\t\t$author$project$Internal$Push$toMaybeCount,\n\t\t\tcountdownFunc,\n\t\t\tA2(\n\t\t\t\t$author$project$Internal$Push$filter,\n\t\t\t\t$author$project$Internal$Push$matchesWith(compareFunc),\n\t\t\t\ttimeouts));\n\t});\nvar $author$project$Phoenix$pushTimeoutCountdown = F2(\n\tfunction (compareFunc, _v0) {\n\t\tvar model = _v0.a;\n\t\treturn A3($author$project$Internal$Push$timeoutCountdown, compareFunc, $author$project$Phoenix$countdown, model.push);\n\t});\nvar $author$project$Example$PushWithTimeout$timeoutCountdown = function (phoenix) {\n\tif (A2($author$project$Phoenix$pushWaiting, $author$project$Example$PushWithTimeout$currentPush, phoenix)) {\n\t\tvar _v0 = A2($author$project$Phoenix$pushTimeoutCountdown, $author$project$Example$PushWithTimeout$currentPush, phoenix);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$author$project$UI$FontColor$default]),\n\t\t\t\t$mdgriffith$elm_ui$Element$text('Push Sent'));\n\t\t} else {\n\t\t\tvar count = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$author$project$UI$FontColor$default]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Time to next try:')),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[$author$project$UI$FontColor$value]),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(\n\t\t\t\t\t\t\t$elm$core$String$fromInt(count) + ' s'))\n\t\t\t\t\t]));\n\t\t}\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$none;\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$Column = {$: 'Column'};\nvar $mdgriffith$elm_ui$Element$Input$AfterFound = {$: 'AfterFound'};\nvar $mdgriffith$elm_ui$Element$Input$BeforeFound = {$: 'BeforeFound'};\nvar $mdgriffith$elm_ui$Element$Input$Idle = {$: 'Idle'};\nvar $mdgriffith$elm_ui$Element$Input$NotFound = {$: 'NotFound'};\nvar $mdgriffith$elm_ui$Element$Input$Selected = {$: 'Selected'};\nvar $mdgriffith$elm_ui$Element$Input$column = F2(\n\tfunction (attributes, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asColumn,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\tattributes)),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$downArrow = 'ArrowDown';\nvar $mdgriffith$elm_ui$Internal$Model$filter = function (attrs) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\tF2(\n\t\t\tfunction (x, _v0) {\n\t\t\t\tvar found = _v0.a;\n\t\t\t\tvar has = _v0.b;\n\t\t\t\tswitch (x.$) {\n\t\t\t\t\tcase 'NoAttribute':\n\t\t\t\t\t\treturn _Utils_Tuple2(found, has);\n\t\t\t\t\tcase 'Class':\n\t\t\t\t\t\tvar key = x.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\thas);\n\t\t\t\t\tcase 'Attr':\n\t\t\t\t\t\tvar attr = x.a;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\thas);\n\t\t\t\t\tcase 'StyleClass':\n\t\t\t\t\t\tvar style = x.b;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\thas);\n\t\t\t\t\tcase 'Width':\n\t\t\t\t\t\tvar width = x.a;\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'width', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'width', has));\n\t\t\t\t\tcase 'Height':\n\t\t\t\t\t\tvar height = x.a;\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'height', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'height', has));\n\t\t\t\t\tcase 'Describe':\n\t\t\t\t\t\tvar description = x.a;\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'described', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'described', has));\n\t\t\t\t\tcase 'Nearby':\n\t\t\t\t\t\tvar location = x.a;\n\t\t\t\t\t\tvar elem = x.b;\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\thas);\n\t\t\t\t\tcase 'AlignX':\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'align-x', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'align-x', has));\n\t\t\t\t\tcase 'AlignY':\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'align-y', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'align-y', has));\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn A2($elm$core$Set$member, 'transform', has) ? _Utils_Tuple2(found, has) : _Utils_Tuple2(\n\t\t\t\t\t\t\tA2($elm$core$List$cons, x, found),\n\t\t\t\t\t\t\tA2($elm$core$Set$insert, 'transform', has));\n\t\t\t\t}\n\t\t\t}),\n\t\t_Utils_Tuple2(_List_Nil, $elm$core$Set$empty),\n\t\tattrs).a;\n};\nvar $mdgriffith$elm_ui$Internal$Model$get = F2(\n\tfunction (attrs, isAttr) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, found) {\n\t\t\t\t\treturn isAttr(x) ? A2($elm$core$List$cons, x, found) : found;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$filter(attrs));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$leftArrow = 'ArrowLeft';\nvar $mdgriffith$elm_ui$Element$Input$onKeyLookup = function (lookup) {\n\tvar decode = function (code) {\n\t\tvar _v0 = lookup(code);\n\t\tif (_v0.$ === 'Nothing') {\n\t\t\treturn $elm$json$Json$Decode$fail('No key matched');\n\t\t} else {\n\t\t\tvar msg = _v0.a;\n\t\t\treturn $elm$json$Json$Decode$succeed(msg);\n\t\t}\n\t};\n\tvar isKey = A2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tdecode,\n\t\tA2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));\n\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\tA2($elm$html$Html$Events$on, 'keyup', isKey));\n};\nvar $mdgriffith$elm_ui$Element$Input$rightArrow = 'ArrowRight';\nvar $mdgriffith$elm_ui$Element$Input$row = F2(\n\tfunction (attributes, children) {\n\t\treturn A4(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$element,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$asRow,\n\t\t\t$mdgriffith$elm_ui$Internal$Model$div,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\tattributes),\n\t\t\t$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$space = ' ';\nvar $mdgriffith$elm_ui$Element$Input$tabindex = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$tabindex);\nvar $mdgriffith$elm_ui$Element$Input$upArrow = 'ArrowUp';\nvar $mdgriffith$elm_ui$Element$Input$radioHelper = F3(\n\tfunction (orientation, attrs, input) {\n\t\tvar track = F2(\n\t\t\tfunction (opt, _v14) {\n\t\t\t\tvar found = _v14.a;\n\t\t\t\tvar prev = _v14.b;\n\t\t\t\tvar nxt = _v14.c;\n\t\t\t\tvar val = opt.a;\n\t\t\t\tswitch (found.$) {\n\t\t\t\t\tcase 'NotFound':\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(val),\n\t\t\t\t\t\t\tinput.selected) ? _Utils_Tuple3($mdgriffith$elm_ui$Element$Input$BeforeFound, prev, nxt) : _Utils_Tuple3(found, val, nxt);\n\t\t\t\t\tcase 'BeforeFound':\n\t\t\t\t\t\treturn _Utils_Tuple3($mdgriffith$elm_ui$Element$Input$AfterFound, prev, val);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn _Utils_Tuple3(found, prev, nxt);\n\t\t\t\t}\n\t\t\t});\n\t\tvar renderOption = function (_v11) {\n\t\t\tvar val = _v11.a;\n\t\t\tvar view = _v11.b;\n\t\t\tvar status = _Utils_eq(\n\t\t\t\t$elm$core$Maybe$Just(val),\n\t\t\t\tinput.selected) ? $mdgriffith$elm_ui$Element$Input$Selected : $mdgriffith$elm_ui$Element$Input$Idle;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$pointer,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (orientation.$ === 'Row') {\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}(),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Events$onClick(\n\t\t\t\t\t\tinput.onChange(val)),\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\tif (status.$ === 'Selected') {\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'aria-checked', 'true'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'aria-checked', 'false'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}(),\n\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'role', 'radio'))\n\t\t\t\t\t]),\n\t\t\t\tview(status));\n\t\t};\n\t\tvar prevNext = function () {\n\t\t\tvar _v5 = input.options;\n\t\t\tif (!_v5.b) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar _v6 = _v5.a;\n\t\t\t\tvar val = _v6.a;\n\t\t\t\treturn function (_v7) {\n\t\t\t\t\tvar found = _v7.a;\n\t\t\t\t\tvar b = _v7.b;\n\t\t\t\t\tvar a = _v7.c;\n\t\t\t\t\tswitch (found.$) {\n\t\t\t\t\t\tcase 'NotFound':\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(b, val));\n\t\t\t\t\t\tcase 'BeforeFound':\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(b, val));\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t_Utils_Tuple2(b, a));\n\t\t\t\t\t}\n\t\t\t\t}(\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\ttrack,\n\t\t\t\t\t\t_Utils_Tuple3($mdgriffith$elm_ui$Element$Input$NotFound, val, val),\n\t\t\t\t\t\tinput.options));\n\t\t\t}\n\t\t}();\n\t\tvar optionArea = function () {\n\t\t\tif (orientation.$ === 'Row') {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$row,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(input.label),\n\t\t\t\t\t\tattrs),\n\t\t\t\t\tA2($elm$core$List$map, renderOption, input.options));\n\t\t\t} else {\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$column,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(input.label),\n\t\t\t\t\t\tattrs),\n\t\t\t\t\tA2($elm$core$List$map, renderOption, input.options));\n\t\t\t}\n\t\t}();\n\t\tvar events = A2(\n\t\t\t$mdgriffith$elm_ui$Internal$Model$get,\n\t\t\tattrs,\n\t\t\tfunction (attr) {\n\t\t\t\t_v3$3:\n\t\t\t\twhile (true) {\n\t\t\t\t\tswitch (attr.$) {\n\t\t\t\t\t\tcase 'Width':\n\t\t\t\t\t\t\tif (attr.a.$ === 'Fill') {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v3$3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'Height':\n\t\t\t\t\t\t\tif (attr.a.$ === 'Fill') {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v3$3;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase 'Attr':\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak _v3$3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\treturn A3(\n\t\t\t$mdgriffith$elm_ui$Element$Input$applyLabel,\n\t\t\t_Utils_ap(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$filterMap,\n\t\t\t\t\t$elm$core$Basics$identity,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$core$Maybe$Just($mdgriffith$elm_ui$Element$alignLeft),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$tabindex(0)),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass('focus')),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just($mdgriffith$elm_ui$Element$Region$announce),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$Attr(\n\t\t\t\t\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'role', 'radiogroup'))),\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tif (prevNext.$ === 'Nothing') {\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar _v1 = prevNext.a;\n\t\t\t\t\t\t\t\tvar prev = _v1.a;\n\t\t\t\t\t\t\t\tvar next = _v1.b;\n\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Input$onKeyLookup(\n\t\t\t\t\t\t\t\t\t\tfunction (code) {\n\t\t\t\t\t\t\t\t\t\t\tif (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$leftArrow)) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\tinput.onChange(prev));\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tif (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$upArrow)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.onChange(prev));\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$rightArrow)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.onChange(next));\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$downArrow)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.onChange(next));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar _v2 = input.selected;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (_v2.$ === 'Nothing') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinput.onChange(prev));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}()\n\t\t\t\t\t\t])),\n\t\t\t\tevents),\n\t\t\tinput.label,\n\t\t\toptionArea);\n\t});\nvar $mdgriffith$elm_ui$Element$Input$radio = $mdgriffith$elm_ui$Element$Input$radioHelper($mdgriffith$elm_ui$Element$Input$Column);\nvar $mdgriffith$elm_ui$Element$Input$Row = {$: 'Row'};\nvar $mdgriffith$elm_ui$Element$Input$radioRow = $mdgriffith$elm_ui$Element$Input$radioHelper($mdgriffith$elm_ui$Element$Input$Row);\nvar $author$project$View$RadioSelection$radio = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\tif ((_v1.a.$ === 'Phone') && (_v1.b.$ === 'Portrait')) {\n\t\tvar _v2 = _v1.a;\n\t\tvar _v3 = _v1.b;\n\t\treturn $mdgriffith$elm_ui$Element$Input$radio(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10)\n\t\t\t\t]));\n\t} else {\n\t\treturn $mdgriffith$elm_ui$Element$Input$radioRow(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(20)\n\t\t\t\t]));\n\t}\n};\nvar $mdgriffith$elm_ui$Element$Input$Above = {$: 'Above'};\nvar $mdgriffith$elm_ui$Element$Input$Label = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 'Label', a: a, b: b, c: c};\n\t});\nvar $mdgriffith$elm_ui$Element$Input$labelAbove = $mdgriffith$elm_ui$Element$Input$Label($mdgriffith$elm_ui$Element$Input$Above);\nvar $author$project$View$RadioSelection$paddingBottom = function (_v0) {\n\tvar _class = _v0._class;\n\tvar orientation = _v0.orientation;\n\treturn $author$project$UI$Padding$bottom(\n\t\tfunction () {\n\t\t\tvar _v1 = _Utils_Tuple2(_class, orientation);\n\t\t\tif ((_v1.a.$ === 'Phone') && (_v1.b.$ === 'Portrait')) {\n\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\tvar _v3 = _v1.b;\n\t\t\t\treturn 5;\n\t\t\t} else {\n\t\t\t\treturn 10;\n\t\t\t}\n\t\t}());\n};\nvar $author$project$View$RadioSelection$toLabel = F2(\n\tfunction (device, text) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$labelAbove,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$author$project$View$RadioSelection$paddingBottom(device),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$centerX\n\t\t\t\t]),\n\t\t\t$mdgriffith$elm_ui$Element$text(text));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$Option = F2(\n\tfunction (a, b) {\n\t\treturn {$: 'Option', a: a, b: b};\n\t});\nvar $mdgriffith$elm_ui$Element$Input$defaultRadioOption = F2(\n\tfunction (optionLabel, status) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$row,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$mdgriffith$elm_ui$Element$spacing(10),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$alignLeft,\n\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(14)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$height(\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$px(14)),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Background$color($mdgriffith$elm_ui$Element$Input$white),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$rounded(7),\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tif (status.$ === 'Selected') {\n\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn $mdgriffith$elm_ui$Internal$Model$NoAttribute;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$width(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tswitch (status.$) {\n\t\t\t\t\t\t\t\t\tcase 'Idle':\n\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\tcase 'Focused':\n\t\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn 5;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}()),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Border$color(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tswitch (status.$) {\n\t\t\t\t\t\t\t\t\tcase 'Idle':\n\t\t\t\t\t\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb, 208 / 255, 208 / 255, 208 / 255);\n\t\t\t\t\t\t\t\t\tcase 'Focused':\n\t\t\t\t\t\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb, 208 / 255, 208 / 255, 208 / 255);\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\treturn A3($mdgriffith$elm_ui$Element$rgb, 59 / 255, 153 / 255, 252 / 255);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}())\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$none),\n\t\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Internal$Model$htmlClass('unfocusable')\n\t\t\t\t\t\t]),\n\t\t\t\t\toptionLabel)\n\t\t\t\t]));\n\t});\nvar $mdgriffith$elm_ui$Element$Input$option = F2(\n\tfunction (val, txt) {\n\t\treturn A2(\n\t\t\t$mdgriffith$elm_ui$Element$Input$Option,\n\t\t\tval,\n\t\t\t$mdgriffith$elm_ui$Element$Input$defaultRadioOption(txt));\n\t});\nvar $author$project$View$RadioSelection$toOption = F2(\n\tfunction (_v0, _v1) {\n\t\tvar _class = _v0._class;\n\t\tvar orientation = _v0.orientation;\n\t\tvar value = _v1.a;\n\t\tvar text = _v1.b;\n\t\tvar _v2 = _Utils_Tuple2(_class, orientation);\n\t\tif ((_v2.a.$ === 'Phone') && (_v2.b.$ === 'Portrait')) {\n\t\t\tvar _v3 = _v2.a;\n\t\t\tvar _v4 = _v2.b;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$option,\n\t\t\t\tvalue,\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$paragraph,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Font$alignLeft\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)\n\t\t\t\t\t\t])));\n\t\t} else {\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$Input$option,\n\t\t\t\tvalue,\n\t\t\t\tA2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)\n\t\t\t\t\t\t]),\n\t\t\t\t\t$mdgriffith$elm_ui$Element$text(text)));\n\t\t}\n\t});\nvar $author$project$View$RadioSelection$view = F2(\n\tfunction (device, _v0) {\n\t\tvar config = _v0.a;\n\t\tvar _v1 = config.onChange;\n\t\tif (_v1.$ === 'Nothing') {\n\t\t\treturn $mdgriffith$elm_ui$Element$none;\n\t\t} else {\n\t\t\tvar toMsg = _v1.a;\n\t\t\treturn A2(\n\t\t\t\t$mdgriffith$elm_ui$Element$el,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[$mdgriffith$elm_ui$Element$centerX]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$RadioSelection$radio,\n\t\t\t\t\tdevice,\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: A2($author$project$View$RadioSelection$toLabel, device, config.label),\n\t\t\t\t\t\tonChange: toMsg,\n\t\t\t\t\t\toptions: A2(\n\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t$author$project$View$RadioSelection$toOption(device),\n\t\t\t\t\t\t\tconfig.options),\n\t\t\t\t\t\tselected: config.selected\n\t\t\t\t\t}));\n\t\t}\n\t});\nvar $author$project$Example$PushWithTimeout$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\tvar retryStrategy = _v0.retryStrategy;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.push', 'Phoenix.pushTimeoutCountdown', 'Phoenix.dropTimeoutPush', 'Phoenix.dropPush', 'Phoenix.pushTimedOut', 'Phoenix.pushWaiting']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$status,\n\t\t\t\t\t\t\t$author$project$Example$PushWithTimeout$timeoutCountdown(phoenix),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$subControls,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$RadioSelection$view,\n\t\t\t\t\t\t\t\t\tdevice,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$RadioSelection$options,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2($author$project$Phoenix$Drop, 'Drop'),\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Every(5),\n\t\t\t\t\t\t\t\t\t\t\t\t'Every 5'),\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Phoenix$Backoff,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[1, 2, 3, 4]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Maybe$Just(5)),\n\t\t\t\t\t\t\t\t\t\t\t\t'Backoff [ 1, 2, 3, 4 ] (Just 5)')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$RadioSelection$label,\n\t\t\t\t\t\t\t\t\t\t\t'Select a retry strategy',\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$RadioSelection$selected,\n\t\t\t\t\t\t\t\t\t\t\t\tretryStrategy,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$View$RadioSelection$onChange, $author$project$Example$PushWithTimeout$GotRetryStrategy, $author$project$View$RadioSelection$init))))),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$controlsGroup,\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$Group$layouts,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple3(\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Phone,\n\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$Portrait,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[2]))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t$author$project$Type$Group$init),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$Push,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$PushWithTimeout$GotPush,\n\t\t\t\t\t\t\t\t\t\t\t\t!A2($author$project$Phoenix$pushWaiting, $author$project$Example$PushWithTimeout$currentPush, phoenix)),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$CancelRetry,\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Example$PushWithTimeout$GotCancelRetry,\n\t\t\t\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$pushTimedOut, $author$project$Example$PushWithTimeout$currentPush, phoenix))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Push an event that results in a timeout - receiving feedback until the next try.')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$PushWithTimeout))))))))));\n\t});\nvar $author$project$Example$ReceiveEvents$GotLeave = {$: 'GotLeave'};\nvar $author$project$Example$ReceiveEvents$GotPush = {$: 'GotPush'};\nvar $author$project$Type$Example$ReceiveEvents = {$: 'ReceiveEvents'};\nvar $author$project$Example$ReceiveEvents$view = F2(\n\tfunction (device, _v0) {\n\t\tvar responses = _v0.responses;\n\t\tvar phoenix = _v0.phoenix;\n\t\treturn A2(\n\t\t\t$author$project$View$Example$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Example$usefulFunctions,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.channelJoined',\n\t\t\t\t\t\t$author$project$Extra$String$printBool(\n\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))),\n\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t'Phoenix.joinedChannels',\n\t\t\t\t\t\t$author$project$Extra$String$printList(\n\t\t\t\t\t\t\t$author$project$Phoenix$joinedChannels(phoenix)))\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$applicableFunctions,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t['Phoenix.setJoinConfig', 'Phoenix.push', 'Phoenix.leave']),\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$responses,\n\t\t\t\t\t\tresponses,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$controls,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2($author$project$View$Example$Push, $author$project$Example$ReceiveEvents$GotPush, true),\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$author$project$View$Example$Leave,\n\t\t\t\t\t\t\t\t\t$author$project$Example$ReceiveEvents$GotLeave,\n\t\t\t\t\t\t\t\t\tA2($author$project$Phoenix$channelJoined, 'example:send_and_receive', phoenix))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$author$project$View$Example$description,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$mdgriffith$elm_ui$Element$text('Receive two events from the Channel after a push.')\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t$author$project$View$Example$init($author$project$Type$Example$ReceiveEvents)))))));\n\t});\nvar $author$project$Page$SendAndReceive$viewExample = F2(\n\tfunction (device, _v0) {\n\t\tvar example = _v0.example;\n\t\tswitch (example.$) {\n\t\t\tcase 'PushOneEvent':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushOneEventMsg,\n\t\t\t\t\tA2($author$project$Example$PushOneEvent$view, device, subModel));\n\t\t\tcase 'PushMultipleEvents':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushMultipleEventsMsg,\n\t\t\t\t\tA2($author$project$Example$PushMultipleEvents$view, device, subModel));\n\t\t\tcase 'ReceiveEvents':\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotReceiveEventsMsg,\n\t\t\t\t\tA2($author$project$Example$ReceiveEvents$view, device, subModel));\n\t\t\tdefault:\n\t\t\t\tvar subModel = example.a;\n\t\t\t\treturn A2(\n\t\t\t\t\t$mdgriffith$elm_ui$Element$map,\n\t\t\t\t\t$author$project$Page$SendAndReceive$GotPushWithTimeoutMsg,\n\t\t\t\t\tA2($author$project$Example$PushWithTimeout$view, device, subModel));\n\t\t}\n\t});\nvar $author$project$Page$SendAndReceive$view = function (model) {\n\tvar device = $author$project$Session$device(model.session);\n\treturn {\n\t\tcontent: A2(\n\t\t\t$author$project$View$Layout$view,\n\t\t\tdevice,\n\t\t\tA2(\n\t\t\t\t$author$project$View$Layout$body,\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Example$Page$view,\n\t\t\t\t\tdevice,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Example$Page$example,\n\t\t\t\t\t\tA2($author$project$Page$SendAndReceive$viewExample, device, model),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$author$project$View$Example$Page$menu,\n\t\t\t\t\t\t\tA2($author$project$Page$SendAndReceive$menu, device, model),\n\t\t\t\t\t\t\tA2($author$project$View$Example$Page$introduction, $author$project$Page$SendAndReceive$introduction, $author$project$View$Example$Page$init)))),\n\t\t\t\tA2(\n\t\t\t\t\t$author$project$View$Layout$title,\n\t\t\t\t\t'Send And Receive',\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$author$project$View$Layout$homeMsg,\n\t\t\t\t\t\t$elm$core$Maybe$Just($author$project$Page$SendAndReceive$GotHomeBtnClick),\n\t\t\t\t\t\t$author$project$View$Layout$init)))),\n\t\ttitle: 'Send And Receive'\n\t};\n};\nvar $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;\nvar $author$project$Main$viewPage = F4(\n\tfunction (vsn, device, toMsg, pageConfig) {\n\t\tvar _v0 = A3($author$project$Page$view, vsn, device, pageConfig);\n\t\tvar title = _v0.title;\n\t\tvar body = _v0.body;\n\t\treturn {\n\t\t\tbody: A2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\t$elm$html$Html$map(toMsg),\n\t\t\t\tbody),\n\t\t\ttitle: title\n\t\t};\n\t});\nvar $author$project$Main$view = function (model) {\n\tvar vsn = $author$project$Main$toVersion(model);\n\tvar device = $author$project$Main$toDevice(model);\n\tswitch (model.$) {\n\t\tcase 'Redirect':\n\t\t\treturn A3($author$project$Page$view, vsn, device, $author$project$Page$Blank$view);\n\t\tcase 'NotFound':\n\t\t\treturn A3(\n\t\t\t\t$author$project$Page$view,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Page$NotFound$view(device));\n\t\tcase 'Home':\n\t\t\treturn A4(\n\t\t\t\t$author$project$Main$viewPage,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Main$GotHomeMsg,\n\t\t\t\t$author$project$Page$Home$view(device));\n\t\tcase 'ChatRooms':\n\t\t\tvar subModel = model.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Main$viewPage,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Main$GotChatRoomsMsg,\n\t\t\t\t$author$project$Page$ChatRooms$view(subModel));\n\t\tcase 'ControlTheSocketConnection':\n\t\t\tvar subModel = model.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Main$viewPage,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Main$GotControlTheSocketConnectionMsg,\n\t\t\t\t$author$project$Page$ControlTheSocketConnection$view(subModel));\n\t\tcase 'JoinAndLeaveChannels':\n\t\t\tvar subModel = model.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Main$viewPage,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Main$GotJoinAndLeaveChannelsMsg,\n\t\t\t\t$author$project$Page$JoinAndLeaveChannels$view(subModel));\n\t\tdefault:\n\t\t\tvar subModel = model.a;\n\t\t\treturn A4(\n\t\t\t\t$author$project$Main$viewPage,\n\t\t\t\tvsn,\n\t\t\t\tdevice,\n\t\t\t\t$author$project$Main$GotSendAndReceiveMsg,\n\t\t\t\t$author$project$Page$SendAndReceive$view(subModel));\n\t}\n};\nvar $author$project$Main$main = $elm$browser$Browser$application(\n\t{init: $author$project$Main$init, onUrlChange: $author$project$Main$ChangedUrl, onUrlRequest: $author$project$Main$ClickedLink, subscriptions: $author$project$Main$subscriptions, update: $author$project$Main$update, view: $author$project$Main$view});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\tA2(\n\t\t$elm$json$Json$Decode$andThen,\n\t\tfunction (width) {\n\t\t\treturn A2(\n\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\tfunction (vsn) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$json$Json$Decode$andThen,\n\t\t\t\t\t\tfunction (height) {\n\t\t\t\t\t\t\treturn $elm$json$Json$Decode$succeed(\n\t\t\t\t\t\t\t\t{height: height, vsn: vsn, width: width});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tA2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$int));\n\t\t\t\t},\n\t\t\t\tA2($elm$json$Json$Decode$field, 'vsn', $elm$json$Json$Decode$string));\n\t\t},\n\t\tA2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$int)))(0)}});}(this));\n\n//# sourceURL=webpack:///./elm/src/Main.elm?");

/***/ }),

/***/ "./js/app.js":
/*!*******************!*\
  !*** ./js/app.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var phoenix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! phoenix */ \"../deps/phoenix/priv/static/phoenix.js\");\n/* harmony import */ var phoenix__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(phoenix__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _elm_src_Main_elm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elm/src/Main.elm */ \"./elm/src/Main.elm\");\n/* harmony import */ var _elm_src_Main_elm__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_elm_src_Main_elm__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _elmPhoenixWebSocket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elmPhoenixWebSocket */ \"./js/elmPhoenixWebSocket.js\");\n\n\n\nvar flags = {\n  height: window.innerHeight,\n  width: window.innerWidth,\n  vsn: document.querySelector(\"#body\").dataset.vsn\n};\nvar app = _elm_src_Main_elm__WEBPACK_IMPORTED_MODULE_1__[\"Elm\"].Main.init({\n  flags: flags\n});\n_elmPhoenixWebSocket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].init(app.ports, phoenix__WEBPACK_IMPORTED_MODULE_0__[\"Socket\"], phoenix__WEBPACK_IMPORTED_MODULE_0__[\"Presence\"]);\n\n//# sourceURL=webpack:///./js/app.js?");

/***/ }),

/***/ "./js/elmPhoenixWebSocket.js":
/*!***********************************!*\
  !*** ./js/elmPhoenixWebSocket.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n////////////////////////////////////////////////////////\n//\n// elmPhoenixWebSocket.js\n// JavaScript runtime code for Elm-Phoenix-WebSocket\n// Copyright (c) 2019 Paul Hollyer <paul@hollyer.me.uk>\n// Some rights reserved.\n// Distributed under the MIT License\n// See LICENSE\n//\n////////////////////////////////////////////////////////\n\n/*\n\n   This is Version 3\n\n   For Version 2, go to:\n\n   https://github.com/phollyer/elm-phoenix-websocket/tree/2.0.0\n\n   For Version 1.1.0\n\n   https://github.com/phollyer/elm-phoenix-websocket/tree/1.1.0\n\n*/\nvar ElmPhoenixWebSocket = {\n  /* The Phoenix Socket class imported with `import {Socket} from \"phoenix\"`.\n      This is passed in as a parameter to the `init` function.\n  */\n  phoenixSocket: {},\n  // The Phoenix JS socket instantiated with `new phoenixSocket(url, params)`.\n  socket: {},\n\n  /* A map of channels with each topic as the key.\n      This is used to store multiple channels.\n  */\n  channels: {},\n\n  /* A map of lists of incoming channel events with the topic as the key.\n   */\n  events: {},\n\n  /* The Phoenix Presence class imported with `import {Presence} from \"phoenix\"`.\n      This is passed in as a parameter to the `init` function.\n   */\n  phoenixPresence: {},\n\n  /* A map of presence data with the channel topic as the key.\n      This is used to store the presence data when multiple channels are used.\n  */\n  presences: {},\n  // The Elm ports object.\n  elmPorts: {},\n  // The endpoint url.\n  url: \"/socket\",\n\n  /* This is used in the onClose and onOpen callback functions because\n     onClose does not provide enough information to determine if the\n     user was:\n          1. Denied access by the Elixir socket, or\n         2. The internet connection dropped out\n      We assume the user will be denied, and only set this to true when the\n     socket connects successfully. Therefore we currently assume that if\n     this value is true when onClose fires, it is because the network has\n     dropped out.\n  */\n  allowReconnect: false,\n\n  /* init\n       Set up the ports, socket and presence.\n       Send the socket info back to Phoenix.elm\n  */\n  init: function init(ports, socket, presence) {\n    var _this = this;\n\n    this.elmPorts = ports;\n    this.elmPorts.phoenixSend.subscribe(function (params) {\n      return _this[params.msg](params.payload);\n    });\n    this.phoenixSocket = socket;\n    this.phoenixPresence = presence;\n    this.socket = new this.phoenixSocket(this.url, {});\n    this.info();\n  },\n\n  /********** Socket **********/\n\n  /* connect\n       Connect to the socket.\n       Set up the callback functions.\n       data <maybe object>\n          params <maybe object>\n              Data to be sent to the socket when attempting to connect, such\n              as authentication params.\n           options <maybe object>\n              Options to set on the socket when creating it.\n  */\n  connect: function connect(data) {\n    var _this2 = this;\n\n    this.socket = new this.phoenixSocket(this.url, this.setOptionsAndParams(data));\n    this.socket.onError(function (resp) {\n      return _this2.socketSend(\"Error\", {\n        reason: \"\"\n      });\n    });\n    this.socket.onMessage(function (resp) {\n      return _this2.onMessage(resp);\n    });\n    this.socket.onOpen(function (resp) {\n      _this2.socketSend(\"Opened\", resp);\n\n      _this2.info();\n\n      _this2.allowReconnect = true;\n    });\n    this.socket.onClose(function (resp) {\n      if (resp.code != 1000) {\n        if (_this2.allowReconnect) {\n          /* The socket has closed unexpectedly after having been open,\n             so we assume the closure was due to a drop in the network.\n          */\n          _this2.socketSend(\"Error\", {\n            reason: \"Unreachable\"\n          });\n        } else {\n          /* The socket closes, and allowReconnect is still equal to\n             false, so we assume the socket has denied the connection for\n             some reason.\n              Therefore, reset the reconnectTimer so that we don't keep\n             trying to connect with the same bad creds.\n           */\n          _this2.socket.reconnectTimer.reset();\n          /* One known case exists that isn't covered here.\n              If the application or the server is down, but the network\n             up, then we still end up here, sending back \"Denied\". This\n             is the wrong response for this scenario.\n              TODO:\n              Send an ajax request to the server to determine if it is the\n             application or the server that is down.\n              If the server is unreachable, send an ajax request to an\n             alternative server. As it is unlikely that both servers will\n             be down at the same time, we can then assume that the user\n             does not have access to the internet.\n              This would require the user to opt in and provide additional\n             config details to be used by the ajax requests.\n           */\n\n\n          _this2.socketSend(\"Error\", {\n            reason: \"Denied\"\n          });\n        }\n      }\n\n      _this2.info();\n\n      _this2.socketSend(\"Closed\", resp);\n    });\n    this.info(); // Ensure this is set to false before trying to connect.\n\n    this.allowReconnect = false;\n    this.socketSend(\"Connecting\", {});\n    this.socket.connect();\n  },\n\n  /* setOptionsAndParams\n       data <object>\n          params <maybe object>\n              Any data to be sent to the socket when connecting, such as\n              authentication params.\n           options <maybe object>\n              Any options to set on the socket when connecting.\n  */\n  setOptionsAndParams: function setOptionsAndParams(data) {\n    if (data) {\n      var options = data.options;\n\n      if (options) {\n        if (options.reconnectSteppedBackoff && options.reconnectAfterMs) {\n          options.reconnectAfterMs = function (tries) {\n            return options.reconnectSteppedBackoff[tries - 1] || options.reconnectAfterMs;\n          };\n\n          delete options.reconnectSteppedBackoff;\n        }\n\n        if (options.rejoinSteppedBackoff && options.rejoinAfterMs) {\n          options.rejoinAfterMs = function (tries) {\n            return options.rejoinSteppedBackoff[tries - 1] || options.rejoinAfterMs;\n          };\n\n          delete options.rejoinSteppedBackoff;\n        }\n\n        if (options.logger) {\n          options.logger = this.logger;\n        }\n      }\n\n      if (data.params && options) {\n        options.params = data.params;\n      } else if (data.params) {\n        options = data;\n      }\n\n      return options;\n    }\n\n    return null;\n  },\n\n  /* disconnect\n       Disconnect from the socket.\n  */\n  disconnect: function disconnect(params) {\n    this.channels = {};\n    this.presences = {};\n    this.events = {};\n    this.socketSend(\"Disconnecting\", {});\n    this.socket.disconnect(function () {}, params.code);\n  },\n\n  /* onMessage */\n  onMessage: function onMessage(resp) {\n    if (resp.topic == \"phoenix\") {\n      this.socketSend(\"Heartbeat\", resp);\n    } else if (resp.event.indexOf(\"presence\") == 0) {\n      this.socketSend(\"Presence\", resp);\n    } else {\n      this.socketSend(\"Channel\", resp);\n    }\n  },\n\n  /***** Socket Information *****/\n\n  /* connectionState\n       Retrieve the current connection state and send it back to Elm as a String.\n  */\n  connectionState: function connectionState() {\n    this.socketSend(\"ConnectionState\", this.socket.connectionState());\n  },\n\n  /* endpoint\n       Retrieve the current endpoint and send it back to Elm as a String.\n  */\n  endPointURL: function endPointURL() {\n    this.socketSend(\"EndPointURL\", this.socket.endPointURL());\n  },\n\n  /* hasLogger\n       Determine if a logger has been set on the socket and send it back to\n      Elm as a Maybe Bool.\n       The hasLogger function does not exist on all versions of PhoenixJS so\n      we check it exists before calling it.\n       If it does exist, we call the function and send back the result.\n       If it does not exist, we simply send back `null` to signify that the\n      function is not available.\n  */\n  hasLogger: function hasLogger() {\n    this.socketSend(\"HasLogger\", this.getHasLogger());\n  },\n  getHasLogger: function getHasLogger() {\n    if (this.socket.hasLogger) {\n      return this.socket.hasLogger();\n    } else {\n      return null;\n    }\n  },\n\n  /* isConnected\n       Retrieve whether the socket is currently connected and send it back to\n      Elm as a Bool.\n  */\n  isConnected: function isConnected() {\n    this.socketSend(\"IsConnected\", this.socket.isConnected());\n  },\n\n  /* makeRef\n       Retrieve the next message ref, accounting for overflows, and send it\n      back to Elm as a String.\n  */\n  makeRef: function makeRef() {\n    this.socketSend(\"MakeRef\", this.socket.makeRef());\n  },\n\n  /* protocol\n       Retrieve the current protocol and send it back to Elm as a String.\n  */\n  protocol: function protocol() {\n    this.socketSend(\"Protocol\", this.socket.protocol());\n  },\n\n  /* info\n       Retrieve all the socket info and send it back to Elm.\n  */\n  info: function info() {\n    var info = {\n      connectionState: this.socket.connectionState(),\n      endPointURL: this.socket.endPointURL(),\n      hasLogger: this.getHasLogger(),\n      isConnected: this.socket.isConnected(),\n      nextMessageRef: this.socket.makeRef(),\n      protocol: this.socket.protocol()\n    };\n    this.socketSend(\"Info\", info);\n  },\n\n  /* socketSend\n       Send data to Elm.\n       msg <string>\n          The message to send through the port.\n       payload <json>|<elm comparable>\n          The data to send.\n  */\n  socketSend: function socketSend(msg, payload) {\n    this.elmPorts.socketReceiver.send({\n      msg: msg,\n      payload: payload\n    });\n  },\n\n  /* log\n       Logs the message.\n       params <object>\n          kind <string>\n          msg <string>\n          data <object>\n  */\n  log: function log(params) {\n    if (this.socket.hasLogger && this.socket.hasLogger()) {\n      this.socket.log(params.kind, params.msg, params.data);\n    }\n  },\n  startLogging: function startLogging() {\n    this.socket.logger = this.logger;\n  },\n  stopLogging: function stopLogging() {\n    this.socket.logger = null;\n  },\n  logger: function logger(kind, msg, data) {\n    console.log(\"\".concat(kind, \": \").concat(msg), data);\n  },\n\n  /********** Channel **********/\n\n  /* join\n       Join a channel.\n       params <object>\n          topic <string>\n              The topic of the channel.\n           payload <maybe object>\n              Optional data to be sent to the channel, such as\n              authentication params.\n           events <list string>\n              The events expected to come from the channel.\n           timeout <maybe int>\n              Optional timeout in ms.\n  */\n  join: function join(params) {\n    var _this3 = this;\n\n    var channel = this.createChannel(params);\n    var join = {}; // Join the channel, with or without a custom timeout.\n\n    if (params.timeout) {\n      join = channel.join(params.timeout);\n    } else {\n      join = channel.join();\n    }\n\n    join.receive(\"ok\", function (payload) {\n      return _this3.channelSend(params.topic, \"JoinOk\", payload);\n    }).receive(\"error\", function (payload) {\n      return _this3.channelSend(params.topic, \"JoinError\", payload);\n    }).receive(\"timeout\", function () {\n      return _this3.channelSend(params.topic, \"JoinTimeout\", params.payload);\n    });\n  },\n  createChannel: function createChannel(params) {\n    var _this4 = this;\n\n    var channel = this.socket.channel(params.topic, params.payload);\n    channel.onClose(function () {\n      return _this4.channelSend(params.topic, \"Closed\", {});\n    });\n    channel.onError(function () {\n      return _this4.channelSend(params.topic, \"Error\", {});\n    });\n    channel.on(\"presence_diff\", function (diff) {\n      return _this4.onDiff(params.topic, diff);\n    });\n    channel.on(\"presence_state\", function (state) {\n      return _this4.onState(params.topic, state);\n    }); // Add the channel to the map of channels with the\n    // topic as the key, so that it can be selected by\n    // topic later.\n\n    this.channels[params.topic] = channel;\n    this.allOn(params);\n    return channel;\n  },\n\n  /* push\n       Push an event to the server with data.\n       params <object>\n          topic <string>\n              The topic of the channel to push to.\n           event <string>\n              The event to send to the channel.\n           payload <object>\n              The data to send.\n           timeout <maybe int>\n              The timeout before retrying.\n  */\n  push: function push(params) {\n    var _this5 = this;\n\n    // Select the channel to push to.\n    var channel = this.find(params.topic);\n    var push = {};\n    /* Push the event and payload to the server, with or without a custom\n       timeout.\n    */\n\n    if (params.timeout && params.payload) {\n      push = channel.push(params.event, params.payload, params.timeout);\n    } else if (params.payload) {\n      push = channel.push(params.event, params.payload);\n    } else {\n      push = channel.push(params.event, {});\n    }\n\n    push.receive(\"ok\", function (payload) {\n      return _this5.channelSend(params.topic, \"PushOk\", {\n        event: params.event,\n        payload: payload,\n        ref: params.ref\n      });\n    }).receive(\"error\", function (payload) {\n      return _this5.channelSend(params.topic, \"PushError\", {\n        event: params.event,\n        payload: payload,\n        ref: params.ref\n      });\n    }).receive(\"timeout\", function () {\n      return _this5.channelSend(params.topic, \"PushTimeout\", {\n        event: params.event,\n        payload: params.payload,\n        ref: params.ref\n      });\n    });\n  },\n\n  /* on\n       Subscribe to a channel event.\n       Store them it be re-used if a channel is disconnected by the user, so\n      that it doesn't have to be sent over again from Elm.\n       params <object>\n          topic <string>\n              The topic of the channel to subscribe to.\n           event <string>\n              The event to subscribe to.\n  */\n  on: function on(params) {\n    var channel = this.find(params.topic);\n    var events = this.events[params.topic];\n\n    if (channel && !events) {\n      this.events[params.topic] = [params.event];\n      this.subscribe(channel, params.topic, params.event);\n    } else if (channel && events && events.indexOf(params.event) == -1) {\n      events.push(params.event);\n      this.subscribe(channel, params.topic, params.event);\n    }\n  },\n\n  /* allOn\n       Subscribe to channel events.\n       Store them to be re-used if a channel is disconnected by the user, so\n      that they don't have to be sent over again from Elm.\n       params <object>\n          topic <string>\n              The topic of the channel to subscribe to.\n           events <list string>\n              The events to subscribe to.\n  */\n  allOn: function allOn(params) {\n    for (var i = 0; i < params.events.length; i++) {\n      this.on({\n        topic: params.topic,\n        event: params.events[i]\n      });\n    }\n  },\n  subscribe: function subscribe(channel, topic, event) {\n    var _this6 = this;\n\n    channel.on(event, function (payload) {\n      return _this6.channelSend(topic, \"Message\", {\n        event: event,\n        payload: payload\n      });\n    });\n  },\n\n  /* off\n       Turn off a subscription to a channel event.\n       params <object>\n          topic <string>\n              The topic of the channel to unsubscribe to.\n           event <string>\n              The event to unsubscribe to.\n  */\n  off: function off(params) {\n    var channel = this.find(params.topic);\n    var events = this.events[params.topic];\n\n    if (channel && events && events.indexOf(params.event) != -1) {\n      channel.off(params.event);\n      events.splice(events.indexOf(params.event), 1);\n    }\n  },\n\n  /* allOff\n       Turn off subscriptions to channel events.\n       params <object>\n          topic <string>\n              The topic of the channel to subscribe to.\n           events <list string>\n              The events to subscribe to.\n  */\n  allOff: function allOff(params) {\n    for (var i = 0; i < params.events.length; i++) {\n      this.off({\n        topic: params.topic,\n        event: params.events[i]\n      });\n    }\n  },\n\n  /* leave\n       Leave the channel.\n       params <object>\n          topic <string>\n              The topic of the channel to leave.\n           timeout <maybe int>\n              The timeout before retrying.\n  */\n  leave: function leave(params) {\n    var _this7 = this;\n\n    // Select the channel to leave.\n    var channel = this.find(params.topic);\n    this.events[params.topic] = [];\n    channel.leave(params.timeout).receive(\"ok\", function (_) {\n      return _this7.leaveOk(params.topic);\n    });\n  },\n\n  /* leaveOk\n       Callback after leaving a channel.\n       topic <string>\n          The topic of the channel to leave.\n  */\n  leaveOk: function leaveOk(topic) {\n    this.channelSend(topic, \"LeaveOk\", {});\n    delete this.find(topic);\n  },\n\n  /* find\n       Find a channel by topic.\n       topic <string>\n          The topic of the channel to find.\n  */\n  find: function find(topic) {\n    return this.channels[topic];\n  },\n\n  /* channelSend\n       Send data to Elm.\n       As we can't be certain the ports have been set up, make checks before\n      trying to send the data, and report any errors to the console.\n        topic <string>\n          The channel topic.\n       msg <string>\n          The message to send through the port.\n       payload <json>|<elm comparable>\n          The data to send.\n  */\n  channelSend: function channelSend(topic, msg, payload) {\n    this.elmPorts.channelReceiver.send({\n      topic: topic,\n      msg: msg,\n      payload: payload\n    });\n  },\n\n  /********** Presence **********/\n\n  /* onDiff\n       Called when a user presence joins or leaves.\n       topic <string>\n          The channel topic.\n       diff <object>\n          The diff received from Phoenix Presence.\n  */\n  onDiff: function onDiff(topic, diff) {\n    var _this8 = this;\n\n    var currentPresence = this.presences[topic] || {};\n    var newPresence = this.phoenixPresence.syncDiff(currentPresence, diff, function (id, current, newPres) {\n      return _this8.presenceSend(topic, \"Join\", _this8.packageForElm(id, newPres));\n    }, function (id, current, leftPres) {\n      return _this8.presenceSend(topic, \"Leave\", _this8.packageForElm(id, leftPres));\n    });\n    this.presenceSend(topic, \"Diff\", {\n      leaves: this.toList(diff.leaves),\n      joins: this.toList(diff.joins)\n    });\n    this.presenceSend(topic, \"State\", {\n      list: this.phoenixPresence.list(newPresence, function (id, metas) {\n        return _this8.packageForElm(id, metas);\n      })\n    });\n    this.presences[topic] = newPresence;\n  },\n\n  /* onState\n       Called when a user presence joins or leaves.\n       topic <string>\n          The channel topic.\n       state <object>\n          The state received from Phoenix Presence.\n  */\n  onState: function onState(topic, state) {\n    var _this9 = this;\n\n    var currentPresence = this.presences[topic];\n    var newPresence = this.phoenixPresence.syncState(currentPresence, state, function (id, current, newPres) {\n      return _this9.presenceSend(topic, \"Join\", _this9.packageForElm(id, newPres));\n    }, function (id, current, leftPres) {\n      return _this9.presenceSend(topic, \"Leave\", _this9.packageForElm(id, leftPres));\n    });\n    this.presenceSend(topic, \"State\", {\n      list: this.phoenixPresence.list(newPresence, function (id, presence) {\n        return _this9.packageForElm(id, presence);\n      })\n    });\n    this.presences[topic] = newPresence;\n  },\n\n  /* toList\n       List the presences in a consistent form that is easier to handle in\n      Elm.\n       presence <object>\n          The raw presence data received from the server.\n               {\"id1\": metas, \"id2\": metas, ... }\n       Returns:\n          [{id: \"id1\", metas: metas}, {id: \"id2\", metas: metas}, ... ]\n  */\n  toList: function toList(presence) {\n    var list = [];\n\n    for (var id in presence) {\n      list.push(this.packageForElm(id, presence[id]));\n    }\n\n    return list;\n  },\n\n  /* packageForElm\n       Package the presence into a consistent form that is easier to handle in\n      Elm.\n       id <string>\n          The user id.\n       presence <object>\n          The raw presence data received from the server.\n       The metas key will always be present.\n       The user key may be present if the fetch/2 callback is being used in\n      the Elixir Presence module to fetch user information from the DB.\n       The whole presence Object is also provided in order to enable decoding\n      of additional data stored on the Presence that can't be foreseen.\n  */\n  packageForElm: function packageForElm(id, presence) {\n    return {\n      id: id,\n      metas: presence.metas,\n      user: presence.user || null,\n      presence: presence\n    };\n  },\n\n  /* presenceSend\n       Send data to Elm.\n       As we can't be certain the ports have been set up, make checks before\n      trying to send the data, and report any errors to the console.\n       topic <string>\n          The channel topic.\n       msg <string>\n          The message to send through the port.\n       payload <json>|<elm comparable>\n          The data to send.\n  */\n  presenceSend: function presenceSend(topic, msg, payload) {\n    if (this.elmPorts.presenceReceiver) {\n      this.elmPorts.presenceReceiver.send({\n        topic: topic,\n        msg: msg,\n        payload: payload\n      });\n    } else {\n      console.warn(\"No presenceReceiver port found.\");\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ElmPhoenixWebSocket);\n\n//# sourceURL=webpack:///./js/elmPhoenixWebSocket.js?");

/***/ }),

/***/ 0:
/*!*************************!*\
  !*** multi ./js/app.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./js/app.js */\"./js/app.js\");\n\n\n//# sourceURL=webpack:///multi_./js/app.js?");

/***/ })

/******/ });